/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_mocks_browser_ts"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/YTE2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9kMjQyIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/path-to-regexp/dist.es2015/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/path-to-regexp/dist.es2015/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: function() { return /* binding */ compile; },\n/* harmony export */   match: function() { return /* binding */ match; },\n/* harmony export */   parse: function() { return /* binding */ parse; },\n/* harmony export */   pathToRegexp: function() { return /* binding */ pathToRegexp; },\n/* harmony export */   regexpToFunction: function() { return /* binding */ regexpToFunction; },\n/* harmony export */   tokensToFunction: function() { return /* binding */ tokensToFunction; },\n/* harmony export */   tokensToRegexp: function() { return /* binding */ tokensToRegexp; }\n/* harmony export */ });\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a, _b = options.delimiter, delimiter = _b === void 0 ? \"/#?\" : _b;\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    var isSafe = function (value) {\n        for (var _i = 0, delimiter_1 = delimiter; _i < delimiter_1.length; _i++) {\n            var char = delimiter_1[_i];\n            if (value.indexOf(char) > -1)\n                return true;\n        }\n        return false;\n    };\n    var safePattern = function (prefix) {\n        var prev = result[result.length - 1];\n        var prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n        if (prev && !prevText) {\n            throw new TypeError(\"Must have text between two parameters, missing text after \\\"\".concat(prev.name, \"\\\"\"));\n        }\n        if (!prevText || isSafe(prevText))\n            return \"[^\".concat(escapeString(delimiter), \"]+?\");\n        return \"(?:(?!\".concat(escapeString(prevText), \")[^\").concat(escapeString(delimiter), \"])+?\");\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || safePattern(prefix),\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? safePattern(prefix) : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        throw new TypeError(\"Can not repeat \\\"\".concat(token.name, \"\\\" without a prefix and suffix\"));\n                    }\n                    route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/path-to-regexp/dist.es2015/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/index.js":
/*!***************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastPathLookup: function() { return /* reexport safe */ _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   getEmptyResult: function() { return /* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.getEmptyResult; },\n/* harmony export */   parseImpl: function() { return /* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.parseImpl; },\n/* harmony export */   resetResult: function() { return /* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.resetResult; },\n/* harmony export */   setDefaults: function() { return /* reexport safe */ _src_options__WEBPACK_IMPORTED_MODULE_2__.setDefaults; }\n/* harmony export */ });\n/* harmony import */ var _src_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/factory */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/factory.js\");\n/* harmony import */ var _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/lookup/fast-path */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\");\n/* harmony import */ var _src_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/options */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/options.js\");\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdFO0FBQ0w7QUFDdkI7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvaW5kZXguanM/YTZmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBwYXJzZUltcGwsIGdldEVtcHR5UmVzdWx0LCByZXNldFJlc3VsdCwgfSBmcm9tICcuL3NyYy9mYWN0b3J5JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZmFzdFBhdGhMb29rdXAgfSBmcm9tICcuL3NyYy9sb29rdXAvZmFzdC1wYXRoJztcbmV4cG9ydCB7IHNldERlZmF1bHRzIH0gZnJvbSAnLi9zcmMvb3B0aW9ucyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getDomainWithoutSuffix; }\n/* harmony export */ });\n/**\n * Return the part of domain without suffix.\n *\n * Example: for domain 'foo.com', the result would be 'foo'.\n */\nfunction getDomainWithoutSuffix(domain, suffix) {\n    // Note: here `domain` and `suffix` cannot have the same length because in\n    // this case we set `domain` to `null` instead. It is thus safe to assume\n    // that `suffix` is shorter than `domain`.\n    return domain.slice(0, -suffix.length - 1);\n}\n//# sourceMappingURL=domain-without-suffix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9kb21haW4td2l0aG91dC1zdWZmaXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLXdpdGhvdXQtc3VmZml4LmpzP2ViMmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm4gdGhlIHBhcnQgb2YgZG9tYWluIHdpdGhvdXQgc3VmZml4LlxuICpcbiAqIEV4YW1wbGU6IGZvciBkb21haW4gJ2Zvby5jb20nLCB0aGUgcmVzdWx0IHdvdWxkIGJlICdmb28nLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb21haW5XaXRob3V0U3VmZml4KGRvbWFpbiwgc3VmZml4KSB7XG4gICAgLy8gTm90ZTogaGVyZSBgZG9tYWluYCBhbmQgYHN1ZmZpeGAgY2Fubm90IGhhdmUgdGhlIHNhbWUgbGVuZ3RoIGJlY2F1c2UgaW5cbiAgICAvLyB0aGlzIGNhc2Ugd2Ugc2V0IGBkb21haW5gIHRvIGBudWxsYCBpbnN0ZWFkLiBJdCBpcyB0aHVzIHNhZmUgdG8gYXNzdW1lXG4gICAgLy8gdGhhdCBgc3VmZml4YCBpcyBzaG9ydGVyIHRoYW4gYGRvbWFpbmAuXG4gICAgcmV0dXJuIGRvbWFpbi5zbGljZSgwLCAtc3VmZml4Lmxlbmd0aCAtIDEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZG9tYWluLXdpdGhvdXQtc3VmZml4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/domain.js":
/*!********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getDomain; }\n/* harmony export */ });\n/**\n * Check if `vhost` is a valid suffix of `hostname` (top-domain)\n *\n * It means that `vhost` needs to be a suffix of `hostname` and we then need to\n * make sure that: either they are equal, or the character preceding `vhost` in\n * `hostname` is a '.' (it should not be a partial label).\n *\n * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok\n * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok\n * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok\n */\nfunction shareSameDomainSuffix(hostname, vhost) {\n    if (hostname.endsWith(vhost)) {\n        return (hostname.length === vhost.length ||\n            hostname[hostname.length - vhost.length - 1] === '.');\n    }\n    return false;\n}\n/**\n * Given a hostname and its public suffix, extract the general domain.\n */\nfunction extractDomainWithSuffix(hostname, publicSuffix) {\n    // Locate the index of the last '.' in the part of the `hostname` preceding\n    // the public suffix.\n    //\n    // examples:\n    //   1. not.evil.co.uk  => evil.co.uk\n    //         ^    ^\n    //         |    | start of public suffix\n    //         | index of the last dot\n    //\n    //   2. example.co.uk   => example.co.uk\n    //     ^       ^\n    //     |       | start of public suffix\n    //     |\n    //     | (-1) no dot found before the public suffix\n    const publicSuffixIndex = hostname.length - publicSuffix.length - 2;\n    const lastDotBeforeSuffixIndex = hostname.lastIndexOf('.', publicSuffixIndex);\n    // No '.' found, then `hostname` is the general domain (no sub-domain)\n    if (lastDotBeforeSuffixIndex === -1) {\n        return hostname;\n    }\n    // Extract the part between the last '.'\n    return hostname.slice(lastDotBeforeSuffixIndex + 1);\n}\n/**\n * Detects the domain based on rules and upon and a host string\n */\nfunction getDomain(suffix, hostname, options) {\n    // Check if `hostname` ends with a member of `validHosts`.\n    if (options.validHosts !== null) {\n        const validHosts = options.validHosts;\n        for (const vhost of validHosts) {\n            if ( /*@__INLINE__*/shareSameDomainSuffix(hostname, vhost)) {\n                return vhost;\n            }\n        }\n    }\n    let numberOfLeadingDots = 0;\n    if (hostname.startsWith('.')) {\n        while (numberOfLeadingDots < hostname.length &&\n            hostname[numberOfLeadingDots] === '.') {\n            numberOfLeadingDots += 1;\n        }\n    }\n    // If `hostname` is a valid public suffix, then there is no domain to return.\n    // Since we already know that `getPublicSuffix` returns a suffix of `hostname`\n    // there is no need to perform a string comparison and we only compare the\n    // size.\n    if (suffix.length === hostname.length - numberOfLeadingDots) {\n        return null;\n    }\n    // To extract the general domain, we start by identifying the public suffix\n    // (if any), then consider the domain to be the public suffix with one added\n    // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:\n    // `co.uk`, then we take one more level: `evil`, giving the final result:\n    // `evil.co.uk`).\n    return /*@__INLINE__*/ extractDomainWithSuffix(hostname, suffix);\n}\n//# sourceMappingURL=domain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9kb21haW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2RvbWFpbi5qcz9lMTNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2sgaWYgYHZob3N0YCBpcyBhIHZhbGlkIHN1ZmZpeCBvZiBgaG9zdG5hbWVgICh0b3AtZG9tYWluKVxuICpcbiAqIEl0IG1lYW5zIHRoYXQgYHZob3N0YCBuZWVkcyB0byBiZSBhIHN1ZmZpeCBvZiBgaG9zdG5hbWVgIGFuZCB3ZSB0aGVuIG5lZWQgdG9cbiAqIG1ha2Ugc3VyZSB0aGF0OiBlaXRoZXIgdGhleSBhcmUgZXF1YWwsIG9yIHRoZSBjaGFyYWN0ZXIgcHJlY2VkaW5nIGB2aG9zdGAgaW5cbiAqIGBob3N0bmFtZWAgaXMgYSAnLicgKGl0IHNob3VsZCBub3QgYmUgYSBwYXJ0aWFsIGxhYmVsKS5cbiAqXG4gKiAqIGhvc3RuYW1lID0gJ25vdC5ldmlsLmNvbScgYW5kIHZob3N0ID0gJ3ZpbC5jb20nICAgICAgPT4gbm90IG9rXG4gKiAqIGhvc3RuYW1lID0gJ25vdC5ldmlsLmNvbScgYW5kIHZob3N0ID0gJ2V2aWwuY29tJyAgICAgPT4gb2tcbiAqICogaG9zdG5hbWUgPSAnbm90LmV2aWwuY29tJyBhbmQgdmhvc3QgPSAnbm90LmV2aWwuY29tJyA9PiBva1xuICovXG5mdW5jdGlvbiBzaGFyZVNhbWVEb21haW5TdWZmaXgoaG9zdG5hbWUsIHZob3N0KSB7XG4gICAgaWYgKGhvc3RuYW1lLmVuZHNXaXRoKHZob3N0KSkge1xuICAgICAgICByZXR1cm4gKGhvc3RuYW1lLmxlbmd0aCA9PT0gdmhvc3QubGVuZ3RoIHx8XG4gICAgICAgICAgICBob3N0bmFtZVtob3N0bmFtZS5sZW5ndGggLSB2aG9zdC5sZW5ndGggLSAxXSA9PT0gJy4nKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBHaXZlbiBhIGhvc3RuYW1lIGFuZCBpdHMgcHVibGljIHN1ZmZpeCwgZXh0cmFjdCB0aGUgZ2VuZXJhbCBkb21haW4uXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3REb21haW5XaXRoU3VmZml4KGhvc3RuYW1lLCBwdWJsaWNTdWZmaXgpIHtcbiAgICAvLyBMb2NhdGUgdGhlIGluZGV4IG9mIHRoZSBsYXN0ICcuJyBpbiB0aGUgcGFydCBvZiB0aGUgYGhvc3RuYW1lYCBwcmVjZWRpbmdcbiAgICAvLyB0aGUgcHVibGljIHN1ZmZpeC5cbiAgICAvL1xuICAgIC8vIGV4YW1wbGVzOlxuICAgIC8vICAgMS4gbm90LmV2aWwuY28udWsgID0+IGV2aWwuY28udWtcbiAgICAvLyAgICAgICAgIF4gICAgXlxuICAgIC8vICAgICAgICAgfCAgICB8IHN0YXJ0IG9mIHB1YmxpYyBzdWZmaXhcbiAgICAvLyAgICAgICAgIHwgaW5kZXggb2YgdGhlIGxhc3QgZG90XG4gICAgLy9cbiAgICAvLyAgIDIuIGV4YW1wbGUuY28udWsgICA9PiBleGFtcGxlLmNvLnVrXG4gICAgLy8gICAgIF4gICAgICAgXlxuICAgIC8vICAgICB8ICAgICAgIHwgc3RhcnQgb2YgcHVibGljIHN1ZmZpeFxuICAgIC8vICAgICB8XG4gICAgLy8gICAgIHwgKC0xKSBubyBkb3QgZm91bmQgYmVmb3JlIHRoZSBwdWJsaWMgc3VmZml4XG4gICAgY29uc3QgcHVibGljU3VmZml4SW5kZXggPSBob3N0bmFtZS5sZW5ndGggLSBwdWJsaWNTdWZmaXgubGVuZ3RoIC0gMjtcbiAgICBjb25zdCBsYXN0RG90QmVmb3JlU3VmZml4SW5kZXggPSBob3N0bmFtZS5sYXN0SW5kZXhPZignLicsIHB1YmxpY1N1ZmZpeEluZGV4KTtcbiAgICAvLyBObyAnLicgZm91bmQsIHRoZW4gYGhvc3RuYW1lYCBpcyB0aGUgZ2VuZXJhbCBkb21haW4gKG5vIHN1Yi1kb21haW4pXG4gICAgaWYgKGxhc3REb3RCZWZvcmVTdWZmaXhJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIGhvc3RuYW1lO1xuICAgIH1cbiAgICAvLyBFeHRyYWN0IHRoZSBwYXJ0IGJldHdlZW4gdGhlIGxhc3QgJy4nXG4gICAgcmV0dXJuIGhvc3RuYW1lLnNsaWNlKGxhc3REb3RCZWZvcmVTdWZmaXhJbmRleCArIDEpO1xufVxuLyoqXG4gKiBEZXRlY3RzIHRoZSBkb21haW4gYmFzZWQgb24gcnVsZXMgYW5kIHVwb24gYW5kIGEgaG9zdCBzdHJpbmdcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RG9tYWluKHN1ZmZpeCwgaG9zdG5hbWUsIG9wdGlvbnMpIHtcbiAgICAvLyBDaGVjayBpZiBgaG9zdG5hbWVgIGVuZHMgd2l0aCBhIG1lbWJlciBvZiBgdmFsaWRIb3N0c2AuXG4gICAgaWYgKG9wdGlvbnMudmFsaWRIb3N0cyAhPT0gbnVsbCkge1xuICAgICAgICBjb25zdCB2YWxpZEhvc3RzID0gb3B0aW9ucy52YWxpZEhvc3RzO1xuICAgICAgICBmb3IgKGNvbnN0IHZob3N0IG9mIHZhbGlkSG9zdHMpIHtcbiAgICAgICAgICAgIGlmICggLypAX19JTkxJTkVfXyovc2hhcmVTYW1lRG9tYWluU3VmZml4KGhvc3RuYW1lLCB2aG9zdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmhvc3Q7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IG51bWJlck9mTGVhZGluZ0RvdHMgPSAwO1xuICAgIGlmIChob3N0bmFtZS5zdGFydHNXaXRoKCcuJykpIHtcbiAgICAgICAgd2hpbGUgKG51bWJlck9mTGVhZGluZ0RvdHMgPCBob3N0bmFtZS5sZW5ndGggJiZcbiAgICAgICAgICAgIGhvc3RuYW1lW251bWJlck9mTGVhZGluZ0RvdHNdID09PSAnLicpIHtcbiAgICAgICAgICAgIG51bWJlck9mTGVhZGluZ0RvdHMgKz0gMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiBgaG9zdG5hbWVgIGlzIGEgdmFsaWQgcHVibGljIHN1ZmZpeCwgdGhlbiB0aGVyZSBpcyBubyBkb21haW4gdG8gcmV0dXJuLlxuICAgIC8vIFNpbmNlIHdlIGFscmVhZHkga25vdyB0aGF0IGBnZXRQdWJsaWNTdWZmaXhgIHJldHVybnMgYSBzdWZmaXggb2YgYGhvc3RuYW1lYFxuICAgIC8vIHRoZXJlIGlzIG5vIG5lZWQgdG8gcGVyZm9ybSBhIHN0cmluZyBjb21wYXJpc29uIGFuZCB3ZSBvbmx5IGNvbXBhcmUgdGhlXG4gICAgLy8gc2l6ZS5cbiAgICBpZiAoc3VmZml4Lmxlbmd0aCA9PT0gaG9zdG5hbWUubGVuZ3RoIC0gbnVtYmVyT2ZMZWFkaW5nRG90cykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gVG8gZXh0cmFjdCB0aGUgZ2VuZXJhbCBkb21haW4sIHdlIHN0YXJ0IGJ5IGlkZW50aWZ5aW5nIHRoZSBwdWJsaWMgc3VmZml4XG4gICAgLy8gKGlmIGFueSksIHRoZW4gY29uc2lkZXIgdGhlIGRvbWFpbiB0byBiZSB0aGUgcHVibGljIHN1ZmZpeCB3aXRoIG9uZSBhZGRlZFxuICAgIC8vIGxldmVsIG9mIGRlcHRoLiAoZS5nLjogaWYgaG9zdG5hbWUgaXMgYG5vdC5ldmlsLmNvLnVrYCBhbmQgcHVibGljIHN1ZmZpeDpcbiAgICAvLyBgY28udWtgLCB0aGVuIHdlIHRha2Ugb25lIG1vcmUgbGV2ZWw6IGBldmlsYCwgZ2l2aW5nIHRoZSBmaW5hbCByZXN1bHQ6XG4gICAgLy8gYGV2aWwuY28udWtgKS5cbiAgICByZXR1cm4gLypAX19JTkxJTkVfXyovIGV4dHJhY3REb21haW5XaXRoU3VmZml4KGhvc3RuYW1lLCBzdWZmaXgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZG9tYWluLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/domain.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/extract-hostname.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ extractHostname; }\n/* harmony export */ });\n/**\n * @param url - URL we want to extract a hostname from.\n * @param urlIsValidHostname - hint from caller; true if `url` is already a valid hostname.\n */\nfunction extractHostname(url, urlIsValidHostname) {\n    let start = 0;\n    let end = url.length;\n    let hasUpper = false;\n    // If url is not already a valid hostname, then try to extract hostname.\n    if (!urlIsValidHostname) {\n        // Special handling of data URLs\n        if (url.startsWith('data:')) {\n            return null;\n        }\n        // Trim leading spaces\n        while (start < url.length && url.charCodeAt(start) <= 32) {\n            start += 1;\n        }\n        // Trim trailing spaces\n        while (end > start + 1 && url.charCodeAt(end - 1) <= 32) {\n            end -= 1;\n        }\n        // Skip scheme.\n        if (url.charCodeAt(start) === 47 /* '/' */ &&\n            url.charCodeAt(start + 1) === 47 /* '/' */) {\n            start += 2;\n        }\n        else {\n            const indexOfProtocol = url.indexOf(':/', start);\n            if (indexOfProtocol !== -1) {\n                // Implement fast-path for common protocols. We expect most protocols\n                // should be one of these 4 and thus we will not need to perform the\n                // more expansive validity check most of the time.\n                const protocolSize = indexOfProtocol - start;\n                const c0 = url.charCodeAt(start);\n                const c1 = url.charCodeAt(start + 1);\n                const c2 = url.charCodeAt(start + 2);\n                const c3 = url.charCodeAt(start + 3);\n                const c4 = url.charCodeAt(start + 4);\n                if (protocolSize === 5 &&\n                    c0 === 104 /* 'h' */ &&\n                    c1 === 116 /* 't' */ &&\n                    c2 === 116 /* 't' */ &&\n                    c3 === 112 /* 'p' */ &&\n                    c4 === 115 /* 's' */) {\n                    // https\n                }\n                else if (protocolSize === 4 &&\n                    c0 === 104 /* 'h' */ &&\n                    c1 === 116 /* 't' */ &&\n                    c2 === 116 /* 't' */ &&\n                    c3 === 112 /* 'p' */) {\n                    // http\n                }\n                else if (protocolSize === 3 &&\n                    c0 === 119 /* 'w' */ &&\n                    c1 === 115 /* 's' */ &&\n                    c2 === 115 /* 's' */) {\n                    // wss\n                }\n                else if (protocolSize === 2 &&\n                    c0 === 119 /* 'w' */ &&\n                    c1 === 115 /* 's' */) {\n                    // ws\n                }\n                else {\n                    // Check that scheme is valid\n                    for (let i = start; i < indexOfProtocol; i += 1) {\n                        const lowerCaseCode = url.charCodeAt(i) | 32;\n                        if (!(((lowerCaseCode >= 97 && lowerCaseCode <= 122) || // [a, z]\n                            (lowerCaseCode >= 48 && lowerCaseCode <= 57) || // [0, 9]\n                            lowerCaseCode === 46 || // '.'\n                            lowerCaseCode === 45 || // '-'\n                            lowerCaseCode === 43) // '+'\n                        )) {\n                            return null;\n                        }\n                    }\n                }\n                // Skip 0, 1 or more '/' after ':/'\n                start = indexOfProtocol + 2;\n                while (url.charCodeAt(start) === 47 /* '/' */) {\n                    start += 1;\n                }\n            }\n        }\n        // Detect first occurrence of '/', '?' or '#'. We also keep track of the\n        // last occurrence of '@', ']' or ':' to speed-up subsequent parsing of\n        // (respectively), identifier, ipv6 or port.\n        let indexOfIdentifier = -1;\n        let indexOfClosingBracket = -1;\n        let indexOfPort = -1;\n        for (let i = start; i < end; i += 1) {\n            const code = url.charCodeAt(i);\n            if (code === 35 || // '#'\n                code === 47 || // '/'\n                code === 63 // '?'\n            ) {\n                end = i;\n                break;\n            }\n            else if (code === 64) {\n                // '@'\n                indexOfIdentifier = i;\n            }\n            else if (code === 93) {\n                // ']'\n                indexOfClosingBracket = i;\n            }\n            else if (code === 58) {\n                // ':'\n                indexOfPort = i;\n            }\n            else if (code >= 65 && code <= 90) {\n                hasUpper = true;\n            }\n        }\n        // Detect identifier: '@'\n        if (indexOfIdentifier !== -1 &&\n            indexOfIdentifier > start &&\n            indexOfIdentifier < end) {\n            start = indexOfIdentifier + 1;\n        }\n        // Handle ipv6 addresses\n        if (url.charCodeAt(start) === 91 /* '[' */) {\n            if (indexOfClosingBracket !== -1) {\n                return url.slice(start + 1, indexOfClosingBracket).toLowerCase();\n            }\n            return null;\n        }\n        else if (indexOfPort !== -1 && indexOfPort > start && indexOfPort < end) {\n            // Detect port: ':'\n            end = indexOfPort;\n        }\n    }\n    // Trim trailing dots\n    while (end > start + 1 && url.charCodeAt(end - 1) === 46 /* '.' */) {\n        end -= 1;\n    }\n    const hostname = start !== 0 || end !== url.length ? url.slice(start, end) : url;\n    if (hasUpper) {\n        return hostname.toLowerCase();\n    }\n    return hostname;\n}\n//# sourceMappingURL=extract-hostname.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/factory.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/factory.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmptyResult: function() { return /* binding */ getEmptyResult; },\n/* harmony export */   parseImpl: function() { return /* binding */ parseImpl; },\n/* harmony export */   resetResult: function() { return /* binding */ resetResult; }\n/* harmony export */ });\n/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domain */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/domain.js\");\n/* harmony import */ var _domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domain-without-suffix */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\");\n/* harmony import */ var _extract_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extract-hostname */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\");\n/* harmony import */ var _is_ip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-ip */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/is-ip.js\");\n/* harmony import */ var _is_valid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is-valid */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/is-valid.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./options */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/options.js\");\n/* harmony import */ var _subdomain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./subdomain */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/subdomain.js\");\n/**\n * Implement a factory allowing to plug different implementations of suffix\n * lookup (e.g.: using a trie or the packed hashes datastructures). This is used\n * and exposed in `tldts.ts` and `tldts-experimental.ts` bundle entrypoints.\n */\n\n\n\n\n\n\n\nfunction getEmptyResult() {\n    return {\n        domain: null,\n        domainWithoutSuffix: null,\n        hostname: null,\n        isIcann: null,\n        isIp: null,\n        isPrivate: null,\n        publicSuffix: null,\n        subdomain: null,\n    };\n}\nfunction resetResult(result) {\n    result.domain = null;\n    result.domainWithoutSuffix = null;\n    result.hostname = null;\n    result.isIcann = null;\n    result.isIp = null;\n    result.isPrivate = null;\n    result.publicSuffix = null;\n    result.subdomain = null;\n}\nfunction parseImpl(url, step, suffixLookup, partialOptions, result) {\n    const options = /*@__INLINE__*/ (0,_options__WEBPACK_IMPORTED_MODULE_5__.setDefaults)(partialOptions);\n    // Very fast approximate check to make sure `url` is a string. This is needed\n    // because the library will not necessarily be used in a typed setup and\n    // values of arbitrary types might be given as argument.\n    if (typeof url !== 'string') {\n        return result;\n    }\n    // Extract hostname from `url` only if needed. This can be made optional\n    // using `options.extractHostname`. This option will typically be used\n    // whenever we are sure the inputs to `parse` are already hostnames and not\n    // arbitrary URLs.\n    //\n    // `mixedInput` allows to specify if we expect a mix of URLs and hostnames\n    // as input. If only hostnames are expected then `extractHostname` can be\n    // set to `false` to speed-up parsing. If only URLs are expected then\n    // `mixedInputs` can be set to `false`. The `mixedInputs` is only a hint\n    // and will not change the behavior of the library.\n    if (!options.extractHostname) {\n        result.hostname = url;\n    }\n    else if (options.mixedInputs) {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, (0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(url));\n    }\n    else {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, false);\n    }\n    // Check if `hostname` is a valid ip address\n    if (options.detectIp && result.hostname !== null) {\n        result.isIp = (0,_is_ip__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(result.hostname);\n        if (result.isIp) {\n            return result;\n        }\n    }\n    // Perform hostname validation if enabled. If hostname is not valid, no need to\n    // go further as there will be no valid domain or sub-domain. This validation\n    // is applied before any early returns to ensure consistent behavior across\n    // all API methods including getHostname().\n    if (options.validateHostname &&\n        options.extractHostname &&\n        result.hostname !== null &&\n        !(0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(result.hostname)) {\n        result.hostname = null;\n        return result;\n    }\n    if (step === 0 /* FLAG.HOSTNAME */ || result.hostname === null) {\n        return result;\n    }\n    // Extract public suffix\n    suffixLookup(result.hostname, options, result);\n    if (step === 2 /* FLAG.PUBLIC_SUFFIX */ || result.publicSuffix === null) {\n        return result;\n    }\n    // Extract domain\n    result.domain = (0,_domain__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(result.publicSuffix, result.hostname, options);\n    if (step === 3 /* FLAG.DOMAIN */ || result.domain === null) {\n        return result;\n    }\n    // Extract subdomain\n    result.subdomain = (0,_subdomain__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(result.hostname, result.domain);\n    if (step === 4 /* FLAG.SUB_DOMAIN */) {\n        return result;\n    }\n    // Extract domain without suffix\n    result.domainWithoutSuffix = (0,_domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(result.domain, result.publicSuffix);\n    return result;\n}\n//# sourceMappingURL=factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lDO0FBQzRCO0FBQ1o7QUFDdEI7QUFDYztBQUNEO0FBQ0Q7QUFDaEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9DQUFvQyxxREFBVztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDZEQUFlLE1BQU0scURBQWU7QUFDOUQ7QUFDQTtBQUNBLDBCQUEwQiw2REFBZTtBQUN6QztBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQUk7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMscURBQWU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1EQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNEQUFZO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtFQUFzQjtBQUN2RDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2ZhY3RvcnkuanM/ODA1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEltcGxlbWVudCBhIGZhY3RvcnkgYWxsb3dpbmcgdG8gcGx1ZyBkaWZmZXJlbnQgaW1wbGVtZW50YXRpb25zIG9mIHN1ZmZpeFxuICogbG9va3VwIChlLmcuOiB1c2luZyBhIHRyaWUgb3IgdGhlIHBhY2tlZCBoYXNoZXMgZGF0YXN0cnVjdHVyZXMpLiBUaGlzIGlzIHVzZWRcbiAqIGFuZCBleHBvc2VkIGluIGB0bGR0cy50c2AgYW5kIGB0bGR0cy1leHBlcmltZW50YWwudHNgIGJ1bmRsZSBlbnRyeXBvaW50cy5cbiAqL1xuaW1wb3J0IGdldERvbWFpbiBmcm9tICcuL2RvbWFpbic7XG5pbXBvcnQgZ2V0RG9tYWluV2l0aG91dFN1ZmZpeCBmcm9tICcuL2RvbWFpbi13aXRob3V0LXN1ZmZpeCc7XG5pbXBvcnQgZXh0cmFjdEhvc3RuYW1lIGZyb20gJy4vZXh0cmFjdC1ob3N0bmFtZSc7XG5pbXBvcnQgaXNJcCBmcm9tICcuL2lzLWlwJztcbmltcG9ydCBpc1ZhbGlkSG9zdG5hbWUgZnJvbSAnLi9pcy12YWxpZCc7XG5pbXBvcnQgeyBzZXREZWZhdWx0cyB9IGZyb20gJy4vb3B0aW9ucyc7XG5pbXBvcnQgZ2V0U3ViZG9tYWluIGZyb20gJy4vc3ViZG9tYWluJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRFbXB0eVJlc3VsdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBkb21haW46IG51bGwsXG4gICAgICAgIGRvbWFpbldpdGhvdXRTdWZmaXg6IG51bGwsXG4gICAgICAgIGhvc3RuYW1lOiBudWxsLFxuICAgICAgICBpc0ljYW5uOiBudWxsLFxuICAgICAgICBpc0lwOiBudWxsLFxuICAgICAgICBpc1ByaXZhdGU6IG51bGwsXG4gICAgICAgIHB1YmxpY1N1ZmZpeDogbnVsbCxcbiAgICAgICAgc3ViZG9tYWluOiBudWxsLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzZXRSZXN1bHQocmVzdWx0KSB7XG4gICAgcmVzdWx0LmRvbWFpbiA9IG51bGw7XG4gICAgcmVzdWx0LmRvbWFpbldpdGhvdXRTdWZmaXggPSBudWxsO1xuICAgIHJlc3VsdC5ob3N0bmFtZSA9IG51bGw7XG4gICAgcmVzdWx0LmlzSWNhbm4gPSBudWxsO1xuICAgIHJlc3VsdC5pc0lwID0gbnVsbDtcbiAgICByZXN1bHQuaXNQcml2YXRlID0gbnVsbDtcbiAgICByZXN1bHQucHVibGljU3VmZml4ID0gbnVsbDtcbiAgICByZXN1bHQuc3ViZG9tYWluID0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUltcGwodXJsLCBzdGVwLCBzdWZmaXhMb29rdXAsIHBhcnRpYWxPcHRpb25zLCByZXN1bHQpIHtcbiAgICBjb25zdCBvcHRpb25zID0gLypAX19JTkxJTkVfXyovIHNldERlZmF1bHRzKHBhcnRpYWxPcHRpb25zKTtcbiAgICAvLyBWZXJ5IGZhc3QgYXBwcm94aW1hdGUgY2hlY2sgdG8gbWFrZSBzdXJlIGB1cmxgIGlzIGEgc3RyaW5nLiBUaGlzIGlzIG5lZWRlZFxuICAgIC8vIGJlY2F1c2UgdGhlIGxpYnJhcnkgd2lsbCBub3QgbmVjZXNzYXJpbHkgYmUgdXNlZCBpbiBhIHR5cGVkIHNldHVwIGFuZFxuICAgIC8vIHZhbHVlcyBvZiBhcmJpdHJhcnkgdHlwZXMgbWlnaHQgYmUgZ2l2ZW4gYXMgYXJndW1lbnQuXG4gICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIEV4dHJhY3QgaG9zdG5hbWUgZnJvbSBgdXJsYCBvbmx5IGlmIG5lZWRlZC4gVGhpcyBjYW4gYmUgbWFkZSBvcHRpb25hbFxuICAgIC8vIHVzaW5nIGBvcHRpb25zLmV4dHJhY3RIb3N0bmFtZWAuIFRoaXMgb3B0aW9uIHdpbGwgdHlwaWNhbGx5IGJlIHVzZWRcbiAgICAvLyB3aGVuZXZlciB3ZSBhcmUgc3VyZSB0aGUgaW5wdXRzIHRvIGBwYXJzZWAgYXJlIGFscmVhZHkgaG9zdG5hbWVzIGFuZCBub3RcbiAgICAvLyBhcmJpdHJhcnkgVVJMcy5cbiAgICAvL1xuICAgIC8vIGBtaXhlZElucHV0YCBhbGxvd3MgdG8gc3BlY2lmeSBpZiB3ZSBleHBlY3QgYSBtaXggb2YgVVJMcyBhbmQgaG9zdG5hbWVzXG4gICAgLy8gYXMgaW5wdXQuIElmIG9ubHkgaG9zdG5hbWVzIGFyZSBleHBlY3RlZCB0aGVuIGBleHRyYWN0SG9zdG5hbWVgIGNhbiBiZVxuICAgIC8vIHNldCB0byBgZmFsc2VgIHRvIHNwZWVkLXVwIHBhcnNpbmcuIElmIG9ubHkgVVJMcyBhcmUgZXhwZWN0ZWQgdGhlblxuICAgIC8vIGBtaXhlZElucHV0c2AgY2FuIGJlIHNldCB0byBgZmFsc2VgLiBUaGUgYG1peGVkSW5wdXRzYCBpcyBvbmx5IGEgaGludFxuICAgIC8vIGFuZCB3aWxsIG5vdCBjaGFuZ2UgdGhlIGJlaGF2aW9yIG9mIHRoZSBsaWJyYXJ5LlxuICAgIGlmICghb3B0aW9ucy5leHRyYWN0SG9zdG5hbWUpIHtcbiAgICAgICAgcmVzdWx0Lmhvc3RuYW1lID0gdXJsO1xuICAgIH1cbiAgICBlbHNlIGlmIChvcHRpb25zLm1peGVkSW5wdXRzKSB7XG4gICAgICAgIHJlc3VsdC5ob3N0bmFtZSA9IGV4dHJhY3RIb3N0bmFtZSh1cmwsIGlzVmFsaWRIb3N0bmFtZSh1cmwpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlc3VsdC5ob3N0bmFtZSA9IGV4dHJhY3RIb3N0bmFtZSh1cmwsIGZhbHNlKTtcbiAgICB9XG4gICAgLy8gQ2hlY2sgaWYgYGhvc3RuYW1lYCBpcyBhIHZhbGlkIGlwIGFkZHJlc3NcbiAgICBpZiAob3B0aW9ucy5kZXRlY3RJcCAmJiByZXN1bHQuaG9zdG5hbWUgIT09IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LmlzSXAgPSBpc0lwKHJlc3VsdC5ob3N0bmFtZSk7XG4gICAgICAgIGlmIChyZXN1bHQuaXNJcCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBQZXJmb3JtIGhvc3RuYW1lIHZhbGlkYXRpb24gaWYgZW5hYmxlZC4gSWYgaG9zdG5hbWUgaXMgbm90IHZhbGlkLCBubyBuZWVkIHRvXG4gICAgLy8gZ28gZnVydGhlciBhcyB0aGVyZSB3aWxsIGJlIG5vIHZhbGlkIGRvbWFpbiBvciBzdWItZG9tYWluLiBUaGlzIHZhbGlkYXRpb25cbiAgICAvLyBpcyBhcHBsaWVkIGJlZm9yZSBhbnkgZWFybHkgcmV0dXJucyB0byBlbnN1cmUgY29uc2lzdGVudCBiZWhhdmlvciBhY3Jvc3NcbiAgICAvLyBhbGwgQVBJIG1ldGhvZHMgaW5jbHVkaW5nIGdldEhvc3RuYW1lKCkuXG4gICAgaWYgKG9wdGlvbnMudmFsaWRhdGVIb3N0bmFtZSAmJlxuICAgICAgICBvcHRpb25zLmV4dHJhY3RIb3N0bmFtZSAmJlxuICAgICAgICByZXN1bHQuaG9zdG5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgIWlzVmFsaWRIb3N0bmFtZShyZXN1bHQuaG9zdG5hbWUpKSB7XG4gICAgICAgIHJlc3VsdC5ob3N0bmFtZSA9IG51bGw7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGlmIChzdGVwID09PSAwIC8qIEZMQUcuSE9TVE5BTUUgKi8gfHwgcmVzdWx0Lmhvc3RuYW1lID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIEV4dHJhY3QgcHVibGljIHN1ZmZpeFxuICAgIHN1ZmZpeExvb2t1cChyZXN1bHQuaG9zdG5hbWUsIG9wdGlvbnMsIHJlc3VsdCk7XG4gICAgaWYgKHN0ZXAgPT09IDIgLyogRkxBRy5QVUJMSUNfU1VGRklYICovIHx8IHJlc3VsdC5wdWJsaWNTdWZmaXggPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCBkb21haW5cbiAgICByZXN1bHQuZG9tYWluID0gZ2V0RG9tYWluKHJlc3VsdC5wdWJsaWNTdWZmaXgsIHJlc3VsdC5ob3N0bmFtZSwgb3B0aW9ucyk7XG4gICAgaWYgKHN0ZXAgPT09IDMgLyogRkxBRy5ET01BSU4gKi8gfHwgcmVzdWx0LmRvbWFpbiA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBFeHRyYWN0IHN1YmRvbWFpblxuICAgIHJlc3VsdC5zdWJkb21haW4gPSBnZXRTdWJkb21haW4ocmVzdWx0Lmhvc3RuYW1lLCByZXN1bHQuZG9tYWluKTtcbiAgICBpZiAoc3RlcCA9PT0gNCAvKiBGTEFHLlNVQl9ET01BSU4gKi8pIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCBkb21haW4gd2l0aG91dCBzdWZmaXhcbiAgICByZXN1bHQuZG9tYWluV2l0aG91dFN1ZmZpeCA9IGdldERvbWFpbldpdGhvdXRTdWZmaXgocmVzdWx0LmRvbWFpbiwgcmVzdWx0LnB1YmxpY1N1ZmZpeCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZhY3RvcnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/factory.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/is-ip.js":
/*!*******************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-ip.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isIp; }\n/* harmony export */ });\n/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n */\nfunction isProbablyIpv4(hostname) {\n    // Cannot be shorted than 1.1.1.1\n    if (hostname.length < 7) {\n        return false;\n    }\n    // Cannot be longer than: 255.255.255.255\n    if (hostname.length > 15) {\n        return false;\n    }\n    let numberOfDots = 0;\n    for (let i = 0; i < hostname.length; i += 1) {\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */) {\n            numberOfDots += 1;\n        }\n        else if (code < 48 /* '0' */ || code > 57 /* '9' */) {\n            return false;\n        }\n    }\n    return (numberOfDots === 3 &&\n        hostname.charCodeAt(0) !== 46 /* '.' */ &&\n        hostname.charCodeAt(hostname.length - 1) !== 46 /* '.' */);\n}\n/**\n * Similar to isProbablyIpv4.\n */\nfunction isProbablyIpv6(hostname) {\n    if (hostname.length < 3) {\n        return false;\n    }\n    let start = hostname.startsWith('[') ? 1 : 0;\n    let end = hostname.length;\n    if (hostname[end - 1] === ']') {\n        end -= 1;\n    }\n    // We only consider the maximum size of a normal IPV6. Note that this will\n    // fail on so-called \"IPv4 mapped IPv6 addresses\" but this is a corner-case\n    // and a proper validation library should be used for these.\n    if (end - start > 39) {\n        return false;\n    }\n    let hasColon = false;\n    for (; start < end; start += 1) {\n        const code = hostname.charCodeAt(start);\n        if (code === 58 /* ':' */) {\n            hasColon = true;\n        }\n        else if (!(((code >= 48 && code <= 57) || // 0-9\n            (code >= 97 && code <= 102) || // a-f\n            (code >= 65 && code <= 90)) // A-F\n        )) {\n            return false;\n        }\n    }\n    return hasColon;\n}\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n */\nfunction isIp(hostname) {\n    return isProbablyIpv6(hostname) || isProbablyIpv4(hostname);\n}\n//# sourceMappingURL=is-ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9pcy1pcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2lzLWlwLmpzPzNmYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiBhIGhvc3RuYW1lIGlzIGFuIElQLiBZb3Ugc2hvdWxkIGJlIGF3YXJlIHRoYXQgdGhpcyBvbmx5IHdvcmtzXG4gKiBiZWNhdXNlIGBob3N0bmFtZWAgaXMgYWxyZWFkeSBnYXJhbnRlZWQgdG8gYmUgYSB2YWxpZCBob3N0bmFtZSFcbiAqL1xuZnVuY3Rpb24gaXNQcm9iYWJseUlwdjQoaG9zdG5hbWUpIHtcbiAgICAvLyBDYW5ub3QgYmUgc2hvcnRlZCB0aGFuIDEuMS4xLjFcbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoIDwgNykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIENhbm5vdCBiZSBsb25nZXIgdGhhbjogMjU1LjI1NS4yNTUuMjU1XG4gICAgaWYgKGhvc3RuYW1lLmxlbmd0aCA+IDE1KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IG51bWJlck9mRG90cyA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBob3N0bmFtZS5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBjb2RlID0gaG9zdG5hbWUuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGNvZGUgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgbnVtYmVyT2ZEb3RzICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29kZSA8IDQ4IC8qICcwJyAqLyB8fCBjb2RlID4gNTcgLyogJzknICovKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIChudW1iZXJPZkRvdHMgPT09IDMgJiZcbiAgICAgICAgaG9zdG5hbWUuY2hhckNvZGVBdCgwKSAhPT0gNDYgLyogJy4nICovICYmXG4gICAgICAgIGhvc3RuYW1lLmNoYXJDb2RlQXQoaG9zdG5hbWUubGVuZ3RoIC0gMSkgIT09IDQ2IC8qICcuJyAqLyk7XG59XG4vKipcbiAqIFNpbWlsYXIgdG8gaXNQcm9iYWJseUlwdjQuXG4gKi9cbmZ1bmN0aW9uIGlzUHJvYmFibHlJcHY2KGhvc3RuYW1lKSB7XG4gICAgaWYgKGhvc3RuYW1lLmxlbmd0aCA8IDMpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgc3RhcnQgPSBob3N0bmFtZS5zdGFydHNXaXRoKCdbJykgPyAxIDogMDtcbiAgICBsZXQgZW5kID0gaG9zdG5hbWUubGVuZ3RoO1xuICAgIGlmIChob3N0bmFtZVtlbmQgLSAxXSA9PT0gJ10nKSB7XG4gICAgICAgIGVuZCAtPSAxO1xuICAgIH1cbiAgICAvLyBXZSBvbmx5IGNvbnNpZGVyIHRoZSBtYXhpbXVtIHNpemUgb2YgYSBub3JtYWwgSVBWNi4gTm90ZSB0aGF0IHRoaXMgd2lsbFxuICAgIC8vIGZhaWwgb24gc28tY2FsbGVkIFwiSVB2NCBtYXBwZWQgSVB2NiBhZGRyZXNzZXNcIiBidXQgdGhpcyBpcyBhIGNvcm5lci1jYXNlXG4gICAgLy8gYW5kIGEgcHJvcGVyIHZhbGlkYXRpb24gbGlicmFyeSBzaG91bGQgYmUgdXNlZCBmb3IgdGhlc2UuXG4gICAgaWYgKGVuZCAtIHN0YXJ0ID4gMzkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgaGFzQ29sb24gPSBmYWxzZTtcbiAgICBmb3IgKDsgc3RhcnQgPCBlbmQ7IHN0YXJ0ICs9IDEpIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGhvc3RuYW1lLmNoYXJDb2RlQXQoc3RhcnQpO1xuICAgICAgICBpZiAoY29kZSA9PT0gNTggLyogJzonICovKSB7XG4gICAgICAgICAgICBoYXNDb2xvbiA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoISgoKGNvZGUgPj0gNDggJiYgY29kZSA8PSA1NykgfHwgLy8gMC05XG4gICAgICAgICAgICAoY29kZSA+PSA5NyAmJiBjb2RlIDw9IDEwMikgfHwgLy8gYS1mXG4gICAgICAgICAgICAoY29kZSA+PSA2NSAmJiBjb2RlIDw9IDkwKSkgLy8gQS1GXG4gICAgICAgICkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaGFzQ29sb247XG59XG4vKipcbiAqIENoZWNrIGlmIGBob3N0bmFtZWAgaXMgKnByb2JhYmx5KiBhIHZhbGlkIGlwIGFkZHIgKGVpdGhlciBpcHY2IG9yIGlwdjQpLlxuICogVGhpcyAqd2lsbCBub3QqIHdvcmsgb24gYW55IHN0cmluZy4gV2UgbmVlZCBgaG9zdG5hbWVgIHRvIGJlIGEgdmFsaWRcbiAqIGhvc3RuYW1lLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0lwKGhvc3RuYW1lKSB7XG4gICAgcmV0dXJuIGlzUHJvYmFibHlJcHY2KGhvc3RuYW1lKSB8fCBpc1Byb2JhYmx5SXB2NChob3N0bmFtZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1pcC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/is-ip.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/is-valid.js":
/*!**********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-valid.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/**\n * Implements fast shallow verification of hostnames. This does not perform a\n * struct check on the content of labels (classes of Unicode characters, etc.)\n * but instead check that the structure is valid (number of labels, length of\n * labels, etc.).\n *\n * If you need stricter validation, consider using an external library.\n */\nfunction isValidAscii(code) {\n    return ((code >= 97 && code <= 122) || (code >= 48 && code <= 57) || code > 127);\n}\n/**\n * Check if a hostname string is valid. It's usually a preliminary check before\n * trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n */\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname) {\n    if (hostname.length > 255) {\n        return false;\n    }\n    if (hostname.length === 0) {\n        return false;\n    }\n    if (\n    /*@__INLINE__*/ !isValidAscii(hostname.charCodeAt(0)) &&\n        hostname.charCodeAt(0) !== 46 && // '.' (dot)\n        hostname.charCodeAt(0) !== 95 // '_' (underscore)\n    ) {\n        return false;\n    }\n    // Validate hostname according to RFC\n    let lastDotIndex = -1;\n    let lastCharCode = -1;\n    const len = hostname.length;\n    for (let i = 0; i < len; i += 1) {\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */) {\n            if (\n            // Check that previous label is < 63 bytes long (64 = 63 + '.')\n            i - lastDotIndex > 64 ||\n                // Check that previous character was not already a '.'\n                lastCharCode === 46 ||\n                // Check that the previous label does not end with a '-' (dash)\n                lastCharCode === 45 ||\n                // Check that the previous label does not end with a '_' (underscore)\n                lastCharCode === 95) {\n                return false;\n            }\n            lastDotIndex = i;\n        }\n        else if (!( /*@__INLINE__*/(isValidAscii(code) || code === 45 || code === 95))) {\n            // Check if there is a forbidden character in the label\n            return false;\n        }\n        lastCharCode = code;\n    }\n    return (\n    // Check that last label is shorter than 63 chars\n    len - lastDotIndex - 1 <= 63 &&\n        // Check that the last character is an allowed trailing label character.\n        // Since we already checked that the char is a valid hostname character,\n        // we only need to check that it's different from '-'.\n        lastCharCode !== 45);\n}\n//# sourceMappingURL=is-valid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9pcy12YWxpZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUFlLG9DQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2lzLXZhbGlkLmpzPzIzMzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbXBsZW1lbnRzIGZhc3Qgc2hhbGxvdyB2ZXJpZmljYXRpb24gb2YgaG9zdG5hbWVzLiBUaGlzIGRvZXMgbm90IHBlcmZvcm0gYVxuICogc3RydWN0IGNoZWNrIG9uIHRoZSBjb250ZW50IG9mIGxhYmVscyAoY2xhc3NlcyBvZiBVbmljb2RlIGNoYXJhY3RlcnMsIGV0Yy4pXG4gKiBidXQgaW5zdGVhZCBjaGVjayB0aGF0IHRoZSBzdHJ1Y3R1cmUgaXMgdmFsaWQgKG51bWJlciBvZiBsYWJlbHMsIGxlbmd0aCBvZlxuICogbGFiZWxzLCBldGMuKS5cbiAqXG4gKiBJZiB5b3UgbmVlZCBzdHJpY3RlciB2YWxpZGF0aW9uLCBjb25zaWRlciB1c2luZyBhbiBleHRlcm5hbCBsaWJyYXJ5LlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkQXNjaWkoY29kZSkge1xuICAgIHJldHVybiAoKGNvZGUgPj0gOTcgJiYgY29kZSA8PSAxMjIpIHx8IChjb2RlID49IDQ4ICYmIGNvZGUgPD0gNTcpIHx8IGNvZGUgPiAxMjcpO1xufVxuLyoqXG4gKiBDaGVjayBpZiBhIGhvc3RuYW1lIHN0cmluZyBpcyB2YWxpZC4gSXQncyB1c3VhbGx5IGEgcHJlbGltaW5hcnkgY2hlY2sgYmVmb3JlXG4gKiB0cnlpbmcgdG8gdXNlIGdldERvbWFpbiBvciBhbnl0aGluZyBlbHNlLlxuICpcbiAqIEJld2FyZTogaXQgZG9lcyBub3QgY2hlY2sgaWYgdGhlIFRMRCBleGlzdHMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChob3N0bmFtZSkge1xuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPiAyNTUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKFxuICAgIC8qQF9fSU5MSU5FX18qLyAhaXNWYWxpZEFzY2lpKGhvc3RuYW1lLmNoYXJDb2RlQXQoMCkpICYmXG4gICAgICAgIGhvc3RuYW1lLmNoYXJDb2RlQXQoMCkgIT09IDQ2ICYmIC8vICcuJyAoZG90KVxuICAgICAgICBob3N0bmFtZS5jaGFyQ29kZUF0KDApICE9PSA5NSAvLyAnXycgKHVuZGVyc2NvcmUpXG4gICAgKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gVmFsaWRhdGUgaG9zdG5hbWUgYWNjb3JkaW5nIHRvIFJGQ1xuICAgIGxldCBsYXN0RG90SW5kZXggPSAtMTtcbiAgICBsZXQgbGFzdENoYXJDb2RlID0gLTE7XG4gICAgY29uc3QgbGVuID0gaG9zdG5hbWUubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGhvc3RuYW1lLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjb2RlID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIC8vIENoZWNrIHRoYXQgcHJldmlvdXMgbGFiZWwgaXMgPCA2MyBieXRlcyBsb25nICg2NCA9IDYzICsgJy4nKVxuICAgICAgICAgICAgaSAtIGxhc3REb3RJbmRleCA+IDY0IHx8XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgdGhhdCBwcmV2aW91cyBjaGFyYWN0ZXIgd2FzIG5vdCBhbHJlYWR5IGEgJy4nXG4gICAgICAgICAgICAgICAgbGFzdENoYXJDb2RlID09PSA0NiB8fFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIHRoYXQgdGhlIHByZXZpb3VzIGxhYmVsIGRvZXMgbm90IGVuZCB3aXRoIGEgJy0nIChkYXNoKVxuICAgICAgICAgICAgICAgIGxhc3RDaGFyQ29kZSA9PT0gNDUgfHxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayB0aGF0IHRoZSBwcmV2aW91cyBsYWJlbCBkb2VzIG5vdCBlbmQgd2l0aCBhICdfJyAodW5kZXJzY29yZSlcbiAgICAgICAgICAgICAgICBsYXN0Q2hhckNvZGUgPT09IDk1KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFzdERvdEluZGV4ID0gaTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghKCAvKkBfX0lOTElORV9fKi8oaXNWYWxpZEFzY2lpKGNvZGUpIHx8IGNvZGUgPT09IDQ1IHx8IGNvZGUgPT09IDk1KSkpIHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZXJlIGlzIGEgZm9yYmlkZGVuIGNoYXJhY3RlciBpbiB0aGUgbGFiZWxcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBsYXN0Q2hhckNvZGUgPSBjb2RlO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgIC8vIENoZWNrIHRoYXQgbGFzdCBsYWJlbCBpcyBzaG9ydGVyIHRoYW4gNjMgY2hhcnNcbiAgICBsZW4gLSBsYXN0RG90SW5kZXggLSAxIDw9IDYzICYmXG4gICAgICAgIC8vIENoZWNrIHRoYXQgdGhlIGxhc3QgY2hhcmFjdGVyIGlzIGFuIGFsbG93ZWQgdHJhaWxpbmcgbGFiZWwgY2hhcmFjdGVyLlxuICAgICAgICAvLyBTaW5jZSB3ZSBhbHJlYWR5IGNoZWNrZWQgdGhhdCB0aGUgY2hhciBpcyBhIHZhbGlkIGhvc3RuYW1lIGNoYXJhY3RlcixcbiAgICAgICAgLy8gd2Ugb25seSBuZWVkIHRvIGNoZWNrIHRoYXQgaXQncyBkaWZmZXJlbnQgZnJvbSAnLScuXG4gICAgICAgIGxhc3RDaGFyQ29kZSAhPT0gNDUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtdmFsaWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/is-valid.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname, options, out) {\n    // Fast path for very popular suffixes; this allows to by-pass lookup\n    // completely as well as any extra allocation or string manipulation.\n    if (!options.allowPrivateDomains && hostname.length > 3) {\n        const last = hostname.length - 1;\n        const c3 = hostname.charCodeAt(last);\n        const c2 = hostname.charCodeAt(last - 1);\n        const c1 = hostname.charCodeAt(last - 2);\n        const c0 = hostname.charCodeAt(last - 3);\n        if (c3 === 109 /* 'm' */ &&\n            c2 === 111 /* 'o' */ &&\n            c1 === 99 /* 'c' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'com';\n            return true;\n        }\n        else if (c3 === 103 /* 'g' */ &&\n            c2 === 114 /* 'r' */ &&\n            c1 === 111 /* 'o' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'org';\n            return true;\n        }\n        else if (c3 === 117 /* 'u' */ &&\n            c2 === 100 /* 'd' */ &&\n            c1 === 101 /* 'e' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'edu';\n            return true;\n        }\n        else if (c3 === 118 /* 'v' */ &&\n            c2 === 111 /* 'o' */ &&\n            c1 === 103 /* 'g' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'gov';\n            return true;\n        }\n        else if (c3 === 116 /* 't' */ &&\n            c2 === 101 /* 'e' */ &&\n            c1 === 110 /* 'n' */ &&\n            c0 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'net';\n            return true;\n        }\n        else if (c3 === 101 /* 'e' */ &&\n            c2 === 100 /* 'd' */ &&\n            c1 === 46 /* '.' */) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = 'de';\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=fast-path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9sb29rdXAvZmFzdC1wYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw2QkFBZSxvQ0FBVTtBQUN6Qiw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2xvb2t1cC9mYXN0LXBhdGguanM/M2I0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoaG9zdG5hbWUsIG9wdGlvbnMsIG91dCkge1xuICAgIC8vIEZhc3QgcGF0aCBmb3IgdmVyeSBwb3B1bGFyIHN1ZmZpeGVzOyB0aGlzIGFsbG93cyB0byBieS1wYXNzIGxvb2t1cFxuICAgIC8vIGNvbXBsZXRlbHkgYXMgd2VsbCBhcyBhbnkgZXh0cmEgYWxsb2NhdGlvbiBvciBzdHJpbmcgbWFuaXB1bGF0aW9uLlxuICAgIGlmICghb3B0aW9ucy5hbGxvd1ByaXZhdGVEb21haW5zICYmIGhvc3RuYW1lLmxlbmd0aCA+IDMpIHtcbiAgICAgICAgY29uc3QgbGFzdCA9IGhvc3RuYW1lLmxlbmd0aCAtIDE7XG4gICAgICAgIGNvbnN0IGMzID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0KTtcbiAgICAgICAgY29uc3QgYzIgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGxhc3QgLSAxKTtcbiAgICAgICAgY29uc3QgYzEgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGxhc3QgLSAyKTtcbiAgICAgICAgY29uc3QgYzAgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGxhc3QgLSAzKTtcbiAgICAgICAgaWYgKGMzID09PSAxMDkgLyogJ20nICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTExIC8qICdvJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDk5IC8qICdjJyAqLyAmJlxuICAgICAgICAgICAgYzAgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICdjb20nO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYzMgPT09IDEwMyAvKiAnZycgKi8gJiZcbiAgICAgICAgICAgIGMyID09PSAxMTQgLyogJ3InICovICYmXG4gICAgICAgICAgICBjMSA9PT0gMTExIC8qICdvJyAqLyAmJlxuICAgICAgICAgICAgYzAgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICdvcmcnO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYzMgPT09IDExNyAvKiAndScgKi8gJiZcbiAgICAgICAgICAgIGMyID09PSAxMDAgLyogJ2QnICovICYmXG4gICAgICAgICAgICBjMSA9PT0gMTAxIC8qICdlJyAqLyAmJlxuICAgICAgICAgICAgYzAgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICdlZHUnO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYzMgPT09IDExOCAvKiAndicgKi8gJiZcbiAgICAgICAgICAgIGMyID09PSAxMTEgLyogJ28nICovICYmXG4gICAgICAgICAgICBjMSA9PT0gMTAzIC8qICdnJyAqLyAmJlxuICAgICAgICAgICAgYzAgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICdnb3YnO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYzMgPT09IDExNiAvKiAndCcgKi8gJiZcbiAgICAgICAgICAgIGMyID09PSAxMDEgLyogJ2UnICovICYmXG4gICAgICAgICAgICBjMSA9PT0gMTEwIC8qICduJyAqLyAmJlxuICAgICAgICAgICAgYzAgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICduZXQnO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYzMgPT09IDEwMSAvKiAnZScgKi8gJiZcbiAgICAgICAgICAgIGMyID09PSAxMDAgLyogJ2QnICovICYmXG4gICAgICAgICAgICBjMSA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBvdXQuaXNJY2FubiA9IHRydWU7XG4gICAgICAgICAgICBvdXQuaXNQcml2YXRlID0gZmFsc2U7XG4gICAgICAgICAgICBvdXQucHVibGljU3VmZml4ID0gJ2RlJztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZhc3QtcGF0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/options.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/options.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDefaults: function() { return /* binding */ setDefaults; }\n/* harmony export */ });\nfunction setDefaultsImpl({ allowIcannDomains = true, allowPrivateDomains = false, detectIp = true, extractHostname = true, mixedInputs = true, validHosts = null, validateHostname = true, }) {\n    return {\n        allowIcannDomains,\n        allowPrivateDomains,\n        detectIp,\n        extractHostname,\n        mixedInputs,\n        validHosts,\n        validateHostname,\n    };\n}\nconst DEFAULT_OPTIONS = /*@__INLINE__*/ setDefaultsImpl({});\nfunction setDefaults(options) {\n    if (options === undefined) {\n        return DEFAULT_OPTIONS;\n    }\n    return /*@__INLINE__*/ setDefaultsImpl(options);\n}\n//# sourceMappingURL=options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9vcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwyQkFBMkIsaUtBQWlLO0FBQzVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBEO0FBQ25EO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9vcHRpb25zLmpzPzRiNWQiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gc2V0RGVmYXVsdHNJbXBsKHsgYWxsb3dJY2FubkRvbWFpbnMgPSB0cnVlLCBhbGxvd1ByaXZhdGVEb21haW5zID0gZmFsc2UsIGRldGVjdElwID0gdHJ1ZSwgZXh0cmFjdEhvc3RuYW1lID0gdHJ1ZSwgbWl4ZWRJbnB1dHMgPSB0cnVlLCB2YWxpZEhvc3RzID0gbnVsbCwgdmFsaWRhdGVIb3N0bmFtZSA9IHRydWUsIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhbGxvd0ljYW5uRG9tYWlucyxcbiAgICAgICAgYWxsb3dQcml2YXRlRG9tYWlucyxcbiAgICAgICAgZGV0ZWN0SXAsXG4gICAgICAgIGV4dHJhY3RIb3N0bmFtZSxcbiAgICAgICAgbWl4ZWRJbnB1dHMsXG4gICAgICAgIHZhbGlkSG9zdHMsXG4gICAgICAgIHZhbGlkYXRlSG9zdG5hbWUsXG4gICAgfTtcbn1cbmNvbnN0IERFRkFVTFRfT1BUSU9OUyA9IC8qQF9fSU5MSU5FX18qLyBzZXREZWZhdWx0c0ltcGwoe30pO1xuZXhwb3J0IGZ1bmN0aW9uIHNldERlZmF1bHRzKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBERUZBVUxUX09QVElPTlM7XG4gICAgfVxuICAgIHJldHVybiAvKkBfX0lOTElORV9fKi8gc2V0RGVmYXVsdHNJbXBsKG9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/options.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/subdomain.js":
/*!***********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/subdomain.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getSubdomain; }\n/* harmony export */ });\n/**\n * Returns the subdomain of a hostname string\n */\nfunction getSubdomain(hostname, domain) {\n    // If `hostname` and `domain` are the same, then there is no sub-domain\n    if (domain.length === hostname.length) {\n        return '';\n    }\n    return hostname.slice(0, -domain.length - 1);\n}\n//# sourceMappingURL=subdomain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9zdWJkb21haW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL3N1YmRvbWFpbi5qcz9hN2YzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0aGUgc3ViZG9tYWluIG9mIGEgaG9zdG5hbWUgc3RyaW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFN1YmRvbWFpbihob3N0bmFtZSwgZG9tYWluKSB7XG4gICAgLy8gSWYgYGhvc3RuYW1lYCBhbmQgYGRvbWFpbmAgYXJlIHRoZSBzYW1lLCB0aGVuIHRoZXJlIGlzIG5vIHN1Yi1kb21haW5cbiAgICBpZiAoZG9tYWluLmxlbmd0aCA9PT0gaG9zdG5hbWUubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIGhvc3RuYW1lLnNsaWNlKDAsIC1kb21haW4ubGVuZ3RoIC0gMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJkb21haW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts-core/dist/es6/src/subdomain.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts/dist/es6/index.js":
/*!**********************************************!*\
  !*** ./node_modules/tldts/dist/es6/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDomain: function() { return /* binding */ getDomain; },\n/* harmony export */   getDomainWithoutSuffix: function() { return /* binding */ getDomainWithoutSuffix; },\n/* harmony export */   getHostname: function() { return /* binding */ getHostname; },\n/* harmony export */   getPublicSuffix: function() { return /* binding */ getPublicSuffix; },\n/* harmony export */   getSubdomain: function() { return /* binding */ getSubdomain; },\n/* harmony export */   parse: function() { return /* binding */ parse; }\n/* harmony export */ });\n/* harmony import */ var tldts_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tldts-core */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/index.js\");\n/* harmony import */ var _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/suffix-trie */ \"(app-pages-browser)/./node_modules/tldts/dist/es6/src/suffix-trie.js\");\n\n\n// For all methods but 'parse', it does not make sense to allocate an object\n// every single time to only return the value of a specific attribute. To avoid\n// this un-necessary allocation, we use a global object which is re-used.\nconst RESULT = (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.getEmptyResult)();\nfunction parse(url, options = {}) {\n    return (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.parseImpl)(url, 5 /* FLAG.ALL */, _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options, (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.getEmptyResult)());\n}\nfunction getHostname(url, options = {}) {\n    /*@__INLINE__*/ (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.resetResult)(RESULT);\n    return (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.parseImpl)(url, 0 /* FLAG.HOSTNAME */, _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options, RESULT).hostname;\n}\nfunction getPublicSuffix(url, options = {}) {\n    /*@__INLINE__*/ (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.resetResult)(RESULT);\n    return (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.parseImpl)(url, 2 /* FLAG.PUBLIC_SUFFIX */, _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options, RESULT)\n        .publicSuffix;\n}\nfunction getDomain(url, options = {}) {\n    /*@__INLINE__*/ (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.resetResult)(RESULT);\n    return (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.parseImpl)(url, 3 /* FLAG.DOMAIN */, _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options, RESULT).domain;\n}\nfunction getSubdomain(url, options = {}) {\n    /*@__INLINE__*/ (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.resetResult)(RESULT);\n    return (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.parseImpl)(url, 4 /* FLAG.SUB_DOMAIN */, _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options, RESULT)\n        .subdomain;\n}\nfunction getDomainWithoutSuffix(url, options = {}) {\n    /*@__INLINE__*/ (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.resetResult)(RESULT);\n    return (0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.parseImpl)(url, 5 /* FLAG.ALL */, _src_suffix_trie__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options, RESULT)\n        .domainWithoutSuffix;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy9kaXN0L2VzNi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFxRTtBQUN4QjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxlQUFlLDBEQUFjO0FBQ3RCLGdDQUFnQztBQUN2QyxXQUFXLHFEQUFTLHdCQUF3Qix3REFBWSxXQUFXLDBEQUFjO0FBQ2pGO0FBQ08sc0NBQXNDO0FBQzdDLG9CQUFvQix1REFBVztBQUMvQixXQUFXLHFEQUFTLDZCQUE2Qix3REFBWTtBQUM3RDtBQUNPLDBDQUEwQztBQUNqRCxvQkFBb0IsdURBQVc7QUFDL0IsV0FBVyxxREFBUyxrQ0FBa0Msd0RBQVk7QUFDbEU7QUFDQTtBQUNPLG9DQUFvQztBQUMzQyxvQkFBb0IsdURBQVc7QUFDL0IsV0FBVyxxREFBUywyQkFBMkIsd0RBQVk7QUFDM0Q7QUFDTyx1Q0FBdUM7QUFDOUMsb0JBQW9CLHVEQUFXO0FBQy9CLFdBQVcscURBQVMsK0JBQStCLHdEQUFZO0FBQy9EO0FBQ0E7QUFDTyxpREFBaUQ7QUFDeEQsb0JBQW9CLHVEQUFXO0FBQy9CLFdBQVcscURBQVMsd0JBQXdCLHdEQUFZO0FBQ3hEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGxkdHMvZGlzdC9lczYvaW5kZXguanM/MTZhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbXB0eVJlc3VsdCwgcGFyc2VJbXBsLCByZXNldFJlc3VsdCwgfSBmcm9tICd0bGR0cy1jb3JlJztcbmltcG9ydCBzdWZmaXhMb29rdXAgZnJvbSAnLi9zcmMvc3VmZml4LXRyaWUnO1xuLy8gRm9yIGFsbCBtZXRob2RzIGJ1dCAncGFyc2UnLCBpdCBkb2VzIG5vdCBtYWtlIHNlbnNlIHRvIGFsbG9jYXRlIGFuIG9iamVjdFxuLy8gZXZlcnkgc2luZ2xlIHRpbWUgdG8gb25seSByZXR1cm4gdGhlIHZhbHVlIG9mIGEgc3BlY2lmaWMgYXR0cmlidXRlLiBUbyBhdm9pZFxuLy8gdGhpcyB1bi1uZWNlc3NhcnkgYWxsb2NhdGlvbiwgd2UgdXNlIGEgZ2xvYmFsIG9iamVjdCB3aGljaCBpcyByZS11c2VkLlxuY29uc3QgUkVTVUxUID0gZ2V0RW1wdHlSZXN1bHQoKTtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSh1cmwsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBwYXJzZUltcGwodXJsLCA1IC8qIEZMQUcuQUxMICovLCBzdWZmaXhMb29rdXAsIG9wdGlvbnMsIGdldEVtcHR5UmVzdWx0KCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEhvc3RuYW1lKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLypAX19JTkxJTkVfXyovIHJlc2V0UmVzdWx0KFJFU1VMVCk7XG4gICAgcmV0dXJuIHBhcnNlSW1wbCh1cmwsIDAgLyogRkxBRy5IT1NUTkFNRSAqLywgc3VmZml4TG9va3VwLCBvcHRpb25zLCBSRVNVTFQpLmhvc3RuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFB1YmxpY1N1ZmZpeCh1cmwsIG9wdGlvbnMgPSB7fSkge1xuICAgIC8qQF9fSU5MSU5FX18qLyByZXNldFJlc3VsdChSRVNVTFQpO1xuICAgIHJldHVybiBwYXJzZUltcGwodXJsLCAyIC8qIEZMQUcuUFVCTElDX1NVRkZJWCAqLywgc3VmZml4TG9va3VwLCBvcHRpb25zLCBSRVNVTFQpXG4gICAgICAgIC5wdWJsaWNTdWZmaXg7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9tYWluKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLypAX19JTkxJTkVfXyovIHJlc2V0UmVzdWx0KFJFU1VMVCk7XG4gICAgcmV0dXJuIHBhcnNlSW1wbCh1cmwsIDMgLyogRkxBRy5ET01BSU4gKi8sIHN1ZmZpeExvb2t1cCwgb3B0aW9ucywgUkVTVUxUKS5kb21haW47XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3ViZG9tYWluKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLypAX19JTkxJTkVfXyovIHJlc2V0UmVzdWx0KFJFU1VMVCk7XG4gICAgcmV0dXJuIHBhcnNlSW1wbCh1cmwsIDQgLyogRkxBRy5TVUJfRE9NQUlOICovLCBzdWZmaXhMb29rdXAsIG9wdGlvbnMsIFJFU1VMVClcbiAgICAgICAgLnN1YmRvbWFpbjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREb21haW5XaXRob3V0U3VmZml4KHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgLypAX19JTkxJTkVfXyovIHJlc2V0UmVzdWx0KFJFU1VMVCk7XG4gICAgcmV0dXJuIHBhcnNlSW1wbCh1cmwsIDUgLyogRkxBRy5BTEwgKi8sIHN1ZmZpeExvb2t1cCwgb3B0aW9ucywgUkVTVUxUKVxuICAgICAgICAuZG9tYWluV2l0aG91dFN1ZmZpeDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts/dist/es6/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts/dist/es6/src/data/trie.js":
/*!******************************************************!*\
  !*** ./node_modules/tldts/dist/es6/src/data/trie.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exceptions: function() { return /* binding */ exceptions; },\n/* harmony export */   rules: function() { return /* binding */ rules; }\n/* harmony export */ });\nconst exceptions = (function () {\n    const _0 = [1, {}], _1 = [0, { \"city\": _0 }];\n    const exceptions = [0, { \"ck\": [0, { \"www\": _0 }], \"jp\": [0, { \"kawasaki\": _1, \"kitakyushu\": _1, \"kobe\": _1, \"nagoya\": _1, \"sapporo\": _1, \"sendai\": _1, \"yokohama\": _1 }] }];\n    return exceptions;\n})();\nconst rules = (function () {\n    const _2 = [1, {}], _3 = [2, {}], _4 = [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], _5 = [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], _6 = [0, { \"*\": _3 }], _7 = [2, { \"s\": _6 }], _8 = [0, { \"relay\": _3 }], _9 = [2, { \"id\": _3 }], _10 = [1, { \"gov\": _2 }], _11 = [2, { \"vps\": _3 }], _12 = [0, { \"airflow\": _6, \"transfer-webapp\": _3 }], _13 = [0, { \"transfer-webapp\": _3, \"transfer-webapp-fips\": _3 }], _14 = [0, { \"notebook\": _3, \"studio\": _3 }], _15 = [0, { \"labeling\": _3, \"notebook\": _3, \"studio\": _3 }], _16 = [0, { \"notebook\": _3 }], _17 = [0, { \"labeling\": _3, \"notebook\": _3, \"notebook-fips\": _3, \"studio\": _3 }], _18 = [0, { \"notebook\": _3, \"notebook-fips\": _3, \"studio\": _3, \"studio-fips\": _3 }], _19 = [0, { \"shop\": _3 }], _20 = [0, { \"*\": _2 }], _21 = [1, { \"co\": _3 }], _22 = [0, { \"objects\": _3 }], _23 = [2, { \"nodes\": _3 }], _24 = [0, { \"my\": _3 }], _25 = [0, { \"s3\": _3, \"s3-accesspoint\": _3, \"s3-website\": _3 }], _26 = [0, { \"s3\": _3, \"s3-accesspoint\": _3 }], _27 = [0, { \"direct\": _3 }], _28 = [0, { \"webview-assets\": _3 }], _29 = [0, { \"vfs\": _3, \"webview-assets\": _3 }], _30 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], _31 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _26, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], _32 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"analytics-gateway\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], _33 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3 }], _34 = [0, { \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-fips\": _3, \"s3-website\": _3 }], _35 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _34, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-fips\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], _36 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _34, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-deprecated\": _3, \"s3-fips\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"analytics-gateway\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], _37 = [0, { \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-fips\": _3 }], _38 = [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _37, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-fips\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3 }], _39 = [0, { \"auth\": _3 }], _40 = [0, { \"auth\": _3, \"auth-fips\": _3 }], _41 = [0, { \"auth-fips\": _3 }], _42 = [0, { \"apps\": _3 }], _43 = [0, { \"paas\": _3 }], _44 = [2, { \"eu\": _3 }], _45 = [0, { \"app\": _3 }], _46 = [0, { \"site\": _3 }], _47 = [1, { \"com\": _2, \"edu\": _2, \"net\": _2, \"org\": _2 }], _48 = [0, { \"j\": _3 }], _49 = [0, { \"dyn\": _3 }], _50 = [2, { \"web\": _3 }], _51 = [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], _52 = [0, { \"p\": _3 }], _53 = [0, { \"user\": _3 }], _54 = [0, { \"cdn\": _3 }], _55 = [2, { \"raw\": _6 }], _56 = [0, { \"cust\": _3, \"reservd\": _3 }], _57 = [0, { \"cust\": _3 }], _58 = [0, { \"s3\": _3 }], _59 = [1, { \"biz\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"net\": _2, \"org\": _2 }], _60 = [0, { \"ipfs\": _3 }], _61 = [1, { \"framer\": _3 }], _62 = [0, { \"forgot\": _3 }], _63 = [1, { \"gs\": _2 }], _64 = [0, { \"nes\": _2 }], _65 = [1, { \"k12\": _2, \"cc\": _2, \"lib\": _2 }], _66 = [1, { \"cc\": _2 }], _67 = [1, { \"cc\": _2, \"lib\": _2 }];\n    const rules = [0, { \"ac\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"drr\": _3, \"feedback\": _3, \"forms\": _3 }], \"ad\": _2, \"ae\": [1, { \"ac\": _2, \"co\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"sch\": _2 }], \"aero\": [1, { \"airline\": _2, \"airport\": _2, \"accident-investigation\": _2, \"accident-prevention\": _2, \"aerobatic\": _2, \"aeroclub\": _2, \"aerodrome\": _2, \"agents\": _2, \"air-surveillance\": _2, \"air-traffic-control\": _2, \"aircraft\": _2, \"airtraffic\": _2, \"ambulance\": _2, \"association\": _2, \"author\": _2, \"ballooning\": _2, \"broker\": _2, \"caa\": _2, \"cargo\": _2, \"catering\": _2, \"certification\": _2, \"championship\": _2, \"charter\": _2, \"civilaviation\": _2, \"club\": _2, \"conference\": _2, \"consultant\": _2, \"consulting\": _2, \"control\": _2, \"council\": _2, \"crew\": _2, \"design\": _2, \"dgca\": _2, \"educator\": _2, \"emergency\": _2, \"engine\": _2, \"engineer\": _2, \"entertainment\": _2, \"equipment\": _2, \"exchange\": _2, \"express\": _2, \"federation\": _2, \"flight\": _2, \"freight\": _2, \"fuel\": _2, \"gliding\": _2, \"government\": _2, \"groundhandling\": _2, \"group\": _2, \"hanggliding\": _2, \"homebuilt\": _2, \"insurance\": _2, \"journal\": _2, \"journalist\": _2, \"leasing\": _2, \"logistics\": _2, \"magazine\": _2, \"maintenance\": _2, \"marketplace\": _2, \"media\": _2, \"microlight\": _2, \"modelling\": _2, \"navigation\": _2, \"parachuting\": _2, \"paragliding\": _2, \"passenger-association\": _2, \"pilot\": _2, \"press\": _2, \"production\": _2, \"recreation\": _2, \"repbody\": _2, \"res\": _2, \"research\": _2, \"rotorcraft\": _2, \"safety\": _2, \"scientist\": _2, \"services\": _2, \"show\": _2, \"skydiving\": _2, \"software\": _2, \"student\": _2, \"taxi\": _2, \"trader\": _2, \"trading\": _2, \"trainer\": _2, \"union\": _2, \"workinggroup\": _2, \"works\": _2 }], \"af\": _4, \"ag\": [1, { \"co\": _2, \"com\": _2, \"net\": _2, \"nom\": _2, \"org\": _2, \"obj\": _3 }], \"ai\": [1, { \"com\": _2, \"net\": _2, \"off\": _2, \"org\": _2, \"uwu\": _3, \"framer\": _3 }], \"al\": _5, \"am\": [1, { \"co\": _2, \"com\": _2, \"commune\": _2, \"net\": _2, \"org\": _2, \"radio\": _3 }], \"ao\": [1, { \"co\": _2, \"ed\": _2, \"edu\": _2, \"gov\": _2, \"gv\": _2, \"it\": _2, \"og\": _2, \"org\": _2, \"pb\": _2 }], \"aq\": _2, \"ar\": [1, { \"bet\": _2, \"com\": _2, \"coop\": _2, \"edu\": _2, \"gob\": _2, \"gov\": _2, \"int\": _2, \"mil\": _2, \"musica\": _2, \"mutual\": _2, \"net\": _2, \"org\": _2, \"seg\": _2, \"senasa\": _2, \"tur\": _2 }], \"arpa\": [1, { \"e164\": _2, \"home\": _2, \"in-addr\": _2, \"ip6\": _2, \"iris\": _2, \"uri\": _2, \"urn\": _2 }], \"as\": _10, \"asia\": [1, { \"cloudns\": _3, \"daemon\": _3, \"dix\": _3 }], \"at\": [1, { \"4\": _3, \"ac\": [1, { \"sth\": _2 }], \"co\": _2, \"gv\": _2, \"or\": _2, \"funkfeuer\": [0, { \"wien\": _3 }], \"futurecms\": [0, { \"*\": _3, \"ex\": _6, \"in\": _6 }], \"futurehosting\": _3, \"futuremailing\": _3, \"ortsinfo\": [0, { \"ex\": _6, \"kunden\": _6 }], \"biz\": _3, \"info\": _3, \"123webseite\": _3, \"priv\": _3, \"my\": _3, \"myspreadshop\": _3, \"12hp\": _3, \"2ix\": _3, \"4lima\": _3, \"lima-city\": _3 }], \"au\": [1, { \"asn\": _2, \"com\": [1, { \"cloudlets\": [0, { \"mel\": _3 }], \"myspreadshop\": _3 }], \"edu\": [1, { \"act\": _2, \"catholic\": _2, \"nsw\": _2, \"nt\": _2, \"qld\": _2, \"sa\": _2, \"tas\": _2, \"vic\": _2, \"wa\": _2 }], \"gov\": [1, { \"qld\": _2, \"sa\": _2, \"tas\": _2, \"vic\": _2, \"wa\": _2 }], \"id\": _2, \"net\": _2, \"org\": _2, \"conf\": _2, \"oz\": _2, \"act\": _2, \"nsw\": _2, \"nt\": _2, \"qld\": _2, \"sa\": _2, \"tas\": _2, \"vic\": _2, \"wa\": _2, \"hrsn\": _11 }], \"aw\": [1, { \"com\": _2 }], \"ax\": _2, \"az\": [1, { \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"int\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pp\": _2, \"pro\": _2 }], \"ba\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"brendly\": _19, \"rs\": _3 }], \"bb\": [1, { \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"net\": _2, \"org\": _2, \"store\": _2, \"tv\": _2 }], \"bd\": _20, \"be\": [1, { \"ac\": _2, \"cloudns\": _3, \"webhosting\": _3, \"interhostsolutions\": [0, { \"cloud\": _3 }], \"kuleuven\": [0, { \"ezproxy\": _3 }], \"123website\": _3, \"myspreadshop\": _3, \"transurl\": _6 }], \"bf\": _10, \"bg\": [1, { \"0\": _2, \"1\": _2, \"2\": _2, \"3\": _2, \"4\": _2, \"5\": _2, \"6\": _2, \"7\": _2, \"8\": _2, \"9\": _2, \"a\": _2, \"b\": _2, \"c\": _2, \"d\": _2, \"e\": _2, \"f\": _2, \"g\": _2, \"h\": _2, \"i\": _2, \"j\": _2, \"k\": _2, \"l\": _2, \"m\": _2, \"n\": _2, \"o\": _2, \"p\": _2, \"q\": _2, \"r\": _2, \"s\": _2, \"t\": _2, \"u\": _2, \"v\": _2, \"w\": _2, \"x\": _2, \"y\": _2, \"z\": _2, \"barsy\": _3 }], \"bh\": _4, \"bi\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"or\": _2, \"org\": _2 }], \"biz\": [1, { \"activetrail\": _3, \"cloud-ip\": _3, \"cloudns\": _3, \"jozi\": _3, \"dyndns\": _3, \"for-better\": _3, \"for-more\": _3, \"for-some\": _3, \"for-the\": _3, \"selfip\": _3, \"webhop\": _3, \"orx\": _3, \"mmafan\": _3, \"myftp\": _3, \"no-ip\": _3, \"dscloud\": _3 }], \"bj\": [1, { \"africa\": _2, \"agro\": _2, \"architectes\": _2, \"assur\": _2, \"avocats\": _2, \"co\": _2, \"com\": _2, \"eco\": _2, \"econo\": _2, \"edu\": _2, \"info\": _2, \"loisirs\": _2, \"money\": _2, \"net\": _2, \"org\": _2, \"ote\": _2, \"restaurant\": _2, \"resto\": _2, \"tourism\": _2, \"univ\": _2 }], \"bm\": _4, \"bn\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"co\": _3 }], \"bo\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"int\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"tv\": _2, \"web\": _2, \"academia\": _2, \"agro\": _2, \"arte\": _2, \"blog\": _2, \"bolivia\": _2, \"ciencia\": _2, \"cooperativa\": _2, \"democracia\": _2, \"deporte\": _2, \"ecologia\": _2, \"economia\": _2, \"empresa\": _2, \"indigena\": _2, \"industria\": _2, \"info\": _2, \"medicina\": _2, \"movimiento\": _2, \"musica\": _2, \"natural\": _2, \"nombre\": _2, \"noticias\": _2, \"patria\": _2, \"plurinacional\": _2, \"politica\": _2, \"profesional\": _2, \"pueblo\": _2, \"revista\": _2, \"salud\": _2, \"tecnologia\": _2, \"tksat\": _2, \"transporte\": _2, \"wiki\": _2 }], \"br\": [1, { \"9guacu\": _2, \"abc\": _2, \"adm\": _2, \"adv\": _2, \"agr\": _2, \"aju\": _2, \"am\": _2, \"anani\": _2, \"aparecida\": _2, \"api\": _2, \"app\": _2, \"arq\": _2, \"art\": _2, \"ato\": _2, \"b\": _2, \"barueri\": _2, \"belem\": _2, \"bet\": _2, \"bhz\": _2, \"bib\": _2, \"bio\": _2, \"blog\": _2, \"bmd\": _2, \"boavista\": _2, \"bsb\": _2, \"campinagrande\": _2, \"campinas\": _2, \"caxias\": _2, \"cim\": _2, \"cng\": _2, \"cnt\": _2, \"com\": [1, { \"simplesite\": _3 }], \"contagem\": _2, \"coop\": _2, \"coz\": _2, \"cri\": _2, \"cuiaba\": _2, \"curitiba\": _2, \"def\": _2, \"des\": _2, \"det\": _2, \"dev\": _2, \"ecn\": _2, \"eco\": _2, \"edu\": _2, \"emp\": _2, \"enf\": _2, \"eng\": _2, \"esp\": _2, \"etc\": _2, \"eti\": _2, \"far\": _2, \"feira\": _2, \"flog\": _2, \"floripa\": _2, \"fm\": _2, \"fnd\": _2, \"fortal\": _2, \"fot\": _2, \"foz\": _2, \"fst\": _2, \"g12\": _2, \"geo\": _2, \"ggf\": _2, \"goiania\": _2, \"gov\": [1, { \"ac\": _2, \"al\": _2, \"am\": _2, \"ap\": _2, \"ba\": _2, \"ce\": _2, \"df\": _2, \"es\": _2, \"go\": _2, \"ma\": _2, \"mg\": _2, \"ms\": _2, \"mt\": _2, \"pa\": _2, \"pb\": _2, \"pe\": _2, \"pi\": _2, \"pr\": _2, \"rj\": _2, \"rn\": _2, \"ro\": _2, \"rr\": _2, \"rs\": _2, \"sc\": _2, \"se\": _2, \"sp\": _2, \"to\": _2 }], \"gru\": _2, \"ia\": _2, \"imb\": _2, \"ind\": _2, \"inf\": _2, \"jab\": _2, \"jampa\": _2, \"jdf\": _2, \"joinville\": _2, \"jor\": _2, \"jus\": _2, \"leg\": [1, { \"ac\": _3, \"al\": _3, \"am\": _3, \"ap\": _3, \"ba\": _3, \"ce\": _3, \"df\": _3, \"es\": _3, \"go\": _3, \"ma\": _3, \"mg\": _3, \"ms\": _3, \"mt\": _3, \"pa\": _3, \"pb\": _3, \"pe\": _3, \"pi\": _3, \"pr\": _3, \"rj\": _3, \"rn\": _3, \"ro\": _3, \"rr\": _3, \"rs\": _3, \"sc\": _3, \"se\": _3, \"sp\": _3, \"to\": _3 }], \"leilao\": _2, \"lel\": _2, \"log\": _2, \"londrina\": _2, \"macapa\": _2, \"maceio\": _2, \"manaus\": _2, \"maringa\": _2, \"mat\": _2, \"med\": _2, \"mil\": _2, \"morena\": _2, \"mp\": _2, \"mus\": _2, \"natal\": _2, \"net\": _2, \"niteroi\": _2, \"nom\": _20, \"not\": _2, \"ntr\": _2, \"odo\": _2, \"ong\": _2, \"org\": _2, \"osasco\": _2, \"palmas\": _2, \"poa\": _2, \"ppg\": _2, \"pro\": _2, \"psc\": _2, \"psi\": _2, \"pvh\": _2, \"qsl\": _2, \"radio\": _2, \"rec\": _2, \"recife\": _2, \"rep\": _2, \"ribeirao\": _2, \"rio\": _2, \"riobranco\": _2, \"riopreto\": _2, \"salvador\": _2, \"sampa\": _2, \"santamaria\": _2, \"santoandre\": _2, \"saobernardo\": _2, \"saogonca\": _2, \"seg\": _2, \"sjc\": _2, \"slg\": _2, \"slz\": _2, \"social\": _2, \"sorocaba\": _2, \"srv\": _2, \"taxi\": _2, \"tc\": _2, \"tec\": _2, \"teo\": _2, \"the\": _2, \"tmp\": _2, \"trd\": _2, \"tur\": _2, \"tv\": _2, \"udi\": _2, \"vet\": _2, \"vix\": _2, \"vlog\": _2, \"wiki\": _2, \"xyz\": _2, \"zlg\": _2, \"tche\": _3 }], \"bs\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"we\": _3 }], \"bt\": _4, \"bv\": _2, \"bw\": [1, { \"ac\": _2, \"co\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], \"by\": [1, { \"gov\": _2, \"mil\": _2, \"com\": _2, \"of\": _2, \"mediatech\": _3 }], \"bz\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"za\": _3, \"mydns\": _3, \"gsj\": _3 }], \"ca\": [1, { \"ab\": _2, \"bc\": _2, \"mb\": _2, \"nb\": _2, \"nf\": _2, \"nl\": _2, \"ns\": _2, \"nt\": _2, \"nu\": _2, \"on\": _2, \"pe\": _2, \"qc\": _2, \"sk\": _2, \"yk\": _2, \"gc\": _2, \"barsy\": _3, \"awdev\": _6, \"co\": _3, \"no-ip\": _3, \"onid\": _3, \"myspreadshop\": _3, \"box\": _3 }], \"cat\": _2, \"cc\": [1, { \"cleverapps\": _3, \"cloudns\": _3, \"ftpaccess\": _3, \"game-server\": _3, \"myphotos\": _3, \"scrapping\": _3, \"twmail\": _3, \"csx\": _3, \"fantasyleague\": _3, \"spawn\": [0, { \"instances\": _3 }] }], \"cd\": _10, \"cf\": _2, \"cg\": _2, \"ch\": [1, { \"square7\": _3, \"cloudns\": _3, \"cloudscale\": [0, { \"cust\": _3, \"lpg\": _22, \"rma\": _22 }], \"objectstorage\": [0, { \"lpg\": _3, \"rma\": _3 }], \"flow\": [0, { \"ae\": [0, { \"alp1\": _3 }], \"appengine\": _3 }], \"linkyard-cloud\": _3, \"gotdns\": _3, \"dnsking\": _3, \"123website\": _3, \"myspreadshop\": _3, \"firenet\": [0, { \"*\": _3, \"svc\": _6 }], \"12hp\": _3, \"2ix\": _3, \"4lima\": _3, \"lima-city\": _3 }], \"ci\": [1, { \"ac\": _2, \"xn--aroport-bya\": _2, \"aéroport\": _2, \"asso\": _2, \"co\": _2, \"com\": _2, \"ed\": _2, \"edu\": _2, \"go\": _2, \"gouv\": _2, \"int\": _2, \"net\": _2, \"or\": _2, \"org\": _2 }], \"ck\": _20, \"cl\": [1, { \"co\": _2, \"gob\": _2, \"gov\": _2, \"mil\": _2, \"cloudns\": _3 }], \"cm\": [1, { \"co\": _2, \"com\": _2, \"gov\": _2, \"net\": _2 }], \"cn\": [1, { \"ac\": _2, \"com\": [1, { \"amazonaws\": [0, { \"cn-north-1\": [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-deprecated\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3 }], \"cn-northwest-1\": [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _26, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3 }], \"compute\": _6, \"airflow\": [0, { \"cn-north-1\": _6, \"cn-northwest-1\": _6 }], \"eb\": [0, { \"cn-north-1\": _3, \"cn-northwest-1\": _3 }], \"elb\": _6 }], \"amazonwebservices\": [0, { \"on\": [0, { \"cn-north-1\": _12, \"cn-northwest-1\": _12 }] }], \"sagemaker\": [0, { \"cn-north-1\": _14, \"cn-northwest-1\": _14 }] }], \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"xn--55qx5d\": _2, \"公司\": _2, \"xn--od0alg\": _2, \"網絡\": _2, \"xn--io0a7i\": _2, \"网络\": _2, \"ah\": _2, \"bj\": _2, \"cq\": _2, \"fj\": _2, \"gd\": _2, \"gs\": _2, \"gx\": _2, \"gz\": _2, \"ha\": _2, \"hb\": _2, \"he\": _2, \"hi\": _2, \"hk\": _2, \"hl\": _2, \"hn\": _2, \"jl\": _2, \"js\": _2, \"jx\": _2, \"ln\": _2, \"mo\": _2, \"nm\": _2, \"nx\": _2, \"qh\": _2, \"sc\": _2, \"sd\": _2, \"sh\": [1, { \"as\": _3 }], \"sn\": _2, \"sx\": _2, \"tj\": _2, \"tw\": _2, \"xj\": _2, \"xz\": _2, \"yn\": _2, \"zj\": _2, \"canva-apps\": _3, \"canvasite\": _24, \"myqnapcloud\": _3, \"quickconnect\": _27 }], \"co\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"nom\": _2, \"org\": _2, \"carrd\": _3, \"crd\": _3, \"otap\": _6, \"hidns\": _3, \"leadpages\": _3, \"lpages\": _3, \"mypi\": _3, \"xmit\": _6, \"firewalledreplit\": _9, \"repl\": _9, \"supabase\": [2, { \"realtime\": _3, \"storage\": _3 }] }], \"com\": [1, { \"a2hosted\": _3, \"cpserver\": _3, \"adobeaemcloud\": [2, { \"dev\": _6 }], \"africa\": _3, \"airkitapps\": _3, \"airkitapps-au\": _3, \"aivencloud\": _3, \"alibabacloudcs\": _3, \"kasserver\": _3, \"amazonaws\": [0, { \"af-south-1\": _30, \"ap-east-1\": _31, \"ap-northeast-1\": _32, \"ap-northeast-2\": _32, \"ap-northeast-3\": _30, \"ap-south-1\": _32, \"ap-south-2\": _33, \"ap-southeast-1\": _32, \"ap-southeast-2\": _32, \"ap-southeast-3\": _33, \"ap-southeast-4\": _33, \"ap-southeast-5\": [0, { \"execute-api\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-deprecated\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3 }], \"ca-central-1\": _35, \"ca-west-1\": [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _34, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-fips\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3 }], \"eu-central-1\": _32, \"eu-central-2\": _33, \"eu-north-1\": _31, \"eu-south-1\": _30, \"eu-south-2\": _33, \"eu-west-1\": [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-deprecated\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"analytics-gateway\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], \"eu-west-2\": _31, \"eu-west-3\": _30, \"il-central-1\": [0, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _25, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"aws-cloud9\": _28, \"cloud9\": [0, { \"vfs\": _3 }] }], \"me-central-1\": _33, \"me-south-1\": _31, \"sa-east-1\": _30, \"us-east-1\": [2, { \"execute-api\": _3, \"emrappui-prod\": _3, \"emrnotebooks-prod\": _3, \"emrstudio-prod\": _3, \"dualstack\": _34, \"s3\": _3, \"s3-accesspoint\": _3, \"s3-accesspoint-fips\": _3, \"s3-deprecated\": _3, \"s3-fips\": _3, \"s3-object-lambda\": _3, \"s3-website\": _3, \"analytics-gateway\": _3, \"aws-cloud9\": _28, \"cloud9\": _29 }], \"us-east-2\": _36, \"us-gov-east-1\": _38, \"us-gov-west-1\": _38, \"us-west-1\": _35, \"us-west-2\": _36, \"compute\": _6, \"compute-1\": _6, \"airflow\": [0, { \"af-south-1\": _6, \"ap-east-1\": _6, \"ap-northeast-1\": _6, \"ap-northeast-2\": _6, \"ap-northeast-3\": _6, \"ap-south-1\": _6, \"ap-south-2\": _6, \"ap-southeast-1\": _6, \"ap-southeast-2\": _6, \"ap-southeast-3\": _6, \"ap-southeast-4\": _6, \"ap-southeast-5\": _6, \"ca-central-1\": _6, \"ca-west-1\": _6, \"eu-central-1\": _6, \"eu-central-2\": _6, \"eu-north-1\": _6, \"eu-south-1\": _6, \"eu-south-2\": _6, \"eu-west-1\": _6, \"eu-west-2\": _6, \"eu-west-3\": _6, \"il-central-1\": _6, \"me-central-1\": _6, \"me-south-1\": _6, \"sa-east-1\": _6, \"us-east-1\": _6, \"us-east-2\": _6, \"us-west-1\": _6, \"us-west-2\": _6 }], \"s3\": _3, \"s3-1\": _3, \"s3-ap-east-1\": _3, \"s3-ap-northeast-1\": _3, \"s3-ap-northeast-2\": _3, \"s3-ap-northeast-3\": _3, \"s3-ap-south-1\": _3, \"s3-ap-southeast-1\": _3, \"s3-ap-southeast-2\": _3, \"s3-ca-central-1\": _3, \"s3-eu-central-1\": _3, \"s3-eu-north-1\": _3, \"s3-eu-west-1\": _3, \"s3-eu-west-2\": _3, \"s3-eu-west-3\": _3, \"s3-external-1\": _3, \"s3-fips-us-gov-east-1\": _3, \"s3-fips-us-gov-west-1\": _3, \"s3-global\": [0, { \"accesspoint\": [0, { \"mrap\": _3 }] }], \"s3-me-south-1\": _3, \"s3-sa-east-1\": _3, \"s3-us-east-2\": _3, \"s3-us-gov-east-1\": _3, \"s3-us-gov-west-1\": _3, \"s3-us-west-1\": _3, \"s3-us-west-2\": _3, \"s3-website-ap-northeast-1\": _3, \"s3-website-ap-southeast-1\": _3, \"s3-website-ap-southeast-2\": _3, \"s3-website-eu-west-1\": _3, \"s3-website-sa-east-1\": _3, \"s3-website-us-east-1\": _3, \"s3-website-us-gov-west-1\": _3, \"s3-website-us-west-1\": _3, \"s3-website-us-west-2\": _3, \"elb\": _6 }], \"amazoncognito\": [0, { \"af-south-1\": _39, \"ap-east-1\": _39, \"ap-northeast-1\": _39, \"ap-northeast-2\": _39, \"ap-northeast-3\": _39, \"ap-south-1\": _39, \"ap-south-2\": _39, \"ap-southeast-1\": _39, \"ap-southeast-2\": _39, \"ap-southeast-3\": _39, \"ap-southeast-4\": _39, \"ap-southeast-5\": _39, \"ap-southeast-7\": _39, \"ca-central-1\": _39, \"ca-west-1\": _39, \"eu-central-1\": _39, \"eu-central-2\": _39, \"eu-north-1\": _39, \"eu-south-1\": _39, \"eu-south-2\": _39, \"eu-west-1\": _39, \"eu-west-2\": _39, \"eu-west-3\": _39, \"il-central-1\": _39, \"me-central-1\": _39, \"me-south-1\": _39, \"mx-central-1\": _39, \"sa-east-1\": _39, \"us-east-1\": _40, \"us-east-2\": _40, \"us-gov-east-1\": _41, \"us-gov-west-1\": _41, \"us-west-1\": _40, \"us-west-2\": _40 }], \"amplifyapp\": _3, \"awsapprunner\": _6, \"awsapps\": _3, \"elasticbeanstalk\": [2, { \"af-south-1\": _3, \"ap-east-1\": _3, \"ap-northeast-1\": _3, \"ap-northeast-2\": _3, \"ap-northeast-3\": _3, \"ap-south-1\": _3, \"ap-southeast-1\": _3, \"ap-southeast-2\": _3, \"ap-southeast-3\": _3, \"ca-central-1\": _3, \"eu-central-1\": _3, \"eu-north-1\": _3, \"eu-south-1\": _3, \"eu-west-1\": _3, \"eu-west-2\": _3, \"eu-west-3\": _3, \"il-central-1\": _3, \"me-south-1\": _3, \"sa-east-1\": _3, \"us-east-1\": _3, \"us-east-2\": _3, \"us-gov-east-1\": _3, \"us-gov-west-1\": _3, \"us-west-1\": _3, \"us-west-2\": _3 }], \"awsglobalaccelerator\": _3, \"siiites\": _3, \"appspacehosted\": _3, \"appspaceusercontent\": _3, \"on-aptible\": _3, \"myasustor\": _3, \"balena-devices\": _3, \"boutir\": _3, \"bplaced\": _3, \"cafjs\": _3, \"canva-apps\": _3, \"cdn77-storage\": _3, \"br\": _3, \"cn\": _3, \"de\": _3, \"eu\": _3, \"jpn\": _3, \"mex\": _3, \"ru\": _3, \"sa\": _3, \"uk\": _3, \"us\": _3, \"za\": _3, \"clever-cloud\": [0, { \"services\": _6 }], \"dnsabr\": _3, \"ip-ddns\": _3, \"jdevcloud\": _3, \"wpdevcloud\": _3, \"cf-ipfs\": _3, \"cloudflare-ipfs\": _3, \"trycloudflare\": _3, \"co\": _3, \"devinapps\": _6, \"builtwithdark\": _3, \"datadetect\": [0, { \"demo\": _3, \"instance\": _3 }], \"dattolocal\": _3, \"dattorelay\": _3, \"dattoweb\": _3, \"mydatto\": _3, \"digitaloceanspaces\": _6, \"discordsays\": _3, \"discordsez\": _3, \"drayddns\": _3, \"dreamhosters\": _3, \"durumis\": _3, \"mydrobo\": _3, \"blogdns\": _3, \"cechire\": _3, \"dnsalias\": _3, \"dnsdojo\": _3, \"doesntexist\": _3, \"dontexist\": _3, \"doomdns\": _3, \"dyn-o-saur\": _3, \"dynalias\": _3, \"dyndns-at-home\": _3, \"dyndns-at-work\": _3, \"dyndns-blog\": _3, \"dyndns-free\": _3, \"dyndns-home\": _3, \"dyndns-ip\": _3, \"dyndns-mail\": _3, \"dyndns-office\": _3, \"dyndns-pics\": _3, \"dyndns-remote\": _3, \"dyndns-server\": _3, \"dyndns-web\": _3, \"dyndns-wiki\": _3, \"dyndns-work\": _3, \"est-a-la-maison\": _3, \"est-a-la-masion\": _3, \"est-le-patron\": _3, \"est-mon-blogueur\": _3, \"from-ak\": _3, \"from-al\": _3, \"from-ar\": _3, \"from-ca\": _3, \"from-ct\": _3, \"from-dc\": _3, \"from-de\": _3, \"from-fl\": _3, \"from-ga\": _3, \"from-hi\": _3, \"from-ia\": _3, \"from-id\": _3, \"from-il\": _3, \"from-in\": _3, \"from-ks\": _3, \"from-ky\": _3, \"from-ma\": _3, \"from-md\": _3, \"from-mi\": _3, \"from-mn\": _3, \"from-mo\": _3, \"from-ms\": _3, \"from-mt\": _3, \"from-nc\": _3, \"from-nd\": _3, \"from-ne\": _3, \"from-nh\": _3, \"from-nj\": _3, \"from-nm\": _3, \"from-nv\": _3, \"from-oh\": _3, \"from-ok\": _3, \"from-or\": _3, \"from-pa\": _3, \"from-pr\": _3, \"from-ri\": _3, \"from-sc\": _3, \"from-sd\": _3, \"from-tn\": _3, \"from-tx\": _3, \"from-ut\": _3, \"from-va\": _3, \"from-vt\": _3, \"from-wa\": _3, \"from-wi\": _3, \"from-wv\": _3, \"from-wy\": _3, \"getmyip\": _3, \"gotdns\": _3, \"hobby-site\": _3, \"homelinux\": _3, \"homeunix\": _3, \"iamallama\": _3, \"is-a-anarchist\": _3, \"is-a-blogger\": _3, \"is-a-bookkeeper\": _3, \"is-a-bulls-fan\": _3, \"is-a-caterer\": _3, \"is-a-chef\": _3, \"is-a-conservative\": _3, \"is-a-cpa\": _3, \"is-a-cubicle-slave\": _3, \"is-a-democrat\": _3, \"is-a-designer\": _3, \"is-a-doctor\": _3, \"is-a-financialadvisor\": _3, \"is-a-geek\": _3, \"is-a-green\": _3, \"is-a-guru\": _3, \"is-a-hard-worker\": _3, \"is-a-hunter\": _3, \"is-a-landscaper\": _3, \"is-a-lawyer\": _3, \"is-a-liberal\": _3, \"is-a-libertarian\": _3, \"is-a-llama\": _3, \"is-a-musician\": _3, \"is-a-nascarfan\": _3, \"is-a-nurse\": _3, \"is-a-painter\": _3, \"is-a-personaltrainer\": _3, \"is-a-photographer\": _3, \"is-a-player\": _3, \"is-a-republican\": _3, \"is-a-rockstar\": _3, \"is-a-socialist\": _3, \"is-a-student\": _3, \"is-a-teacher\": _3, \"is-a-techie\": _3, \"is-a-therapist\": _3, \"is-an-accountant\": _3, \"is-an-actor\": _3, \"is-an-actress\": _3, \"is-an-anarchist\": _3, \"is-an-artist\": _3, \"is-an-engineer\": _3, \"is-an-entertainer\": _3, \"is-certified\": _3, \"is-gone\": _3, \"is-into-anime\": _3, \"is-into-cars\": _3, \"is-into-cartoons\": _3, \"is-into-games\": _3, \"is-leet\": _3, \"is-not-certified\": _3, \"is-slick\": _3, \"is-uberleet\": _3, \"is-with-theband\": _3, \"isa-geek\": _3, \"isa-hockeynut\": _3, \"issmarterthanyou\": _3, \"likes-pie\": _3, \"likescandy\": _3, \"neat-url\": _3, \"saves-the-whales\": _3, \"selfip\": _3, \"sells-for-less\": _3, \"sells-for-u\": _3, \"servebbs\": _3, \"simple-url\": _3, \"space-to-rent\": _3, \"teaches-yoga\": _3, \"writesthisblog\": _3, \"ddnsfree\": _3, \"ddnsgeek\": _3, \"giize\": _3, \"gleeze\": _3, \"kozow\": _3, \"loseyourip\": _3, \"ooguy\": _3, \"theworkpc\": _3, \"mytuleap\": _3, \"tuleap-partners\": _3, \"encoreapi\": _3, \"evennode\": [0, { \"eu-1\": _3, \"eu-2\": _3, \"eu-3\": _3, \"eu-4\": _3, \"us-1\": _3, \"us-2\": _3, \"us-3\": _3, \"us-4\": _3 }], \"onfabrica\": _3, \"fastly-edge\": _3, \"fastly-terrarium\": _3, \"fastvps-server\": _3, \"mydobiss\": _3, \"firebaseapp\": _3, \"fldrv\": _3, \"forgeblocks\": _3, \"framercanvas\": _3, \"freebox-os\": _3, \"freeboxos\": _3, \"freemyip\": _3, \"aliases121\": _3, \"gentapps\": _3, \"gentlentapis\": _3, \"githubusercontent\": _3, \"0emm\": _6, \"appspot\": [2, { \"r\": _6 }], \"blogspot\": _3, \"codespot\": _3, \"googleapis\": _3, \"googlecode\": _3, \"pagespeedmobilizer\": _3, \"withgoogle\": _3, \"withyoutube\": _3, \"grayjayleagues\": _3, \"hatenablog\": _3, \"hatenadiary\": _3, \"herokuapp\": _3, \"gr\": _3, \"smushcdn\": _3, \"wphostedmail\": _3, \"wpmucdn\": _3, \"pixolino\": _3, \"apps-1and1\": _3, \"live-website\": _3, \"webspace-host\": _3, \"dopaas\": _3, \"hosted-by-previder\": _43, \"hosteur\": [0, { \"rag-cloud\": _3, \"rag-cloud-ch\": _3 }], \"ik-server\": [0, { \"jcloud\": _3, \"jcloud-ver-jpc\": _3 }], \"jelastic\": [0, { \"demo\": _3 }], \"massivegrid\": _43, \"wafaicloud\": [0, { \"jed\": _3, \"ryd\": _3 }], \"webadorsite\": _3, \"joyent\": [0, { \"cns\": _6 }], \"on-forge\": _3, \"on-vapor\": _3, \"lpusercontent\": _3, \"linode\": [0, { \"members\": _3, \"nodebalancer\": _6 }], \"linodeobjects\": _6, \"linodeusercontent\": [0, { \"ip\": _3 }], \"localtonet\": _3, \"lovableproject\": _3, \"barsycenter\": _3, \"barsyonline\": _3, \"lutrausercontent\": _6, \"modelscape\": _3, \"mwcloudnonprod\": _3, \"polyspace\": _3, \"mazeplay\": _3, \"miniserver\": _3, \"atmeta\": _3, \"fbsbx\": _42, \"meteorapp\": _44, \"routingthecloud\": _3, \"same-app\": _3, \"same-preview\": _3, \"mydbserver\": _3, \"hostedpi\": _3, \"mythic-beasts\": [0, { \"caracal\": _3, \"customer\": _3, \"fentiger\": _3, \"lynx\": _3, \"ocelot\": _3, \"oncilla\": _3, \"onza\": _3, \"sphinx\": _3, \"vs\": _3, \"x\": _3, \"yali\": _3 }], \"nospamproxy\": [0, { \"cloud\": [2, { \"o365\": _3 }] }], \"4u\": _3, \"nfshost\": _3, \"3utilities\": _3, \"blogsyte\": _3, \"ciscofreak\": _3, \"damnserver\": _3, \"ddnsking\": _3, \"ditchyourip\": _3, \"dnsiskinky\": _3, \"dynns\": _3, \"geekgalaxy\": _3, \"health-carereform\": _3, \"homesecuritymac\": _3, \"homesecuritypc\": _3, \"myactivedirectory\": _3, \"mysecuritycamera\": _3, \"myvnc\": _3, \"net-freaks\": _3, \"onthewifi\": _3, \"point2this\": _3, \"quicksytes\": _3, \"securitytactics\": _3, \"servebeer\": _3, \"servecounterstrike\": _3, \"serveexchange\": _3, \"serveftp\": _3, \"servegame\": _3, \"servehalflife\": _3, \"servehttp\": _3, \"servehumour\": _3, \"serveirc\": _3, \"servemp3\": _3, \"servep2p\": _3, \"servepics\": _3, \"servequake\": _3, \"servesarcasm\": _3, \"stufftoread\": _3, \"unusualperson\": _3, \"workisboring\": _3, \"myiphost\": _3, \"observableusercontent\": [0, { \"static\": _3 }], \"simplesite\": _3, \"oaiusercontent\": _6, \"orsites\": _3, \"operaunite\": _3, \"customer-oci\": [0, { \"*\": _3, \"oci\": _6, \"ocp\": _6, \"ocs\": _6 }], \"oraclecloudapps\": _6, \"oraclegovcloudapps\": _6, \"authgear-staging\": _3, \"authgearapps\": _3, \"skygearapp\": _3, \"outsystemscloud\": _3, \"ownprovider\": _3, \"pgfog\": _3, \"pagexl\": _3, \"gotpantheon\": _3, \"paywhirl\": _6, \"upsunapp\": _3, \"postman-echo\": _3, \"prgmr\": [0, { \"xen\": _3 }], \"project-study\": [0, { \"dev\": _3 }], \"pythonanywhere\": _44, \"qa2\": _3, \"alpha-myqnapcloud\": _3, \"dev-myqnapcloud\": _3, \"mycloudnas\": _3, \"mynascloud\": _3, \"myqnapcloud\": _3, \"qualifioapp\": _3, \"ladesk\": _3, \"qualyhqpartner\": _6, \"qualyhqportal\": _6, \"qbuser\": _3, \"quipelements\": _6, \"rackmaze\": _3, \"readthedocs-hosted\": _3, \"rhcloud\": _3, \"onrender\": _3, \"render\": _45, \"subsc-pay\": _3, \"180r\": _3, \"dojin\": _3, \"sakuratan\": _3, \"sakuraweb\": _3, \"x0\": _3, \"code\": [0, { \"builder\": _6, \"dev-builder\": _6, \"stg-builder\": _6 }], \"salesforce\": [0, { \"platform\": [0, { \"code-builder-stg\": [0, { \"test\": [0, { \"001\": _6 }] }] }] }], \"logoip\": _3, \"scrysec\": _3, \"firewall-gateway\": _3, \"myshopblocks\": _3, \"myshopify\": _3, \"shopitsite\": _3, \"1kapp\": _3, \"appchizi\": _3, \"applinzi\": _3, \"sinaapp\": _3, \"vipsinaapp\": _3, \"streamlitapp\": _3, \"try-snowplow\": _3, \"playstation-cloud\": _3, \"myspreadshop\": _3, \"w-corp-staticblitz\": _3, \"w-credentialless-staticblitz\": _3, \"w-staticblitz\": _3, \"stackhero-network\": _3, \"stdlib\": [0, { \"api\": _3 }], \"strapiapp\": [2, { \"media\": _3 }], \"streak-link\": _3, \"streaklinks\": _3, \"streakusercontent\": _3, \"temp-dns\": _3, \"dsmynas\": _3, \"familyds\": _3, \"mytabit\": _3, \"taveusercontent\": _3, \"tb-hosting\": _46, \"reservd\": _3, \"thingdustdata\": _3, \"townnews-staging\": _3, \"typeform\": [0, { \"pro\": _3 }], \"hk\": _3, \"it\": _3, \"deus-canvas\": _3, \"vultrobjects\": _6, \"wafflecell\": _3, \"hotelwithflight\": _3, \"reserve-online\": _3, \"cprapid\": _3, \"pleskns\": _3, \"remotewd\": _3, \"wiardweb\": [0, { \"pages\": _3 }], \"wixsite\": _3, \"wixstudio\": _3, \"messwithdns\": _3, \"woltlab-demo\": _3, \"wpenginepowered\": [2, { \"js\": _3 }], \"xnbay\": [2, { \"u2\": _3, \"u2-local\": _3 }], \"yolasite\": _3 }], \"coop\": _2, \"cr\": [1, { \"ac\": _2, \"co\": _2, \"ed\": _2, \"fi\": _2, \"go\": _2, \"or\": _2, \"sa\": _2 }], \"cu\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"inf\": _2, \"nat\": _2, \"net\": _2, \"org\": _2 }], \"cv\": [1, { \"com\": _2, \"edu\": _2, \"id\": _2, \"int\": _2, \"net\": _2, \"nome\": _2, \"org\": _2, \"publ\": _2 }], \"cw\": _47, \"cx\": [1, { \"gov\": _2, \"cloudns\": _3, \"ath\": _3, \"info\": _3, \"assessments\": _3, \"calculators\": _3, \"funnels\": _3, \"paynow\": _3, \"quizzes\": _3, \"researched\": _3, \"tests\": _3 }], \"cy\": [1, { \"ac\": _2, \"biz\": _2, \"com\": [1, { \"scaleforce\": _48 }], \"ekloges\": _2, \"gov\": _2, \"ltd\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"press\": _2, \"pro\": _2, \"tm\": _2 }], \"cz\": [1, { \"gov\": _2, \"contentproxy9\": [0, { \"rsc\": _3 }], \"realm\": _3, \"e4\": _3, \"co\": _3, \"metacentrum\": [0, { \"cloud\": _6, \"custom\": _3 }], \"muni\": [0, { \"cloud\": [0, { \"flt\": _3, \"usr\": _3 }] }] }], \"de\": [1, { \"bplaced\": _3, \"square7\": _3, \"com\": _3, \"cosidns\": _49, \"dnsupdater\": _3, \"dynamisches-dns\": _3, \"internet-dns\": _3, \"l-o-g-i-n\": _3, \"ddnss\": [2, { \"dyn\": _3, \"dyndns\": _3 }], \"dyn-ip24\": _3, \"dyndns1\": _3, \"home-webserver\": [2, { \"dyn\": _3 }], \"myhome-server\": _3, \"dnshome\": _3, \"fuettertdasnetz\": _3, \"isteingeek\": _3, \"istmein\": _3, \"lebtimnetz\": _3, \"leitungsen\": _3, \"traeumtgerade\": _3, \"frusky\": _6, \"goip\": _3, \"xn--gnstigbestellen-zvb\": _3, \"günstigbestellen\": _3, \"xn--gnstigliefern-wob\": _3, \"günstigliefern\": _3, \"hs-heilbronn\": [0, { \"it\": [0, { \"pages\": _3, \"pages-research\": _3 }] }], \"dyn-berlin\": _3, \"in-berlin\": _3, \"in-brb\": _3, \"in-butter\": _3, \"in-dsl\": _3, \"in-vpn\": _3, \"iservschule\": _3, \"mein-iserv\": _3, \"schuldock\": _3, \"schulplattform\": _3, \"schulserver\": _3, \"test-iserv\": _3, \"keymachine\": _3, \"co\": _3, \"git-repos\": _3, \"lcube-server\": _3, \"svn-repos\": _3, \"barsy\": _3, \"webspaceconfig\": _3, \"123webseite\": _3, \"rub\": _3, \"ruhr-uni-bochum\": [2, { \"noc\": [0, { \"io\": _3 }] }], \"logoip\": _3, \"firewall-gateway\": _3, \"my-gateway\": _3, \"my-router\": _3, \"spdns\": _3, \"my\": _3, \"speedpartner\": [0, { \"customer\": _3 }], \"myspreadshop\": _3, \"taifun-dns\": _3, \"12hp\": _3, \"2ix\": _3, \"4lima\": _3, \"lima-city\": _3, \"dd-dns\": _3, \"dray-dns\": _3, \"draydns\": _3, \"dyn-vpn\": _3, \"dynvpn\": _3, \"mein-vigor\": _3, \"my-vigor\": _3, \"my-wan\": _3, \"syno-ds\": _3, \"synology-diskstation\": _3, \"synology-ds\": _3, \"virtual-user\": _3, \"virtualuser\": _3, \"community-pro\": _3, \"diskussionsbereich\": _3 }], \"dj\": _2, \"dk\": [1, { \"biz\": _3, \"co\": _3, \"firm\": _3, \"reg\": _3, \"store\": _3, \"123hjemmeside\": _3, \"myspreadshop\": _3 }], \"dm\": _51, \"do\": [1, { \"art\": _2, \"com\": _2, \"edu\": _2, \"gob\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"sld\": _2, \"web\": _2 }], \"dz\": [1, { \"art\": _2, \"asso\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"pol\": _2, \"soc\": _2, \"tm\": _2 }], \"ec\": [1, { \"abg\": _2, \"adm\": _2, \"agron\": _2, \"arqt\": _2, \"art\": _2, \"bar\": _2, \"chef\": _2, \"com\": _2, \"cont\": _2, \"cpa\": _2, \"cue\": _2, \"dent\": _2, \"dgn\": _2, \"disco\": _2, \"doc\": _2, \"edu\": _2, \"eng\": _2, \"esm\": _2, \"fin\": _2, \"fot\": _2, \"gal\": _2, \"gob\": _2, \"gov\": _2, \"gye\": _2, \"ibr\": _2, \"info\": _2, \"k12\": _2, \"lat\": _2, \"loj\": _2, \"med\": _2, \"mil\": _2, \"mktg\": _2, \"mon\": _2, \"net\": _2, \"ntr\": _2, \"odont\": _2, \"org\": _2, \"pro\": _2, \"prof\": _2, \"psic\": _2, \"psiq\": _2, \"pub\": _2, \"rio\": _2, \"rrpp\": _2, \"sal\": _2, \"tech\": _2, \"tul\": _2, \"tur\": _2, \"uio\": _2, \"vet\": _2, \"xxx\": _2, \"base\": _3, \"official\": _3 }], \"edu\": [1, { \"rit\": [0, { \"git-pages\": _3 }] }], \"ee\": [1, { \"aip\": _2, \"com\": _2, \"edu\": _2, \"fie\": _2, \"gov\": _2, \"lib\": _2, \"med\": _2, \"org\": _2, \"pri\": _2, \"riik\": _2 }], \"eg\": [1, { \"ac\": _2, \"com\": _2, \"edu\": _2, \"eun\": _2, \"gov\": _2, \"info\": _2, \"me\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"sci\": _2, \"sport\": _2, \"tv\": _2 }], \"er\": _20, \"es\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"nom\": _2, \"org\": _2, \"123miweb\": _3, \"myspreadshop\": _3 }], \"et\": [1, { \"biz\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"name\": _2, \"net\": _2, \"org\": _2 }], \"eu\": [1, { \"airkitapps\": _3, \"cloudns\": _3, \"dogado\": [0, { \"jelastic\": _3 }], \"barsy\": _3, \"spdns\": _3, \"nxa\": _6, \"transurl\": _6, \"diskstation\": _3 }], \"fi\": [1, { \"aland\": _2, \"dy\": _3, \"xn--hkkinen-5wa\": _3, \"häkkinen\": _3, \"iki\": _3, \"cloudplatform\": [0, { \"fi\": _3 }], \"datacenter\": [0, { \"demo\": _3, \"paas\": _3 }], \"kapsi\": _3, \"123kotisivu\": _3, \"myspreadshop\": _3 }], \"fj\": [1, { \"ac\": _2, \"biz\": _2, \"com\": _2, \"gov\": _2, \"info\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pro\": _2 }], \"fk\": _20, \"fm\": [1, { \"com\": _2, \"edu\": _2, \"net\": _2, \"org\": _2, \"radio\": _3, \"user\": _6 }], \"fo\": _2, \"fr\": [1, { \"asso\": _2, \"com\": _2, \"gouv\": _2, \"nom\": _2, \"prd\": _2, \"tm\": _2, \"avoues\": _2, \"cci\": _2, \"greta\": _2, \"huissier-justice\": _2, \"en-root\": _3, \"fbx-os\": _3, \"fbxos\": _3, \"freebox-os\": _3, \"freeboxos\": _3, \"goupile\": _3, \"123siteweb\": _3, \"on-web\": _3, \"chirurgiens-dentistes-en-france\": _3, \"dedibox\": _3, \"aeroport\": _3, \"avocat\": _3, \"chambagri\": _3, \"chirurgiens-dentistes\": _3, \"experts-comptables\": _3, \"medecin\": _3, \"notaires\": _3, \"pharmacien\": _3, \"port\": _3, \"veterinaire\": _3, \"myspreadshop\": _3, \"ynh\": _3 }], \"ga\": _2, \"gb\": _2, \"gd\": [1, { \"edu\": _2, \"gov\": _2 }], \"ge\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"pvt\": _2, \"school\": _2 }], \"gf\": _2, \"gg\": [1, { \"co\": _2, \"net\": _2, \"org\": _2, \"botdash\": _3, \"kaas\": _3, \"stackit\": _3, \"panel\": [2, { \"daemon\": _3 }] }], \"gh\": [1, { \"biz\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"gi\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"ltd\": _2, \"mod\": _2, \"org\": _2 }], \"gl\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"net\": _2, \"org\": _2 }], \"gm\": _2, \"gn\": [1, { \"ac\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], \"gov\": _2, \"gp\": [1, { \"asso\": _2, \"com\": _2, \"edu\": _2, \"mobi\": _2, \"net\": _2, \"org\": _2 }], \"gq\": _2, \"gr\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"barsy\": _3, \"simplesite\": _3 }], \"gs\": _2, \"gt\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"ind\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"gu\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"guam\": _2, \"info\": _2, \"net\": _2, \"org\": _2, \"web\": _2 }], \"gw\": [1, { \"nx\": _3 }], \"gy\": _51, \"hk\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"idv\": _2, \"net\": _2, \"org\": _2, \"xn--ciqpn\": _2, \"个人\": _2, \"xn--gmqw5a\": _2, \"個人\": _2, \"xn--55qx5d\": _2, \"公司\": _2, \"xn--mxtq1m\": _2, \"政府\": _2, \"xn--lcvr32d\": _2, \"敎育\": _2, \"xn--wcvs22d\": _2, \"教育\": _2, \"xn--gmq050i\": _2, \"箇人\": _2, \"xn--uc0atv\": _2, \"組織\": _2, \"xn--uc0ay4a\": _2, \"組织\": _2, \"xn--od0alg\": _2, \"網絡\": _2, \"xn--zf0avx\": _2, \"網络\": _2, \"xn--mk0axi\": _2, \"组織\": _2, \"xn--tn0ag\": _2, \"组织\": _2, \"xn--od0aq3b\": _2, \"网絡\": _2, \"xn--io0a7i\": _2, \"网络\": _2, \"inc\": _3, \"ltd\": _3 }], \"hm\": _2, \"hn\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"hr\": [1, { \"com\": _2, \"from\": _2, \"iz\": _2, \"name\": _2, \"brendly\": _19 }], \"ht\": [1, { \"adult\": _2, \"art\": _2, \"asso\": _2, \"com\": _2, \"coop\": _2, \"edu\": _2, \"firm\": _2, \"gouv\": _2, \"info\": _2, \"med\": _2, \"net\": _2, \"org\": _2, \"perso\": _2, \"pol\": _2, \"pro\": _2, \"rel\": _2, \"shop\": _2, \"rt\": _3 }], \"hu\": [1, { \"2000\": _2, \"agrar\": _2, \"bolt\": _2, \"casino\": _2, \"city\": _2, \"co\": _2, \"erotica\": _2, \"erotika\": _2, \"film\": _2, \"forum\": _2, \"games\": _2, \"hotel\": _2, \"info\": _2, \"ingatlan\": _2, \"jogasz\": _2, \"konyvelo\": _2, \"lakas\": _2, \"media\": _2, \"news\": _2, \"org\": _2, \"priv\": _2, \"reklam\": _2, \"sex\": _2, \"shop\": _2, \"sport\": _2, \"suli\": _2, \"szex\": _2, \"tm\": _2, \"tozsde\": _2, \"utazas\": _2, \"video\": _2 }], \"id\": [1, { \"ac\": _2, \"biz\": _2, \"co\": _2, \"desa\": _2, \"go\": _2, \"kop\": _2, \"mil\": _2, \"my\": _2, \"net\": _2, \"or\": _2, \"ponpes\": _2, \"sch\": _2, \"web\": _2, \"zone\": _3 }], \"ie\": [1, { \"gov\": _2, \"myspreadshop\": _3 }], \"il\": [1, { \"ac\": _2, \"co\": [1, { \"ravpage\": _3, \"mytabit\": _3, \"tabitorder\": _3 }], \"gov\": _2, \"idf\": _2, \"k12\": _2, \"muni\": _2, \"net\": _2, \"org\": _2 }], \"xn--4dbrk0ce\": [1, { \"xn--4dbgdty6c\": _2, \"xn--5dbhl8d\": _2, \"xn--8dbq2a\": _2, \"xn--hebda8b\": _2 }], \"ישראל\": [1, { \"אקדמיה\": _2, \"ישוב\": _2, \"צהל\": _2, \"ממשל\": _2 }], \"im\": [1, { \"ac\": _2, \"co\": [1, { \"ltd\": _2, \"plc\": _2 }], \"com\": _2, \"net\": _2, \"org\": _2, \"tt\": _2, \"tv\": _2 }], \"in\": [1, { \"5g\": _2, \"6g\": _2, \"ac\": _2, \"ai\": _2, \"am\": _2, \"bihar\": _2, \"biz\": _2, \"business\": _2, \"ca\": _2, \"cn\": _2, \"co\": _2, \"com\": _2, \"coop\": _2, \"cs\": _2, \"delhi\": _2, \"dr\": _2, \"edu\": _2, \"er\": _2, \"firm\": _2, \"gen\": _2, \"gov\": _2, \"gujarat\": _2, \"ind\": _2, \"info\": _2, \"int\": _2, \"internet\": _2, \"io\": _2, \"me\": _2, \"mil\": _2, \"net\": _2, \"nic\": _2, \"org\": _2, \"pg\": _2, \"post\": _2, \"pro\": _2, \"res\": _2, \"travel\": _2, \"tv\": _2, \"uk\": _2, \"up\": _2, \"us\": _2, \"cloudns\": _3, \"barsy\": _3, \"web\": _3, \"supabase\": _3 }], \"info\": [1, { \"cloudns\": _3, \"dynamic-dns\": _3, \"barrel-of-knowledge\": _3, \"barrell-of-knowledge\": _3, \"dyndns\": _3, \"for-our\": _3, \"groks-the\": _3, \"groks-this\": _3, \"here-for-more\": _3, \"knowsitall\": _3, \"selfip\": _3, \"webhop\": _3, \"barsy\": _3, \"mayfirst\": _3, \"mittwald\": _3, \"mittwaldserver\": _3, \"typo3server\": _3, \"dvrcam\": _3, \"ilovecollege\": _3, \"no-ip\": _3, \"forumz\": _3, \"nsupdate\": _3, \"dnsupdate\": _3, \"v-info\": _3 }], \"int\": [1, { \"eu\": _2 }], \"io\": [1, { \"2038\": _3, \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"nom\": _2, \"org\": _2, \"on-acorn\": _6, \"myaddr\": _3, \"apigee\": _3, \"b-data\": _3, \"beagleboard\": _3, \"bitbucket\": _3, \"bluebite\": _3, \"boxfuse\": _3, \"brave\": _7, \"browsersafetymark\": _3, \"bubble\": _54, \"bubbleapps\": _3, \"bigv\": [0, { \"uk0\": _3 }], \"cleverapps\": _3, \"cloudbeesusercontent\": _3, \"dappnode\": [0, { \"dyndns\": _3 }], \"darklang\": _3, \"definima\": _3, \"dedyn\": _3, \"icp0\": _55, \"icp1\": _55, \"qzz\": _3, \"fh-muenster\": _3, \"shw\": _3, \"forgerock\": [0, { \"id\": _3 }], \"github\": _3, \"gitlab\": _3, \"lolipop\": _3, \"hasura-app\": _3, \"hostyhosting\": _3, \"hypernode\": _3, \"moonscale\": _6, \"beebyte\": _43, \"beebyteapp\": [0, { \"sekd1\": _3 }], \"jele\": _3, \"webthings\": _3, \"loginline\": _3, \"barsy\": _3, \"azurecontainer\": _6, \"ngrok\": [2, { \"ap\": _3, \"au\": _3, \"eu\": _3, \"in\": _3, \"jp\": _3, \"sa\": _3, \"us\": _3 }], \"nodeart\": [0, { \"stage\": _3 }], \"pantheonsite\": _3, \"pstmn\": [2, { \"mock\": _3 }], \"protonet\": _3, \"qcx\": [2, { \"sys\": _6 }], \"qoto\": _3, \"vaporcloud\": _3, \"myrdbx\": _3, \"rb-hosting\": _46, \"on-k3s\": _6, \"on-rio\": _6, \"readthedocs\": _3, \"resindevice\": _3, \"resinstaging\": [0, { \"devices\": _3 }], \"hzc\": _3, \"sandcats\": _3, \"scrypted\": [0, { \"client\": _3 }], \"mo-siemens\": _3, \"lair\": _42, \"stolos\": _6, \"musician\": _3, \"utwente\": _3, \"edugit\": _3, \"telebit\": _3, \"thingdust\": [0, { \"dev\": _56, \"disrec\": _56, \"prod\": _57, \"testing\": _56 }], \"tickets\": _3, \"webflow\": _3, \"webflowtest\": _3, \"editorx\": _3, \"wixstudio\": _3, \"basicserver\": _3, \"virtualserver\": _3 }], \"iq\": _5, \"ir\": [1, { \"ac\": _2, \"co\": _2, \"gov\": _2, \"id\": _2, \"net\": _2, \"org\": _2, \"sch\": _2, \"xn--mgba3a4f16a\": _2, \"ایران\": _2, \"xn--mgba3a4fra\": _2, \"ايران\": _2, \"arvanedge\": _3, \"vistablog\": _3 }], \"is\": _2, \"it\": [1, { \"edu\": _2, \"gov\": _2, \"abr\": _2, \"abruzzo\": _2, \"aosta-valley\": _2, \"aostavalley\": _2, \"bas\": _2, \"basilicata\": _2, \"cal\": _2, \"calabria\": _2, \"cam\": _2, \"campania\": _2, \"emilia-romagna\": _2, \"emiliaromagna\": _2, \"emr\": _2, \"friuli-v-giulia\": _2, \"friuli-ve-giulia\": _2, \"friuli-vegiulia\": _2, \"friuli-venezia-giulia\": _2, \"friuli-veneziagiulia\": _2, \"friuli-vgiulia\": _2, \"friuliv-giulia\": _2, \"friulive-giulia\": _2, \"friulivegiulia\": _2, \"friulivenezia-giulia\": _2, \"friuliveneziagiulia\": _2, \"friulivgiulia\": _2, \"fvg\": _2, \"laz\": _2, \"lazio\": _2, \"lig\": _2, \"liguria\": _2, \"lom\": _2, \"lombardia\": _2, \"lombardy\": _2, \"lucania\": _2, \"mar\": _2, \"marche\": _2, \"mol\": _2, \"molise\": _2, \"piedmont\": _2, \"piemonte\": _2, \"pmn\": _2, \"pug\": _2, \"puglia\": _2, \"sar\": _2, \"sardegna\": _2, \"sardinia\": _2, \"sic\": _2, \"sicilia\": _2, \"sicily\": _2, \"taa\": _2, \"tos\": _2, \"toscana\": _2, \"trentin-sud-tirol\": _2, \"xn--trentin-sd-tirol-rzb\": _2, \"trentin-süd-tirol\": _2, \"trentin-sudtirol\": _2, \"xn--trentin-sdtirol-7vb\": _2, \"trentin-südtirol\": _2, \"trentin-sued-tirol\": _2, \"trentin-suedtirol\": _2, \"trentino\": _2, \"trentino-a-adige\": _2, \"trentino-aadige\": _2, \"trentino-alto-adige\": _2, \"trentino-altoadige\": _2, \"trentino-s-tirol\": _2, \"trentino-stirol\": _2, \"trentino-sud-tirol\": _2, \"xn--trentino-sd-tirol-c3b\": _2, \"trentino-süd-tirol\": _2, \"trentino-sudtirol\": _2, \"xn--trentino-sdtirol-szb\": _2, \"trentino-südtirol\": _2, \"trentino-sued-tirol\": _2, \"trentino-suedtirol\": _2, \"trentinoa-adige\": _2, \"trentinoaadige\": _2, \"trentinoalto-adige\": _2, \"trentinoaltoadige\": _2, \"trentinos-tirol\": _2, \"trentinostirol\": _2, \"trentinosud-tirol\": _2, \"xn--trentinosd-tirol-rzb\": _2, \"trentinosüd-tirol\": _2, \"trentinosudtirol\": _2, \"xn--trentinosdtirol-7vb\": _2, \"trentinosüdtirol\": _2, \"trentinosued-tirol\": _2, \"trentinosuedtirol\": _2, \"trentinsud-tirol\": _2, \"xn--trentinsd-tirol-6vb\": _2, \"trentinsüd-tirol\": _2, \"trentinsudtirol\": _2, \"xn--trentinsdtirol-nsb\": _2, \"trentinsüdtirol\": _2, \"trentinsued-tirol\": _2, \"trentinsuedtirol\": _2, \"tuscany\": _2, \"umb\": _2, \"umbria\": _2, \"val-d-aosta\": _2, \"val-daosta\": _2, \"vald-aosta\": _2, \"valdaosta\": _2, \"valle-aosta\": _2, \"valle-d-aosta\": _2, \"valle-daosta\": _2, \"valleaosta\": _2, \"valled-aosta\": _2, \"valledaosta\": _2, \"vallee-aoste\": _2, \"xn--valle-aoste-ebb\": _2, \"vallée-aoste\": _2, \"vallee-d-aoste\": _2, \"xn--valle-d-aoste-ehb\": _2, \"vallée-d-aoste\": _2, \"valleeaoste\": _2, \"xn--valleaoste-e7a\": _2, \"valléeaoste\": _2, \"valleedaoste\": _2, \"xn--valledaoste-ebb\": _2, \"valléedaoste\": _2, \"vao\": _2, \"vda\": _2, \"ven\": _2, \"veneto\": _2, \"ag\": _2, \"agrigento\": _2, \"al\": _2, \"alessandria\": _2, \"alto-adige\": _2, \"altoadige\": _2, \"an\": _2, \"ancona\": _2, \"andria-barletta-trani\": _2, \"andria-trani-barletta\": _2, \"andriabarlettatrani\": _2, \"andriatranibarletta\": _2, \"ao\": _2, \"aosta\": _2, \"aoste\": _2, \"ap\": _2, \"aq\": _2, \"aquila\": _2, \"ar\": _2, \"arezzo\": _2, \"ascoli-piceno\": _2, \"ascolipiceno\": _2, \"asti\": _2, \"at\": _2, \"av\": _2, \"avellino\": _2, \"ba\": _2, \"balsan\": _2, \"balsan-sudtirol\": _2, \"xn--balsan-sdtirol-nsb\": _2, \"balsan-südtirol\": _2, \"balsan-suedtirol\": _2, \"bari\": _2, \"barletta-trani-andria\": _2, \"barlettatraniandria\": _2, \"belluno\": _2, \"benevento\": _2, \"bergamo\": _2, \"bg\": _2, \"bi\": _2, \"biella\": _2, \"bl\": _2, \"bn\": _2, \"bo\": _2, \"bologna\": _2, \"bolzano\": _2, \"bolzano-altoadige\": _2, \"bozen\": _2, \"bozen-sudtirol\": _2, \"xn--bozen-sdtirol-2ob\": _2, \"bozen-südtirol\": _2, \"bozen-suedtirol\": _2, \"br\": _2, \"brescia\": _2, \"brindisi\": _2, \"bs\": _2, \"bt\": _2, \"bulsan\": _2, \"bulsan-sudtirol\": _2, \"xn--bulsan-sdtirol-nsb\": _2, \"bulsan-südtirol\": _2, \"bulsan-suedtirol\": _2, \"bz\": _2, \"ca\": _2, \"cagliari\": _2, \"caltanissetta\": _2, \"campidano-medio\": _2, \"campidanomedio\": _2, \"campobasso\": _2, \"carbonia-iglesias\": _2, \"carboniaiglesias\": _2, \"carrara-massa\": _2, \"carraramassa\": _2, \"caserta\": _2, \"catania\": _2, \"catanzaro\": _2, \"cb\": _2, \"ce\": _2, \"cesena-forli\": _2, \"xn--cesena-forl-mcb\": _2, \"cesena-forlì\": _2, \"cesenaforli\": _2, \"xn--cesenaforl-i8a\": _2, \"cesenaforlì\": _2, \"ch\": _2, \"chieti\": _2, \"ci\": _2, \"cl\": _2, \"cn\": _2, \"co\": _2, \"como\": _2, \"cosenza\": _2, \"cr\": _2, \"cremona\": _2, \"crotone\": _2, \"cs\": _2, \"ct\": _2, \"cuneo\": _2, \"cz\": _2, \"dell-ogliastra\": _2, \"dellogliastra\": _2, \"en\": _2, \"enna\": _2, \"fc\": _2, \"fe\": _2, \"fermo\": _2, \"ferrara\": _2, \"fg\": _2, \"fi\": _2, \"firenze\": _2, \"florence\": _2, \"fm\": _2, \"foggia\": _2, \"forli-cesena\": _2, \"xn--forl-cesena-fcb\": _2, \"forlì-cesena\": _2, \"forlicesena\": _2, \"xn--forlcesena-c8a\": _2, \"forlìcesena\": _2, \"fr\": _2, \"frosinone\": _2, \"ge\": _2, \"genoa\": _2, \"genova\": _2, \"go\": _2, \"gorizia\": _2, \"gr\": _2, \"grosseto\": _2, \"iglesias-carbonia\": _2, \"iglesiascarbonia\": _2, \"im\": _2, \"imperia\": _2, \"is\": _2, \"isernia\": _2, \"kr\": _2, \"la-spezia\": _2, \"laquila\": _2, \"laspezia\": _2, \"latina\": _2, \"lc\": _2, \"le\": _2, \"lecce\": _2, \"lecco\": _2, \"li\": _2, \"livorno\": _2, \"lo\": _2, \"lodi\": _2, \"lt\": _2, \"lu\": _2, \"lucca\": _2, \"macerata\": _2, \"mantova\": _2, \"massa-carrara\": _2, \"massacarrara\": _2, \"matera\": _2, \"mb\": _2, \"mc\": _2, \"me\": _2, \"medio-campidano\": _2, \"mediocampidano\": _2, \"messina\": _2, \"mi\": _2, \"milan\": _2, \"milano\": _2, \"mn\": _2, \"mo\": _2, \"modena\": _2, \"monza\": _2, \"monza-brianza\": _2, \"monza-e-della-brianza\": _2, \"monzabrianza\": _2, \"monzaebrianza\": _2, \"monzaedellabrianza\": _2, \"ms\": _2, \"mt\": _2, \"na\": _2, \"naples\": _2, \"napoli\": _2, \"no\": _2, \"novara\": _2, \"nu\": _2, \"nuoro\": _2, \"og\": _2, \"ogliastra\": _2, \"olbia-tempio\": _2, \"olbiatempio\": _2, \"or\": _2, \"oristano\": _2, \"ot\": _2, \"pa\": _2, \"padova\": _2, \"padua\": _2, \"palermo\": _2, \"parma\": _2, \"pavia\": _2, \"pc\": _2, \"pd\": _2, \"pe\": _2, \"perugia\": _2, \"pesaro-urbino\": _2, \"pesarourbino\": _2, \"pescara\": _2, \"pg\": _2, \"pi\": _2, \"piacenza\": _2, \"pisa\": _2, \"pistoia\": _2, \"pn\": _2, \"po\": _2, \"pordenone\": _2, \"potenza\": _2, \"pr\": _2, \"prato\": _2, \"pt\": _2, \"pu\": _2, \"pv\": _2, \"pz\": _2, \"ra\": _2, \"ragusa\": _2, \"ravenna\": _2, \"rc\": _2, \"re\": _2, \"reggio-calabria\": _2, \"reggio-emilia\": _2, \"reggiocalabria\": _2, \"reggioemilia\": _2, \"rg\": _2, \"ri\": _2, \"rieti\": _2, \"rimini\": _2, \"rm\": _2, \"rn\": _2, \"ro\": _2, \"roma\": _2, \"rome\": _2, \"rovigo\": _2, \"sa\": _2, \"salerno\": _2, \"sassari\": _2, \"savona\": _2, \"si\": _2, \"siena\": _2, \"siracusa\": _2, \"so\": _2, \"sondrio\": _2, \"sp\": _2, \"sr\": _2, \"ss\": _2, \"xn--sdtirol-n2a\": _2, \"südtirol\": _2, \"suedtirol\": _2, \"sv\": _2, \"ta\": _2, \"taranto\": _2, \"te\": _2, \"tempio-olbia\": _2, \"tempioolbia\": _2, \"teramo\": _2, \"terni\": _2, \"tn\": _2, \"to\": _2, \"torino\": _2, \"tp\": _2, \"tr\": _2, \"trani-andria-barletta\": _2, \"trani-barletta-andria\": _2, \"traniandriabarletta\": _2, \"tranibarlettaandria\": _2, \"trapani\": _2, \"trento\": _2, \"treviso\": _2, \"trieste\": _2, \"ts\": _2, \"turin\": _2, \"tv\": _2, \"ud\": _2, \"udine\": _2, \"urbino-pesaro\": _2, \"urbinopesaro\": _2, \"va\": _2, \"varese\": _2, \"vb\": _2, \"vc\": _2, \"ve\": _2, \"venezia\": _2, \"venice\": _2, \"verbania\": _2, \"vercelli\": _2, \"verona\": _2, \"vi\": _2, \"vibo-valentia\": _2, \"vibovalentia\": _2, \"vicenza\": _2, \"viterbo\": _2, \"vr\": _2, \"vs\": _2, \"vt\": _2, \"vv\": _2, \"12chars\": _3, \"ibxos\": _3, \"iliadboxos\": _3, \"neen\": [0, { \"jc\": _3 }], \"123homepage\": _3, \"16-b\": _3, \"32-b\": _3, \"64-b\": _3, \"myspreadshop\": _3, \"syncloud\": _3 }], \"je\": [1, { \"co\": _2, \"net\": _2, \"org\": _2, \"of\": _3 }], \"jm\": _20, \"jo\": [1, { \"agri\": _2, \"ai\": _2, \"com\": _2, \"edu\": _2, \"eng\": _2, \"fm\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"per\": _2, \"phd\": _2, \"sch\": _2, \"tv\": _2 }], \"jobs\": _2, \"jp\": [1, { \"ac\": _2, \"ad\": _2, \"co\": _2, \"ed\": _2, \"go\": _2, \"gr\": _2, \"lg\": _2, \"ne\": [1, { \"aseinet\": _53, \"gehirn\": _3, \"ivory\": _3, \"mail-box\": _3, \"mints\": _3, \"mokuren\": _3, \"opal\": _3, \"sakura\": _3, \"sumomo\": _3, \"topaz\": _3 }], \"or\": _2, \"aichi\": [1, { \"aisai\": _2, \"ama\": _2, \"anjo\": _2, \"asuke\": _2, \"chiryu\": _2, \"chita\": _2, \"fuso\": _2, \"gamagori\": _2, \"handa\": _2, \"hazu\": _2, \"hekinan\": _2, \"higashiura\": _2, \"ichinomiya\": _2, \"inazawa\": _2, \"inuyama\": _2, \"isshiki\": _2, \"iwakura\": _2, \"kanie\": _2, \"kariya\": _2, \"kasugai\": _2, \"kira\": _2, \"kiyosu\": _2, \"komaki\": _2, \"konan\": _2, \"kota\": _2, \"mihama\": _2, \"miyoshi\": _2, \"nishio\": _2, \"nisshin\": _2, \"obu\": _2, \"oguchi\": _2, \"oharu\": _2, \"okazaki\": _2, \"owariasahi\": _2, \"seto\": _2, \"shikatsu\": _2, \"shinshiro\": _2, \"shitara\": _2, \"tahara\": _2, \"takahama\": _2, \"tobishima\": _2, \"toei\": _2, \"togo\": _2, \"tokai\": _2, \"tokoname\": _2, \"toyoake\": _2, \"toyohashi\": _2, \"toyokawa\": _2, \"toyone\": _2, \"toyota\": _2, \"tsushima\": _2, \"yatomi\": _2 }], \"akita\": [1, { \"akita\": _2, \"daisen\": _2, \"fujisato\": _2, \"gojome\": _2, \"hachirogata\": _2, \"happou\": _2, \"higashinaruse\": _2, \"honjo\": _2, \"honjyo\": _2, \"ikawa\": _2, \"kamikoani\": _2, \"kamioka\": _2, \"katagami\": _2, \"kazuno\": _2, \"kitaakita\": _2, \"kosaka\": _2, \"kyowa\": _2, \"misato\": _2, \"mitane\": _2, \"moriyoshi\": _2, \"nikaho\": _2, \"noshiro\": _2, \"odate\": _2, \"oga\": _2, \"ogata\": _2, \"semboku\": _2, \"yokote\": _2, \"yurihonjo\": _2 }], \"aomori\": [1, { \"aomori\": _2, \"gonohe\": _2, \"hachinohe\": _2, \"hashikami\": _2, \"hiranai\": _2, \"hirosaki\": _2, \"itayanagi\": _2, \"kuroishi\": _2, \"misawa\": _2, \"mutsu\": _2, \"nakadomari\": _2, \"noheji\": _2, \"oirase\": _2, \"owani\": _2, \"rokunohe\": _2, \"sannohe\": _2, \"shichinohe\": _2, \"shingo\": _2, \"takko\": _2, \"towada\": _2, \"tsugaru\": _2, \"tsuruta\": _2 }], \"chiba\": [1, { \"abiko\": _2, \"asahi\": _2, \"chonan\": _2, \"chosei\": _2, \"choshi\": _2, \"chuo\": _2, \"funabashi\": _2, \"futtsu\": _2, \"hanamigawa\": _2, \"ichihara\": _2, \"ichikawa\": _2, \"ichinomiya\": _2, \"inzai\": _2, \"isumi\": _2, \"kamagaya\": _2, \"kamogawa\": _2, \"kashiwa\": _2, \"katori\": _2, \"katsuura\": _2, \"kimitsu\": _2, \"kisarazu\": _2, \"kozaki\": _2, \"kujukuri\": _2, \"kyonan\": _2, \"matsudo\": _2, \"midori\": _2, \"mihama\": _2, \"minamiboso\": _2, \"mobara\": _2, \"mutsuzawa\": _2, \"nagara\": _2, \"nagareyama\": _2, \"narashino\": _2, \"narita\": _2, \"noda\": _2, \"oamishirasato\": _2, \"omigawa\": _2, \"onjuku\": _2, \"otaki\": _2, \"sakae\": _2, \"sakura\": _2, \"shimofusa\": _2, \"shirako\": _2, \"shiroi\": _2, \"shisui\": _2, \"sodegaura\": _2, \"sosa\": _2, \"tako\": _2, \"tateyama\": _2, \"togane\": _2, \"tohnosho\": _2, \"tomisato\": _2, \"urayasu\": _2, \"yachimata\": _2, \"yachiyo\": _2, \"yokaichiba\": _2, \"yokoshibahikari\": _2, \"yotsukaido\": _2 }], \"ehime\": [1, { \"ainan\": _2, \"honai\": _2, \"ikata\": _2, \"imabari\": _2, \"iyo\": _2, \"kamijima\": _2, \"kihoku\": _2, \"kumakogen\": _2, \"masaki\": _2, \"matsuno\": _2, \"matsuyama\": _2, \"namikata\": _2, \"niihama\": _2, \"ozu\": _2, \"saijo\": _2, \"seiyo\": _2, \"shikokuchuo\": _2, \"tobe\": _2, \"toon\": _2, \"uchiko\": _2, \"uwajima\": _2, \"yawatahama\": _2 }], \"fukui\": [1, { \"echizen\": _2, \"eiheiji\": _2, \"fukui\": _2, \"ikeda\": _2, \"katsuyama\": _2, \"mihama\": _2, \"minamiechizen\": _2, \"obama\": _2, \"ohi\": _2, \"ono\": _2, \"sabae\": _2, \"sakai\": _2, \"takahama\": _2, \"tsuruga\": _2, \"wakasa\": _2 }], \"fukuoka\": [1, { \"ashiya\": _2, \"buzen\": _2, \"chikugo\": _2, \"chikuho\": _2, \"chikujo\": _2, \"chikushino\": _2, \"chikuzen\": _2, \"chuo\": _2, \"dazaifu\": _2, \"fukuchi\": _2, \"hakata\": _2, \"higashi\": _2, \"hirokawa\": _2, \"hisayama\": _2, \"iizuka\": _2, \"inatsuki\": _2, \"kaho\": _2, \"kasuga\": _2, \"kasuya\": _2, \"kawara\": _2, \"keisen\": _2, \"koga\": _2, \"kurate\": _2, \"kurogi\": _2, \"kurume\": _2, \"minami\": _2, \"miyako\": _2, \"miyama\": _2, \"miyawaka\": _2, \"mizumaki\": _2, \"munakata\": _2, \"nakagawa\": _2, \"nakama\": _2, \"nishi\": _2, \"nogata\": _2, \"ogori\": _2, \"okagaki\": _2, \"okawa\": _2, \"oki\": _2, \"omuta\": _2, \"onga\": _2, \"onojo\": _2, \"oto\": _2, \"saigawa\": _2, \"sasaguri\": _2, \"shingu\": _2, \"shinyoshitomi\": _2, \"shonai\": _2, \"soeda\": _2, \"sue\": _2, \"tachiarai\": _2, \"tagawa\": _2, \"takata\": _2, \"toho\": _2, \"toyotsu\": _2, \"tsuiki\": _2, \"ukiha\": _2, \"umi\": _2, \"usui\": _2, \"yamada\": _2, \"yame\": _2, \"yanagawa\": _2, \"yukuhashi\": _2 }], \"fukushima\": [1, { \"aizubange\": _2, \"aizumisato\": _2, \"aizuwakamatsu\": _2, \"asakawa\": _2, \"bandai\": _2, \"date\": _2, \"fukushima\": _2, \"furudono\": _2, \"futaba\": _2, \"hanawa\": _2, \"higashi\": _2, \"hirata\": _2, \"hirono\": _2, \"iitate\": _2, \"inawashiro\": _2, \"ishikawa\": _2, \"iwaki\": _2, \"izumizaki\": _2, \"kagamiishi\": _2, \"kaneyama\": _2, \"kawamata\": _2, \"kitakata\": _2, \"kitashiobara\": _2, \"koori\": _2, \"koriyama\": _2, \"kunimi\": _2, \"miharu\": _2, \"mishima\": _2, \"namie\": _2, \"nango\": _2, \"nishiaizu\": _2, \"nishigo\": _2, \"okuma\": _2, \"omotego\": _2, \"ono\": _2, \"otama\": _2, \"samegawa\": _2, \"shimogo\": _2, \"shirakawa\": _2, \"showa\": _2, \"soma\": _2, \"sukagawa\": _2, \"taishin\": _2, \"tamakawa\": _2, \"tanagura\": _2, \"tenei\": _2, \"yabuki\": _2, \"yamato\": _2, \"yamatsuri\": _2, \"yanaizu\": _2, \"yugawa\": _2 }], \"gifu\": [1, { \"anpachi\": _2, \"ena\": _2, \"gifu\": _2, \"ginan\": _2, \"godo\": _2, \"gujo\": _2, \"hashima\": _2, \"hichiso\": _2, \"hida\": _2, \"higashishirakawa\": _2, \"ibigawa\": _2, \"ikeda\": _2, \"kakamigahara\": _2, \"kani\": _2, \"kasahara\": _2, \"kasamatsu\": _2, \"kawaue\": _2, \"kitagata\": _2, \"mino\": _2, \"minokamo\": _2, \"mitake\": _2, \"mizunami\": _2, \"motosu\": _2, \"nakatsugawa\": _2, \"ogaki\": _2, \"sakahogi\": _2, \"seki\": _2, \"sekigahara\": _2, \"shirakawa\": _2, \"tajimi\": _2, \"takayama\": _2, \"tarui\": _2, \"toki\": _2, \"tomika\": _2, \"wanouchi\": _2, \"yamagata\": _2, \"yaotsu\": _2, \"yoro\": _2 }], \"gunma\": [1, { \"annaka\": _2, \"chiyoda\": _2, \"fujioka\": _2, \"higashiagatsuma\": _2, \"isesaki\": _2, \"itakura\": _2, \"kanna\": _2, \"kanra\": _2, \"katashina\": _2, \"kawaba\": _2, \"kiryu\": _2, \"kusatsu\": _2, \"maebashi\": _2, \"meiwa\": _2, \"midori\": _2, \"minakami\": _2, \"naganohara\": _2, \"nakanojo\": _2, \"nanmoku\": _2, \"numata\": _2, \"oizumi\": _2, \"ora\": _2, \"ota\": _2, \"shibukawa\": _2, \"shimonita\": _2, \"shinto\": _2, \"showa\": _2, \"takasaki\": _2, \"takayama\": _2, \"tamamura\": _2, \"tatebayashi\": _2, \"tomioka\": _2, \"tsukiyono\": _2, \"tsumagoi\": _2, \"ueno\": _2, \"yoshioka\": _2 }], \"hiroshima\": [1, { \"asaminami\": _2, \"daiwa\": _2, \"etajima\": _2, \"fuchu\": _2, \"fukuyama\": _2, \"hatsukaichi\": _2, \"higashihiroshima\": _2, \"hongo\": _2, \"jinsekikogen\": _2, \"kaita\": _2, \"kui\": _2, \"kumano\": _2, \"kure\": _2, \"mihara\": _2, \"miyoshi\": _2, \"naka\": _2, \"onomichi\": _2, \"osakikamijima\": _2, \"otake\": _2, \"saka\": _2, \"sera\": _2, \"seranishi\": _2, \"shinichi\": _2, \"shobara\": _2, \"takehara\": _2 }], \"hokkaido\": [1, { \"abashiri\": _2, \"abira\": _2, \"aibetsu\": _2, \"akabira\": _2, \"akkeshi\": _2, \"asahikawa\": _2, \"ashibetsu\": _2, \"ashoro\": _2, \"assabu\": _2, \"atsuma\": _2, \"bibai\": _2, \"biei\": _2, \"bifuka\": _2, \"bihoro\": _2, \"biratori\": _2, \"chippubetsu\": _2, \"chitose\": _2, \"date\": _2, \"ebetsu\": _2, \"embetsu\": _2, \"eniwa\": _2, \"erimo\": _2, \"esan\": _2, \"esashi\": _2, \"fukagawa\": _2, \"fukushima\": _2, \"furano\": _2, \"furubira\": _2, \"haboro\": _2, \"hakodate\": _2, \"hamatonbetsu\": _2, \"hidaka\": _2, \"higashikagura\": _2, \"higashikawa\": _2, \"hiroo\": _2, \"hokuryu\": _2, \"hokuto\": _2, \"honbetsu\": _2, \"horokanai\": _2, \"horonobe\": _2, \"ikeda\": _2, \"imakane\": _2, \"ishikari\": _2, \"iwamizawa\": _2, \"iwanai\": _2, \"kamifurano\": _2, \"kamikawa\": _2, \"kamishihoro\": _2, \"kamisunagawa\": _2, \"kamoenai\": _2, \"kayabe\": _2, \"kembuchi\": _2, \"kikonai\": _2, \"kimobetsu\": _2, \"kitahiroshima\": _2, \"kitami\": _2, \"kiyosato\": _2, \"koshimizu\": _2, \"kunneppu\": _2, \"kuriyama\": _2, \"kuromatsunai\": _2, \"kushiro\": _2, \"kutchan\": _2, \"kyowa\": _2, \"mashike\": _2, \"matsumae\": _2, \"mikasa\": _2, \"minamifurano\": _2, \"mombetsu\": _2, \"moseushi\": _2, \"mukawa\": _2, \"muroran\": _2, \"naie\": _2, \"nakagawa\": _2, \"nakasatsunai\": _2, \"nakatombetsu\": _2, \"nanae\": _2, \"nanporo\": _2, \"nayoro\": _2, \"nemuro\": _2, \"niikappu\": _2, \"niki\": _2, \"nishiokoppe\": _2, \"noboribetsu\": _2, \"numata\": _2, \"obihiro\": _2, \"obira\": _2, \"oketo\": _2, \"okoppe\": _2, \"otaru\": _2, \"otobe\": _2, \"otofuke\": _2, \"otoineppu\": _2, \"oumu\": _2, \"ozora\": _2, \"pippu\": _2, \"rankoshi\": _2, \"rebun\": _2, \"rikubetsu\": _2, \"rishiri\": _2, \"rishirifuji\": _2, \"saroma\": _2, \"sarufutsu\": _2, \"shakotan\": _2, \"shari\": _2, \"shibecha\": _2, \"shibetsu\": _2, \"shikabe\": _2, \"shikaoi\": _2, \"shimamaki\": _2, \"shimizu\": _2, \"shimokawa\": _2, \"shinshinotsu\": _2, \"shintoku\": _2, \"shiranuka\": _2, \"shiraoi\": _2, \"shiriuchi\": _2, \"sobetsu\": _2, \"sunagawa\": _2, \"taiki\": _2, \"takasu\": _2, \"takikawa\": _2, \"takinoue\": _2, \"teshikaga\": _2, \"tobetsu\": _2, \"tohma\": _2, \"tomakomai\": _2, \"tomari\": _2, \"toya\": _2, \"toyako\": _2, \"toyotomi\": _2, \"toyoura\": _2, \"tsubetsu\": _2, \"tsukigata\": _2, \"urakawa\": _2, \"urausu\": _2, \"uryu\": _2, \"utashinai\": _2, \"wakkanai\": _2, \"wassamu\": _2, \"yakumo\": _2, \"yoichi\": _2 }], \"hyogo\": [1, { \"aioi\": _2, \"akashi\": _2, \"ako\": _2, \"amagasaki\": _2, \"aogaki\": _2, \"asago\": _2, \"ashiya\": _2, \"awaji\": _2, \"fukusaki\": _2, \"goshiki\": _2, \"harima\": _2, \"himeji\": _2, \"ichikawa\": _2, \"inagawa\": _2, \"itami\": _2, \"kakogawa\": _2, \"kamigori\": _2, \"kamikawa\": _2, \"kasai\": _2, \"kasuga\": _2, \"kawanishi\": _2, \"miki\": _2, \"minamiawaji\": _2, \"nishinomiya\": _2, \"nishiwaki\": _2, \"ono\": _2, \"sanda\": _2, \"sannan\": _2, \"sasayama\": _2, \"sayo\": _2, \"shingu\": _2, \"shinonsen\": _2, \"shiso\": _2, \"sumoto\": _2, \"taishi\": _2, \"taka\": _2, \"takarazuka\": _2, \"takasago\": _2, \"takino\": _2, \"tamba\": _2, \"tatsuno\": _2, \"toyooka\": _2, \"yabu\": _2, \"yashiro\": _2, \"yoka\": _2, \"yokawa\": _2 }], \"ibaraki\": [1, { \"ami\": _2, \"asahi\": _2, \"bando\": _2, \"chikusei\": _2, \"daigo\": _2, \"fujishiro\": _2, \"hitachi\": _2, \"hitachinaka\": _2, \"hitachiomiya\": _2, \"hitachiota\": _2, \"ibaraki\": _2, \"ina\": _2, \"inashiki\": _2, \"itako\": _2, \"iwama\": _2, \"joso\": _2, \"kamisu\": _2, \"kasama\": _2, \"kashima\": _2, \"kasumigaura\": _2, \"koga\": _2, \"miho\": _2, \"mito\": _2, \"moriya\": _2, \"naka\": _2, \"namegata\": _2, \"oarai\": _2, \"ogawa\": _2, \"omitama\": _2, \"ryugasaki\": _2, \"sakai\": _2, \"sakuragawa\": _2, \"shimodate\": _2, \"shimotsuma\": _2, \"shirosato\": _2, \"sowa\": _2, \"suifu\": _2, \"takahagi\": _2, \"tamatsukuri\": _2, \"tokai\": _2, \"tomobe\": _2, \"tone\": _2, \"toride\": _2, \"tsuchiura\": _2, \"tsukuba\": _2, \"uchihara\": _2, \"ushiku\": _2, \"yachiyo\": _2, \"yamagata\": _2, \"yawara\": _2, \"yuki\": _2 }], \"ishikawa\": [1, { \"anamizu\": _2, \"hakui\": _2, \"hakusan\": _2, \"kaga\": _2, \"kahoku\": _2, \"kanazawa\": _2, \"kawakita\": _2, \"komatsu\": _2, \"nakanoto\": _2, \"nanao\": _2, \"nomi\": _2, \"nonoichi\": _2, \"noto\": _2, \"shika\": _2, \"suzu\": _2, \"tsubata\": _2, \"tsurugi\": _2, \"uchinada\": _2, \"wajima\": _2 }], \"iwate\": [1, { \"fudai\": _2, \"fujisawa\": _2, \"hanamaki\": _2, \"hiraizumi\": _2, \"hirono\": _2, \"ichinohe\": _2, \"ichinoseki\": _2, \"iwaizumi\": _2, \"iwate\": _2, \"joboji\": _2, \"kamaishi\": _2, \"kanegasaki\": _2, \"karumai\": _2, \"kawai\": _2, \"kitakami\": _2, \"kuji\": _2, \"kunohe\": _2, \"kuzumaki\": _2, \"miyako\": _2, \"mizusawa\": _2, \"morioka\": _2, \"ninohe\": _2, \"noda\": _2, \"ofunato\": _2, \"oshu\": _2, \"otsuchi\": _2, \"rikuzentakata\": _2, \"shiwa\": _2, \"shizukuishi\": _2, \"sumita\": _2, \"tanohata\": _2, \"tono\": _2, \"yahaba\": _2, \"yamada\": _2 }], \"kagawa\": [1, { \"ayagawa\": _2, \"higashikagawa\": _2, \"kanonji\": _2, \"kotohira\": _2, \"manno\": _2, \"marugame\": _2, \"mitoyo\": _2, \"naoshima\": _2, \"sanuki\": _2, \"tadotsu\": _2, \"takamatsu\": _2, \"tonosho\": _2, \"uchinomi\": _2, \"utazu\": _2, \"zentsuji\": _2 }], \"kagoshima\": [1, { \"akune\": _2, \"amami\": _2, \"hioki\": _2, \"isa\": _2, \"isen\": _2, \"izumi\": _2, \"kagoshima\": _2, \"kanoya\": _2, \"kawanabe\": _2, \"kinko\": _2, \"kouyama\": _2, \"makurazaki\": _2, \"matsumoto\": _2, \"minamitane\": _2, \"nakatane\": _2, \"nishinoomote\": _2, \"satsumasendai\": _2, \"soo\": _2, \"tarumizu\": _2, \"yusui\": _2 }], \"kanagawa\": [1, { \"aikawa\": _2, \"atsugi\": _2, \"ayase\": _2, \"chigasaki\": _2, \"ebina\": _2, \"fujisawa\": _2, \"hadano\": _2, \"hakone\": _2, \"hiratsuka\": _2, \"isehara\": _2, \"kaisei\": _2, \"kamakura\": _2, \"kiyokawa\": _2, \"matsuda\": _2, \"minamiashigara\": _2, \"miura\": _2, \"nakai\": _2, \"ninomiya\": _2, \"odawara\": _2, \"oi\": _2, \"oiso\": _2, \"sagamihara\": _2, \"samukawa\": _2, \"tsukui\": _2, \"yamakita\": _2, \"yamato\": _2, \"yokosuka\": _2, \"yugawara\": _2, \"zama\": _2, \"zushi\": _2 }], \"kochi\": [1, { \"aki\": _2, \"geisei\": _2, \"hidaka\": _2, \"higashitsuno\": _2, \"ino\": _2, \"kagami\": _2, \"kami\": _2, \"kitagawa\": _2, \"kochi\": _2, \"mihara\": _2, \"motoyama\": _2, \"muroto\": _2, \"nahari\": _2, \"nakamura\": _2, \"nankoku\": _2, \"nishitosa\": _2, \"niyodogawa\": _2, \"ochi\": _2, \"okawa\": _2, \"otoyo\": _2, \"otsuki\": _2, \"sakawa\": _2, \"sukumo\": _2, \"susaki\": _2, \"tosa\": _2, \"tosashimizu\": _2, \"toyo\": _2, \"tsuno\": _2, \"umaji\": _2, \"yasuda\": _2, \"yusuhara\": _2 }], \"kumamoto\": [1, { \"amakusa\": _2, \"arao\": _2, \"aso\": _2, \"choyo\": _2, \"gyokuto\": _2, \"kamiamakusa\": _2, \"kikuchi\": _2, \"kumamoto\": _2, \"mashiki\": _2, \"mifune\": _2, \"minamata\": _2, \"minamioguni\": _2, \"nagasu\": _2, \"nishihara\": _2, \"oguni\": _2, \"ozu\": _2, \"sumoto\": _2, \"takamori\": _2, \"uki\": _2, \"uto\": _2, \"yamaga\": _2, \"yamato\": _2, \"yatsushiro\": _2 }], \"kyoto\": [1, { \"ayabe\": _2, \"fukuchiyama\": _2, \"higashiyama\": _2, \"ide\": _2, \"ine\": _2, \"joyo\": _2, \"kameoka\": _2, \"kamo\": _2, \"kita\": _2, \"kizu\": _2, \"kumiyama\": _2, \"kyotamba\": _2, \"kyotanabe\": _2, \"kyotango\": _2, \"maizuru\": _2, \"minami\": _2, \"minamiyamashiro\": _2, \"miyazu\": _2, \"muko\": _2, \"nagaokakyo\": _2, \"nakagyo\": _2, \"nantan\": _2, \"oyamazaki\": _2, \"sakyo\": _2, \"seika\": _2, \"tanabe\": _2, \"uji\": _2, \"ujitawara\": _2, \"wazuka\": _2, \"yamashina\": _2, \"yawata\": _2 }], \"mie\": [1, { \"asahi\": _2, \"inabe\": _2, \"ise\": _2, \"kameyama\": _2, \"kawagoe\": _2, \"kiho\": _2, \"kisosaki\": _2, \"kiwa\": _2, \"komono\": _2, \"kumano\": _2, \"kuwana\": _2, \"matsusaka\": _2, \"meiwa\": _2, \"mihama\": _2, \"minamiise\": _2, \"misugi\": _2, \"miyama\": _2, \"nabari\": _2, \"shima\": _2, \"suzuka\": _2, \"tado\": _2, \"taiki\": _2, \"taki\": _2, \"tamaki\": _2, \"toba\": _2, \"tsu\": _2, \"udono\": _2, \"ureshino\": _2, \"watarai\": _2, \"yokkaichi\": _2 }], \"miyagi\": [1, { \"furukawa\": _2, \"higashimatsushima\": _2, \"ishinomaki\": _2, \"iwanuma\": _2, \"kakuda\": _2, \"kami\": _2, \"kawasaki\": _2, \"marumori\": _2, \"matsushima\": _2, \"minamisanriku\": _2, \"misato\": _2, \"murata\": _2, \"natori\": _2, \"ogawara\": _2, \"ohira\": _2, \"onagawa\": _2, \"osaki\": _2, \"rifu\": _2, \"semine\": _2, \"shibata\": _2, \"shichikashuku\": _2, \"shikama\": _2, \"shiogama\": _2, \"shiroishi\": _2, \"tagajo\": _2, \"taiwa\": _2, \"tome\": _2, \"tomiya\": _2, \"wakuya\": _2, \"watari\": _2, \"yamamoto\": _2, \"zao\": _2 }], \"miyazaki\": [1, { \"aya\": _2, \"ebino\": _2, \"gokase\": _2, \"hyuga\": _2, \"kadogawa\": _2, \"kawaminami\": _2, \"kijo\": _2, \"kitagawa\": _2, \"kitakata\": _2, \"kitaura\": _2, \"kobayashi\": _2, \"kunitomi\": _2, \"kushima\": _2, \"mimata\": _2, \"miyakonojo\": _2, \"miyazaki\": _2, \"morotsuka\": _2, \"nichinan\": _2, \"nishimera\": _2, \"nobeoka\": _2, \"saito\": _2, \"shiiba\": _2, \"shintomi\": _2, \"takaharu\": _2, \"takanabe\": _2, \"takazaki\": _2, \"tsuno\": _2 }], \"nagano\": [1, { \"achi\": _2, \"agematsu\": _2, \"anan\": _2, \"aoki\": _2, \"asahi\": _2, \"azumino\": _2, \"chikuhoku\": _2, \"chikuma\": _2, \"chino\": _2, \"fujimi\": _2, \"hakuba\": _2, \"hara\": _2, \"hiraya\": _2, \"iida\": _2, \"iijima\": _2, \"iiyama\": _2, \"iizuna\": _2, \"ikeda\": _2, \"ikusaka\": _2, \"ina\": _2, \"karuizawa\": _2, \"kawakami\": _2, \"kiso\": _2, \"kisofukushima\": _2, \"kitaaiki\": _2, \"komagane\": _2, \"komoro\": _2, \"matsukawa\": _2, \"matsumoto\": _2, \"miasa\": _2, \"minamiaiki\": _2, \"minamimaki\": _2, \"minamiminowa\": _2, \"minowa\": _2, \"miyada\": _2, \"miyota\": _2, \"mochizuki\": _2, \"nagano\": _2, \"nagawa\": _2, \"nagiso\": _2, \"nakagawa\": _2, \"nakano\": _2, \"nozawaonsen\": _2, \"obuse\": _2, \"ogawa\": _2, \"okaya\": _2, \"omachi\": _2, \"omi\": _2, \"ookuwa\": _2, \"ooshika\": _2, \"otaki\": _2, \"otari\": _2, \"sakae\": _2, \"sakaki\": _2, \"saku\": _2, \"sakuho\": _2, \"shimosuwa\": _2, \"shinanomachi\": _2, \"shiojiri\": _2, \"suwa\": _2, \"suzaka\": _2, \"takagi\": _2, \"takamori\": _2, \"takayama\": _2, \"tateshina\": _2, \"tatsuno\": _2, \"togakushi\": _2, \"togura\": _2, \"tomi\": _2, \"ueda\": _2, \"wada\": _2, \"yamagata\": _2, \"yamanouchi\": _2, \"yasaka\": _2, \"yasuoka\": _2 }], \"nagasaki\": [1, { \"chijiwa\": _2, \"futsu\": _2, \"goto\": _2, \"hasami\": _2, \"hirado\": _2, \"iki\": _2, \"isahaya\": _2, \"kawatana\": _2, \"kuchinotsu\": _2, \"matsuura\": _2, \"nagasaki\": _2, \"obama\": _2, \"omura\": _2, \"oseto\": _2, \"saikai\": _2, \"sasebo\": _2, \"seihi\": _2, \"shimabara\": _2, \"shinkamigoto\": _2, \"togitsu\": _2, \"tsushima\": _2, \"unzen\": _2 }], \"nara\": [1, { \"ando\": _2, \"gose\": _2, \"heguri\": _2, \"higashiyoshino\": _2, \"ikaruga\": _2, \"ikoma\": _2, \"kamikitayama\": _2, \"kanmaki\": _2, \"kashiba\": _2, \"kashihara\": _2, \"katsuragi\": _2, \"kawai\": _2, \"kawakami\": _2, \"kawanishi\": _2, \"koryo\": _2, \"kurotaki\": _2, \"mitsue\": _2, \"miyake\": _2, \"nara\": _2, \"nosegawa\": _2, \"oji\": _2, \"ouda\": _2, \"oyodo\": _2, \"sakurai\": _2, \"sango\": _2, \"shimoichi\": _2, \"shimokitayama\": _2, \"shinjo\": _2, \"soni\": _2, \"takatori\": _2, \"tawaramoto\": _2, \"tenkawa\": _2, \"tenri\": _2, \"uda\": _2, \"yamatokoriyama\": _2, \"yamatotakada\": _2, \"yamazoe\": _2, \"yoshino\": _2 }], \"niigata\": [1, { \"aga\": _2, \"agano\": _2, \"gosen\": _2, \"itoigawa\": _2, \"izumozaki\": _2, \"joetsu\": _2, \"kamo\": _2, \"kariwa\": _2, \"kashiwazaki\": _2, \"minamiuonuma\": _2, \"mitsuke\": _2, \"muika\": _2, \"murakami\": _2, \"myoko\": _2, \"nagaoka\": _2, \"niigata\": _2, \"ojiya\": _2, \"omi\": _2, \"sado\": _2, \"sanjo\": _2, \"seiro\": _2, \"seirou\": _2, \"sekikawa\": _2, \"shibata\": _2, \"tagami\": _2, \"tainai\": _2, \"tochio\": _2, \"tokamachi\": _2, \"tsubame\": _2, \"tsunan\": _2, \"uonuma\": _2, \"yahiko\": _2, \"yoita\": _2, \"yuzawa\": _2 }], \"oita\": [1, { \"beppu\": _2, \"bungoono\": _2, \"bungotakada\": _2, \"hasama\": _2, \"hiji\": _2, \"himeshima\": _2, \"hita\": _2, \"kamitsue\": _2, \"kokonoe\": _2, \"kuju\": _2, \"kunisaki\": _2, \"kusu\": _2, \"oita\": _2, \"saiki\": _2, \"taketa\": _2, \"tsukumi\": _2, \"usa\": _2, \"usuki\": _2, \"yufu\": _2 }], \"okayama\": [1, { \"akaiwa\": _2, \"asakuchi\": _2, \"bizen\": _2, \"hayashima\": _2, \"ibara\": _2, \"kagamino\": _2, \"kasaoka\": _2, \"kibichuo\": _2, \"kumenan\": _2, \"kurashiki\": _2, \"maniwa\": _2, \"misaki\": _2, \"nagi\": _2, \"niimi\": _2, \"nishiawakura\": _2, \"okayama\": _2, \"satosho\": _2, \"setouchi\": _2, \"shinjo\": _2, \"shoo\": _2, \"soja\": _2, \"takahashi\": _2, \"tamano\": _2, \"tsuyama\": _2, \"wake\": _2, \"yakage\": _2 }], \"okinawa\": [1, { \"aguni\": _2, \"ginowan\": _2, \"ginoza\": _2, \"gushikami\": _2, \"haebaru\": _2, \"higashi\": _2, \"hirara\": _2, \"iheya\": _2, \"ishigaki\": _2, \"ishikawa\": _2, \"itoman\": _2, \"izena\": _2, \"kadena\": _2, \"kin\": _2, \"kitadaito\": _2, \"kitanakagusuku\": _2, \"kumejima\": _2, \"kunigami\": _2, \"minamidaito\": _2, \"motobu\": _2, \"nago\": _2, \"naha\": _2, \"nakagusuku\": _2, \"nakijin\": _2, \"nanjo\": _2, \"nishihara\": _2, \"ogimi\": _2, \"okinawa\": _2, \"onna\": _2, \"shimoji\": _2, \"taketomi\": _2, \"tarama\": _2, \"tokashiki\": _2, \"tomigusuku\": _2, \"tonaki\": _2, \"urasoe\": _2, \"uruma\": _2, \"yaese\": _2, \"yomitan\": _2, \"yonabaru\": _2, \"yonaguni\": _2, \"zamami\": _2 }], \"osaka\": [1, { \"abeno\": _2, \"chihayaakasaka\": _2, \"chuo\": _2, \"daito\": _2, \"fujiidera\": _2, \"habikino\": _2, \"hannan\": _2, \"higashiosaka\": _2, \"higashisumiyoshi\": _2, \"higashiyodogawa\": _2, \"hirakata\": _2, \"ibaraki\": _2, \"ikeda\": _2, \"izumi\": _2, \"izumiotsu\": _2, \"izumisano\": _2, \"kadoma\": _2, \"kaizuka\": _2, \"kanan\": _2, \"kashiwara\": _2, \"katano\": _2, \"kawachinagano\": _2, \"kishiwada\": _2, \"kita\": _2, \"kumatori\": _2, \"matsubara\": _2, \"minato\": _2, \"minoh\": _2, \"misaki\": _2, \"moriguchi\": _2, \"neyagawa\": _2, \"nishi\": _2, \"nose\": _2, \"osakasayama\": _2, \"sakai\": _2, \"sayama\": _2, \"sennan\": _2, \"settsu\": _2, \"shijonawate\": _2, \"shimamoto\": _2, \"suita\": _2, \"tadaoka\": _2, \"taishi\": _2, \"tajiri\": _2, \"takaishi\": _2, \"takatsuki\": _2, \"tondabayashi\": _2, \"toyonaka\": _2, \"toyono\": _2, \"yao\": _2 }], \"saga\": [1, { \"ariake\": _2, \"arita\": _2, \"fukudomi\": _2, \"genkai\": _2, \"hamatama\": _2, \"hizen\": _2, \"imari\": _2, \"kamimine\": _2, \"kanzaki\": _2, \"karatsu\": _2, \"kashima\": _2, \"kitagata\": _2, \"kitahata\": _2, \"kiyama\": _2, \"kouhoku\": _2, \"kyuragi\": _2, \"nishiarita\": _2, \"ogi\": _2, \"omachi\": _2, \"ouchi\": _2, \"saga\": _2, \"shiroishi\": _2, \"taku\": _2, \"tara\": _2, \"tosu\": _2, \"yoshinogari\": _2 }], \"saitama\": [1, { \"arakawa\": _2, \"asaka\": _2, \"chichibu\": _2, \"fujimi\": _2, \"fujimino\": _2, \"fukaya\": _2, \"hanno\": _2, \"hanyu\": _2, \"hasuda\": _2, \"hatogaya\": _2, \"hatoyama\": _2, \"hidaka\": _2, \"higashichichibu\": _2, \"higashimatsuyama\": _2, \"honjo\": _2, \"ina\": _2, \"iruma\": _2, \"iwatsuki\": _2, \"kamiizumi\": _2, \"kamikawa\": _2, \"kamisato\": _2, \"kasukabe\": _2, \"kawagoe\": _2, \"kawaguchi\": _2, \"kawajima\": _2, \"kazo\": _2, \"kitamoto\": _2, \"koshigaya\": _2, \"kounosu\": _2, \"kuki\": _2, \"kumagaya\": _2, \"matsubushi\": _2, \"minano\": _2, \"misato\": _2, \"miyashiro\": _2, \"miyoshi\": _2, \"moroyama\": _2, \"nagatoro\": _2, \"namegawa\": _2, \"niiza\": _2, \"ogano\": _2, \"ogawa\": _2, \"ogose\": _2, \"okegawa\": _2, \"omiya\": _2, \"otaki\": _2, \"ranzan\": _2, \"ryokami\": _2, \"saitama\": _2, \"sakado\": _2, \"satte\": _2, \"sayama\": _2, \"shiki\": _2, \"shiraoka\": _2, \"soka\": _2, \"sugito\": _2, \"toda\": _2, \"tokigawa\": _2, \"tokorozawa\": _2, \"tsurugashima\": _2, \"urawa\": _2, \"warabi\": _2, \"yashio\": _2, \"yokoze\": _2, \"yono\": _2, \"yorii\": _2, \"yoshida\": _2, \"yoshikawa\": _2, \"yoshimi\": _2 }], \"shiga\": [1, { \"aisho\": _2, \"gamo\": _2, \"higashiomi\": _2, \"hikone\": _2, \"koka\": _2, \"konan\": _2, \"kosei\": _2, \"koto\": _2, \"kusatsu\": _2, \"maibara\": _2, \"moriyama\": _2, \"nagahama\": _2, \"nishiazai\": _2, \"notogawa\": _2, \"omihachiman\": _2, \"otsu\": _2, \"ritto\": _2, \"ryuoh\": _2, \"takashima\": _2, \"takatsuki\": _2, \"torahime\": _2, \"toyosato\": _2, \"yasu\": _2 }], \"shimane\": [1, { \"akagi\": _2, \"ama\": _2, \"gotsu\": _2, \"hamada\": _2, \"higashiizumo\": _2, \"hikawa\": _2, \"hikimi\": _2, \"izumo\": _2, \"kakinoki\": _2, \"masuda\": _2, \"matsue\": _2, \"misato\": _2, \"nishinoshima\": _2, \"ohda\": _2, \"okinoshima\": _2, \"okuizumo\": _2, \"shimane\": _2, \"tamayu\": _2, \"tsuwano\": _2, \"unnan\": _2, \"yakumo\": _2, \"yasugi\": _2, \"yatsuka\": _2 }], \"shizuoka\": [1, { \"arai\": _2, \"atami\": _2, \"fuji\": _2, \"fujieda\": _2, \"fujikawa\": _2, \"fujinomiya\": _2, \"fukuroi\": _2, \"gotemba\": _2, \"haibara\": _2, \"hamamatsu\": _2, \"higashiizu\": _2, \"ito\": _2, \"iwata\": _2, \"izu\": _2, \"izunokuni\": _2, \"kakegawa\": _2, \"kannami\": _2, \"kawanehon\": _2, \"kawazu\": _2, \"kikugawa\": _2, \"kosai\": _2, \"makinohara\": _2, \"matsuzaki\": _2, \"minamiizu\": _2, \"mishima\": _2, \"morimachi\": _2, \"nishiizu\": _2, \"numazu\": _2, \"omaezaki\": _2, \"shimada\": _2, \"shimizu\": _2, \"shimoda\": _2, \"shizuoka\": _2, \"susono\": _2, \"yaizu\": _2, \"yoshida\": _2 }], \"tochigi\": [1, { \"ashikaga\": _2, \"bato\": _2, \"haga\": _2, \"ichikai\": _2, \"iwafune\": _2, \"kaminokawa\": _2, \"kanuma\": _2, \"karasuyama\": _2, \"kuroiso\": _2, \"mashiko\": _2, \"mibu\": _2, \"moka\": _2, \"motegi\": _2, \"nasu\": _2, \"nasushiobara\": _2, \"nikko\": _2, \"nishikata\": _2, \"nogi\": _2, \"ohira\": _2, \"ohtawara\": _2, \"oyama\": _2, \"sakura\": _2, \"sano\": _2, \"shimotsuke\": _2, \"shioya\": _2, \"takanezawa\": _2, \"tochigi\": _2, \"tsuga\": _2, \"ujiie\": _2, \"utsunomiya\": _2, \"yaita\": _2 }], \"tokushima\": [1, { \"aizumi\": _2, \"anan\": _2, \"ichiba\": _2, \"itano\": _2, \"kainan\": _2, \"komatsushima\": _2, \"matsushige\": _2, \"mima\": _2, \"minami\": _2, \"miyoshi\": _2, \"mugi\": _2, \"nakagawa\": _2, \"naruto\": _2, \"sanagochi\": _2, \"shishikui\": _2, \"tokushima\": _2, \"wajiki\": _2 }], \"tokyo\": [1, { \"adachi\": _2, \"akiruno\": _2, \"akishima\": _2, \"aogashima\": _2, \"arakawa\": _2, \"bunkyo\": _2, \"chiyoda\": _2, \"chofu\": _2, \"chuo\": _2, \"edogawa\": _2, \"fuchu\": _2, \"fussa\": _2, \"hachijo\": _2, \"hachioji\": _2, \"hamura\": _2, \"higashikurume\": _2, \"higashimurayama\": _2, \"higashiyamato\": _2, \"hino\": _2, \"hinode\": _2, \"hinohara\": _2, \"inagi\": _2, \"itabashi\": _2, \"katsushika\": _2, \"kita\": _2, \"kiyose\": _2, \"kodaira\": _2, \"koganei\": _2, \"kokubunji\": _2, \"komae\": _2, \"koto\": _2, \"kouzushima\": _2, \"kunitachi\": _2, \"machida\": _2, \"meguro\": _2, \"minato\": _2, \"mitaka\": _2, \"mizuho\": _2, \"musashimurayama\": _2, \"musashino\": _2, \"nakano\": _2, \"nerima\": _2, \"ogasawara\": _2, \"okutama\": _2, \"ome\": _2, \"oshima\": _2, \"ota\": _2, \"setagaya\": _2, \"shibuya\": _2, \"shinagawa\": _2, \"shinjuku\": _2, \"suginami\": _2, \"sumida\": _2, \"tachikawa\": _2, \"taito\": _2, \"tama\": _2, \"toshima\": _2 }], \"tottori\": [1, { \"chizu\": _2, \"hino\": _2, \"kawahara\": _2, \"koge\": _2, \"kotoura\": _2, \"misasa\": _2, \"nanbu\": _2, \"nichinan\": _2, \"sakaiminato\": _2, \"tottori\": _2, \"wakasa\": _2, \"yazu\": _2, \"yonago\": _2 }], \"toyama\": [1, { \"asahi\": _2, \"fuchu\": _2, \"fukumitsu\": _2, \"funahashi\": _2, \"himi\": _2, \"imizu\": _2, \"inami\": _2, \"johana\": _2, \"kamiichi\": _2, \"kurobe\": _2, \"nakaniikawa\": _2, \"namerikawa\": _2, \"nanto\": _2, \"nyuzen\": _2, \"oyabe\": _2, \"taira\": _2, \"takaoka\": _2, \"tateyama\": _2, \"toga\": _2, \"tonami\": _2, \"toyama\": _2, \"unazuki\": _2, \"uozu\": _2, \"yamada\": _2 }], \"wakayama\": [1, { \"arida\": _2, \"aridagawa\": _2, \"gobo\": _2, \"hashimoto\": _2, \"hidaka\": _2, \"hirogawa\": _2, \"inami\": _2, \"iwade\": _2, \"kainan\": _2, \"kamitonda\": _2, \"katsuragi\": _2, \"kimino\": _2, \"kinokawa\": _2, \"kitayama\": _2, \"koya\": _2, \"koza\": _2, \"kozagawa\": _2, \"kudoyama\": _2, \"kushimoto\": _2, \"mihama\": _2, \"misato\": _2, \"nachikatsuura\": _2, \"shingu\": _2, \"shirahama\": _2, \"taiji\": _2, \"tanabe\": _2, \"wakayama\": _2, \"yuasa\": _2, \"yura\": _2 }], \"yamagata\": [1, { \"asahi\": _2, \"funagata\": _2, \"higashine\": _2, \"iide\": _2, \"kahoku\": _2, \"kaminoyama\": _2, \"kaneyama\": _2, \"kawanishi\": _2, \"mamurogawa\": _2, \"mikawa\": _2, \"murayama\": _2, \"nagai\": _2, \"nakayama\": _2, \"nanyo\": _2, \"nishikawa\": _2, \"obanazawa\": _2, \"oe\": _2, \"oguni\": _2, \"ohkura\": _2, \"oishida\": _2, \"sagae\": _2, \"sakata\": _2, \"sakegawa\": _2, \"shinjo\": _2, \"shirataka\": _2, \"shonai\": _2, \"takahata\": _2, \"tendo\": _2, \"tozawa\": _2, \"tsuruoka\": _2, \"yamagata\": _2, \"yamanobe\": _2, \"yonezawa\": _2, \"yuza\": _2 }], \"yamaguchi\": [1, { \"abu\": _2, \"hagi\": _2, \"hikari\": _2, \"hofu\": _2, \"iwakuni\": _2, \"kudamatsu\": _2, \"mitou\": _2, \"nagato\": _2, \"oshima\": _2, \"shimonoseki\": _2, \"shunan\": _2, \"tabuse\": _2, \"tokuyama\": _2, \"toyota\": _2, \"ube\": _2, \"yuu\": _2 }], \"yamanashi\": [1, { \"chuo\": _2, \"doshi\": _2, \"fuefuki\": _2, \"fujikawa\": _2, \"fujikawaguchiko\": _2, \"fujiyoshida\": _2, \"hayakawa\": _2, \"hokuto\": _2, \"ichikawamisato\": _2, \"kai\": _2, \"kofu\": _2, \"koshu\": _2, \"kosuge\": _2, \"minami-alps\": _2, \"minobu\": _2, \"nakamichi\": _2, \"nanbu\": _2, \"narusawa\": _2, \"nirasaki\": _2, \"nishikatsura\": _2, \"oshino\": _2, \"otsuki\": _2, \"showa\": _2, \"tabayama\": _2, \"tsuru\": _2, \"uenohara\": _2, \"yamanakako\": _2, \"yamanashi\": _2 }], \"xn--ehqz56n\": _2, \"三重\": _2, \"xn--1lqs03n\": _2, \"京都\": _2, \"xn--qqqt11m\": _2, \"佐賀\": _2, \"xn--f6qx53a\": _2, \"兵庫\": _2, \"xn--djrs72d6uy\": _2, \"北海道\": _2, \"xn--mkru45i\": _2, \"千葉\": _2, \"xn--0trq7p7nn\": _2, \"和歌山\": _2, \"xn--5js045d\": _2, \"埼玉\": _2, \"xn--kbrq7o\": _2, \"大分\": _2, \"xn--pssu33l\": _2, \"大阪\": _2, \"xn--ntsq17g\": _2, \"奈良\": _2, \"xn--uisz3g\": _2, \"宮城\": _2, \"xn--6btw5a\": _2, \"宮崎\": _2, \"xn--1ctwo\": _2, \"富山\": _2, \"xn--6orx2r\": _2, \"山口\": _2, \"xn--rht61e\": _2, \"山形\": _2, \"xn--rht27z\": _2, \"山梨\": _2, \"xn--nit225k\": _2, \"岐阜\": _2, \"xn--rht3d\": _2, \"岡山\": _2, \"xn--djty4k\": _2, \"岩手\": _2, \"xn--klty5x\": _2, \"島根\": _2, \"xn--kltx9a\": _2, \"広島\": _2, \"xn--kltp7d\": _2, \"徳島\": _2, \"xn--c3s14m\": _2, \"愛媛\": _2, \"xn--vgu402c\": _2, \"愛知\": _2, \"xn--efvn9s\": _2, \"新潟\": _2, \"xn--1lqs71d\": _2, \"東京\": _2, \"xn--4pvxs\": _2, \"栃木\": _2, \"xn--uuwu58a\": _2, \"沖縄\": _2, \"xn--zbx025d\": _2, \"滋賀\": _2, \"xn--8pvr4u\": _2, \"熊本\": _2, \"xn--5rtp49c\": _2, \"石川\": _2, \"xn--ntso0iqx3a\": _2, \"神奈川\": _2, \"xn--elqq16h\": _2, \"福井\": _2, \"xn--4it168d\": _2, \"福岡\": _2, \"xn--klt787d\": _2, \"福島\": _2, \"xn--rny31h\": _2, \"秋田\": _2, \"xn--7t0a264c\": _2, \"群馬\": _2, \"xn--uist22h\": _2, \"茨城\": _2, \"xn--8ltr62k\": _2, \"長崎\": _2, \"xn--2m4a15e\": _2, \"長野\": _2, \"xn--32vp30h\": _2, \"青森\": _2, \"xn--4it797k\": _2, \"静岡\": _2, \"xn--5rtq34k\": _2, \"香川\": _2, \"xn--k7yn95e\": _2, \"高知\": _2, \"xn--tor131o\": _2, \"鳥取\": _2, \"xn--d5qv7z876c\": _2, \"鹿児島\": _2, \"kawasaki\": _20, \"kitakyushu\": _20, \"kobe\": _20, \"nagoya\": _20, \"sapporo\": _20, \"sendai\": _20, \"yokohama\": _20, \"buyshop\": _3, \"fashionstore\": _3, \"handcrafted\": _3, \"kawaiishop\": _3, \"supersale\": _3, \"theshop\": _3, \"0am\": _3, \"0g0\": _3, \"0j0\": _3, \"0t0\": _3, \"mydns\": _3, \"pgw\": _3, \"wjg\": _3, \"usercontent\": _3, \"angry\": _3, \"babyblue\": _3, \"babymilk\": _3, \"backdrop\": _3, \"bambina\": _3, \"bitter\": _3, \"blush\": _3, \"boo\": _3, \"boy\": _3, \"boyfriend\": _3, \"but\": _3, \"candypop\": _3, \"capoo\": _3, \"catfood\": _3, \"cheap\": _3, \"chicappa\": _3, \"chillout\": _3, \"chips\": _3, \"chowder\": _3, \"chu\": _3, \"ciao\": _3, \"cocotte\": _3, \"coolblog\": _3, \"cranky\": _3, \"cutegirl\": _3, \"daa\": _3, \"deca\": _3, \"deci\": _3, \"digick\": _3, \"egoism\": _3, \"fakefur\": _3, \"fem\": _3, \"flier\": _3, \"floppy\": _3, \"fool\": _3, \"frenchkiss\": _3, \"girlfriend\": _3, \"girly\": _3, \"gloomy\": _3, \"gonna\": _3, \"greater\": _3, \"hacca\": _3, \"heavy\": _3, \"her\": _3, \"hiho\": _3, \"hippy\": _3, \"holy\": _3, \"hungry\": _3, \"icurus\": _3, \"itigo\": _3, \"jellybean\": _3, \"kikirara\": _3, \"kill\": _3, \"kilo\": _3, \"kuron\": _3, \"littlestar\": _3, \"lolipopmc\": _3, \"lolitapunk\": _3, \"lomo\": _3, \"lovepop\": _3, \"lovesick\": _3, \"main\": _3, \"mods\": _3, \"mond\": _3, \"mongolian\": _3, \"moo\": _3, \"namaste\": _3, \"nikita\": _3, \"nobushi\": _3, \"noor\": _3, \"oops\": _3, \"parallel\": _3, \"parasite\": _3, \"pecori\": _3, \"peewee\": _3, \"penne\": _3, \"pepper\": _3, \"perma\": _3, \"pigboat\": _3, \"pinoko\": _3, \"punyu\": _3, \"pupu\": _3, \"pussycat\": _3, \"pya\": _3, \"raindrop\": _3, \"readymade\": _3, \"sadist\": _3, \"schoolbus\": _3, \"secret\": _3, \"staba\": _3, \"stripper\": _3, \"sub\": _3, \"sunnyday\": _3, \"thick\": _3, \"tonkotsu\": _3, \"under\": _3, \"upper\": _3, \"velvet\": _3, \"verse\": _3, \"versus\": _3, \"vivian\": _3, \"watson\": _3, \"weblike\": _3, \"whitesnow\": _3, \"zombie\": _3, \"hateblo\": _3, \"hatenablog\": _3, \"hatenadiary\": _3, \"2-d\": _3, \"bona\": _3, \"crap\": _3, \"daynight\": _3, \"eek\": _3, \"flop\": _3, \"halfmoon\": _3, \"jeez\": _3, \"matrix\": _3, \"mimoza\": _3, \"netgamers\": _3, \"nyanta\": _3, \"o0o0\": _3, \"rdy\": _3, \"rgr\": _3, \"rulez\": _3, \"sakurastorage\": [0, { \"isk01\": _58, \"isk02\": _58 }], \"saloon\": _3, \"sblo\": _3, \"skr\": _3, \"tank\": _3, \"uh-oh\": _3, \"undo\": _3, \"webaccel\": [0, { \"rs\": _3, \"user\": _3 }], \"websozai\": _3, \"xii\": _3 }], \"ke\": [1, { \"ac\": _2, \"co\": _2, \"go\": _2, \"info\": _2, \"me\": _2, \"mobi\": _2, \"ne\": _2, \"or\": _2, \"sc\": _2 }], \"kg\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"us\": _3, \"xx\": _3 }], \"kh\": _20, \"ki\": _59, \"km\": [1, { \"ass\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"nom\": _2, \"org\": _2, \"prd\": _2, \"tm\": _2, \"asso\": _2, \"coop\": _2, \"gouv\": _2, \"medecin\": _2, \"notaires\": _2, \"pharmaciens\": _2, \"presse\": _2, \"veterinaire\": _2 }], \"kn\": [1, { \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], \"kp\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"org\": _2, \"rep\": _2, \"tra\": _2 }], \"kr\": [1, { \"ac\": _2, \"ai\": _2, \"co\": _2, \"es\": _2, \"go\": _2, \"hs\": _2, \"io\": _2, \"it\": _2, \"kg\": _2, \"me\": _2, \"mil\": _2, \"ms\": _2, \"ne\": _2, \"or\": _2, \"pe\": _2, \"re\": _2, \"sc\": _2, \"busan\": _2, \"chungbuk\": _2, \"chungnam\": _2, \"daegu\": _2, \"daejeon\": _2, \"gangwon\": _2, \"gwangju\": _2, \"gyeongbuk\": _2, \"gyeonggi\": _2, \"gyeongnam\": _2, \"incheon\": _2, \"jeju\": _2, \"jeonbuk\": _2, \"jeonnam\": _2, \"seoul\": _2, \"ulsan\": _2, \"c01\": _3, \"eliv-cdn\": _3, \"eliv-dns\": _3, \"mmv\": _3, \"vki\": _3 }], \"kw\": [1, { \"com\": _2, \"edu\": _2, \"emb\": _2, \"gov\": _2, \"ind\": _2, \"net\": _2, \"org\": _2 }], \"ky\": _47, \"kz\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"jcloud\": _3 }], \"la\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"int\": _2, \"net\": _2, \"org\": _2, \"per\": _2, \"bnr\": _3 }], \"lb\": _4, \"lc\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"oy\": _3 }], \"li\": _2, \"lk\": [1, { \"ac\": _2, \"assn\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"grp\": _2, \"hotel\": _2, \"int\": _2, \"ltd\": _2, \"net\": _2, \"ngo\": _2, \"org\": _2, \"sch\": _2, \"soc\": _2, \"web\": _2 }], \"lr\": _4, \"ls\": [1, { \"ac\": _2, \"biz\": _2, \"co\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"net\": _2, \"org\": _2, \"sc\": _2 }], \"lt\": _10, \"lu\": [1, { \"123website\": _3 }], \"lv\": [1, { \"asn\": _2, \"com\": _2, \"conf\": _2, \"edu\": _2, \"gov\": _2, \"id\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"ly\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"id\": _2, \"med\": _2, \"net\": _2, \"org\": _2, \"plc\": _2, \"sch\": _2 }], \"ma\": [1, { \"ac\": _2, \"co\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"press\": _2 }], \"mc\": [1, { \"asso\": _2, \"tm\": _2 }], \"md\": [1, { \"ir\": _3 }], \"me\": [1, { \"ac\": _2, \"co\": _2, \"edu\": _2, \"gov\": _2, \"its\": _2, \"net\": _2, \"org\": _2, \"priv\": _2, \"c66\": _3, \"craft\": _3, \"edgestack\": _3, \"filegear\": _3, \"filegear-sg\": _3, \"lohmus\": _3, \"barsy\": _3, \"mcdir\": _3, \"brasilia\": _3, \"ddns\": _3, \"dnsfor\": _3, \"hopto\": _3, \"loginto\": _3, \"noip\": _3, \"webhop\": _3, \"soundcast\": _3, \"tcp4\": _3, \"vp4\": _3, \"diskstation\": _3, \"dscloud\": _3, \"i234\": _3, \"myds\": _3, \"synology\": _3, \"transip\": _46, \"nohost\": _3 }], \"mg\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"nom\": _2, \"org\": _2, \"prd\": _2 }], \"mh\": _2, \"mil\": _2, \"mk\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"inf\": _2, \"name\": _2, \"net\": _2, \"org\": _2 }], \"ml\": [1, { \"ac\": _2, \"art\": _2, \"asso\": _2, \"com\": _2, \"edu\": _2, \"gouv\": _2, \"gov\": _2, \"info\": _2, \"inst\": _2, \"net\": _2, \"org\": _2, \"pr\": _2, \"presse\": _2 }], \"mm\": _20, \"mn\": [1, { \"edu\": _2, \"gov\": _2, \"org\": _2, \"nyc\": _3 }], \"mo\": _4, \"mobi\": [1, { \"barsy\": _3, \"dscloud\": _3 }], \"mp\": [1, { \"ju\": _3 }], \"mq\": _2, \"mr\": _10, \"ms\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"minisite\": _3 }], \"mt\": _47, \"mu\": [1, { \"ac\": _2, \"co\": _2, \"com\": _2, \"gov\": _2, \"net\": _2, \"or\": _2, \"org\": _2 }], \"museum\": _2, \"mv\": [1, { \"aero\": _2, \"biz\": _2, \"com\": _2, \"coop\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"int\": _2, \"mil\": _2, \"museum\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pro\": _2 }], \"mw\": [1, { \"ac\": _2, \"biz\": _2, \"co\": _2, \"com\": _2, \"coop\": _2, \"edu\": _2, \"gov\": _2, \"int\": _2, \"net\": _2, \"org\": _2 }], \"mx\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"net\": _2, \"org\": _2 }], \"my\": [1, { \"biz\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2 }], \"mz\": [1, { \"ac\": _2, \"adv\": _2, \"co\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"na\": [1, { \"alt\": _2, \"co\": _2, \"com\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], \"name\": [1, { \"her\": _62, \"his\": _62 }], \"nc\": [1, { \"asso\": _2, \"nom\": _2 }], \"ne\": _2, \"net\": [1, { \"adobeaemcloud\": _3, \"adobeio-static\": _3, \"adobeioruntime\": _3, \"akadns\": _3, \"akamai\": _3, \"akamai-staging\": _3, \"akamaiedge\": _3, \"akamaiedge-staging\": _3, \"akamaihd\": _3, \"akamaihd-staging\": _3, \"akamaiorigin\": _3, \"akamaiorigin-staging\": _3, \"akamaized\": _3, \"akamaized-staging\": _3, \"edgekey\": _3, \"edgekey-staging\": _3, \"edgesuite\": _3, \"edgesuite-staging\": _3, \"alwaysdata\": _3, \"myamaze\": _3, \"cloudfront\": _3, \"appudo\": _3, \"atlassian-dev\": [0, { \"prod\": _54 }], \"myfritz\": _3, \"onavstack\": _3, \"shopselect\": _3, \"blackbaudcdn\": _3, \"boomla\": _3, \"bplaced\": _3, \"square7\": _3, \"cdn77\": [0, { \"r\": _3 }], \"cdn77-ssl\": _3, \"gb\": _3, \"hu\": _3, \"jp\": _3, \"se\": _3, \"uk\": _3, \"clickrising\": _3, \"ddns-ip\": _3, \"dns-cloud\": _3, \"dns-dynamic\": _3, \"cloudaccess\": _3, \"cloudflare\": [2, { \"cdn\": _3 }], \"cloudflareanycast\": _54, \"cloudflarecn\": _54, \"cloudflareglobal\": _54, \"ctfcloud\": _3, \"feste-ip\": _3, \"knx-server\": _3, \"static-access\": _3, \"cryptonomic\": _6, \"dattolocal\": _3, \"mydatto\": _3, \"debian\": _3, \"definima\": _3, \"deno\": _3, \"icp\": _6, \"at-band-camp\": _3, \"blogdns\": _3, \"broke-it\": _3, \"buyshouses\": _3, \"dnsalias\": _3, \"dnsdojo\": _3, \"does-it\": _3, \"dontexist\": _3, \"dynalias\": _3, \"dynathome\": _3, \"endofinternet\": _3, \"from-az\": _3, \"from-co\": _3, \"from-la\": _3, \"from-ny\": _3, \"gets-it\": _3, \"ham-radio-op\": _3, \"homeftp\": _3, \"homeip\": _3, \"homelinux\": _3, \"homeunix\": _3, \"in-the-band\": _3, \"is-a-chef\": _3, \"is-a-geek\": _3, \"isa-geek\": _3, \"kicks-ass\": _3, \"office-on-the\": _3, \"podzone\": _3, \"scrapper-site\": _3, \"selfip\": _3, \"sells-it\": _3, \"servebbs\": _3, \"serveftp\": _3, \"thruhere\": _3, \"webhop\": _3, \"casacam\": _3, \"dynu\": _3, \"dynv6\": _3, \"twmail\": _3, \"ru\": _3, \"channelsdvr\": [2, { \"u\": _3 }], \"fastly\": [0, { \"freetls\": _3, \"map\": _3, \"prod\": [0, { \"a\": _3, \"global\": _3 }], \"ssl\": [0, { \"a\": _3, \"b\": _3, \"global\": _3 }] }], \"fastlylb\": [2, { \"map\": _3 }], \"edgeapp\": _3, \"keyword-on\": _3, \"live-on\": _3, \"server-on\": _3, \"cdn-edges\": _3, \"heteml\": _3, \"cloudfunctions\": _3, \"grafana-dev\": _3, \"iobb\": _3, \"moonscale\": _3, \"in-dsl\": _3, \"in-vpn\": _3, \"oninferno\": _3, \"botdash\": _3, \"apps-1and1\": _3, \"ipifony\": _3, \"cloudjiffy\": [2, { \"fra1-de\": _3, \"west1-us\": _3 }], \"elastx\": [0, { \"jls-sto1\": _3, \"jls-sto2\": _3, \"jls-sto3\": _3 }], \"massivegrid\": [0, { \"paas\": [0, { \"fr-1\": _3, \"lon-1\": _3, \"lon-2\": _3, \"ny-1\": _3, \"ny-2\": _3, \"sg-1\": _3 }] }], \"saveincloud\": [0, { \"jelastic\": _3, \"nordeste-idc\": _3 }], \"scaleforce\": _48, \"kinghost\": _3, \"uni5\": _3, \"krellian\": _3, \"ggff\": _3, \"localcert\": _3, \"localto\": _6, \"barsy\": _3, \"luyani\": _3, \"memset\": _3, \"azure-api\": _3, \"azure-mobile\": _3, \"azureedge\": _3, \"azurefd\": _3, \"azurestaticapps\": [2, { \"1\": _3, \"2\": _3, \"3\": _3, \"4\": _3, \"5\": _3, \"6\": _3, \"7\": _3, \"centralus\": _3, \"eastasia\": _3, \"eastus2\": _3, \"westeurope\": _3, \"westus2\": _3 }], \"azurewebsites\": _3, \"cloudapp\": _3, \"trafficmanager\": _3, \"windows\": [0, { \"core\": [0, { \"blob\": _3 }], \"servicebus\": _3 }], \"mynetname\": [0, { \"sn\": _3 }], \"routingthecloud\": _3, \"bounceme\": _3, \"ddns\": _3, \"eating-organic\": _3, \"mydissent\": _3, \"myeffect\": _3, \"mymediapc\": _3, \"mypsx\": _3, \"mysecuritycamera\": _3, \"nhlfan\": _3, \"no-ip\": _3, \"pgafan\": _3, \"privatizehealthinsurance\": _3, \"redirectme\": _3, \"serveblog\": _3, \"serveminecraft\": _3, \"sytes\": _3, \"dnsup\": _3, \"hicam\": _3, \"now-dns\": _3, \"ownip\": _3, \"vpndns\": _3, \"cloudycluster\": _3, \"ovh\": [0, { \"hosting\": _6, \"webpaas\": _6 }], \"rackmaze\": _3, \"myradweb\": _3, \"in\": _3, \"subsc-pay\": _3, \"squares\": _3, \"schokokeks\": _3, \"firewall-gateway\": _3, \"seidat\": _3, \"senseering\": _3, \"siteleaf\": _3, \"mafelo\": _3, \"myspreadshop\": _3, \"vps-host\": [2, { \"jelastic\": [0, { \"atl\": _3, \"njs\": _3, \"ric\": _3 }] }], \"srcf\": [0, { \"soc\": _3, \"user\": _3 }], \"supabase\": _3, \"dsmynas\": _3, \"familyds\": _3, \"ts\": [2, { \"c\": _6 }], \"torproject\": [2, { \"pages\": _3 }], \"vusercontent\": _3, \"reserve-online\": _3, \"community-pro\": _3, \"meinforum\": _3, \"yandexcloud\": [2, { \"storage\": _3, \"website\": _3 }], \"za\": _3, \"zabc\": _3 }], \"nf\": [1, { \"arts\": _2, \"com\": _2, \"firm\": _2, \"info\": _2, \"net\": _2, \"other\": _2, \"per\": _2, \"rec\": _2, \"store\": _2, \"web\": _2 }], \"ng\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"i\": _2, \"mil\": _2, \"mobi\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"sch\": _2, \"biz\": [2, { \"co\": _3, \"dl\": _3, \"go\": _3, \"lg\": _3, \"on\": _3 }], \"col\": _3, \"firm\": _3, \"gen\": _3, \"ltd\": _3, \"ngo\": _3, \"plc\": _3 }], \"ni\": [1, { \"ac\": _2, \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"gob\": _2, \"in\": _2, \"info\": _2, \"int\": _2, \"mil\": _2, \"net\": _2, \"nom\": _2, \"org\": _2, \"web\": _2 }], \"nl\": [1, { \"co\": _3, \"hosting-cluster\": _3, \"gov\": _3, \"khplay\": _3, \"123website\": _3, \"myspreadshop\": _3, \"transurl\": _6, \"cistron\": _3, \"demon\": _3 }], \"no\": [1, { \"fhs\": _2, \"folkebibl\": _2, \"fylkesbibl\": _2, \"idrett\": _2, \"museum\": _2, \"priv\": _2, \"vgs\": _2, \"dep\": _2, \"herad\": _2, \"kommune\": _2, \"mil\": _2, \"stat\": _2, \"aa\": _63, \"ah\": _63, \"bu\": _63, \"fm\": _63, \"hl\": _63, \"hm\": _63, \"jan-mayen\": _63, \"mr\": _63, \"nl\": _63, \"nt\": _63, \"of\": _63, \"ol\": _63, \"oslo\": _63, \"rl\": _63, \"sf\": _63, \"st\": _63, \"svalbard\": _63, \"tm\": _63, \"tr\": _63, \"va\": _63, \"vf\": _63, \"akrehamn\": _2, \"xn--krehamn-dxa\": _2, \"åkrehamn\": _2, \"algard\": _2, \"xn--lgrd-poac\": _2, \"ålgård\": _2, \"arna\": _2, \"bronnoysund\": _2, \"xn--brnnysund-m8ac\": _2, \"brønnøysund\": _2, \"brumunddal\": _2, \"bryne\": _2, \"drobak\": _2, \"xn--drbak-wua\": _2, \"drøbak\": _2, \"egersund\": _2, \"fetsund\": _2, \"floro\": _2, \"xn--flor-jra\": _2, \"florø\": _2, \"fredrikstad\": _2, \"hokksund\": _2, \"honefoss\": _2, \"xn--hnefoss-q1a\": _2, \"hønefoss\": _2, \"jessheim\": _2, \"jorpeland\": _2, \"xn--jrpeland-54a\": _2, \"jørpeland\": _2, \"kirkenes\": _2, \"kopervik\": _2, \"krokstadelva\": _2, \"langevag\": _2, \"xn--langevg-jxa\": _2, \"langevåg\": _2, \"leirvik\": _2, \"mjondalen\": _2, \"xn--mjndalen-64a\": _2, \"mjøndalen\": _2, \"mo-i-rana\": _2, \"mosjoen\": _2, \"xn--mosjen-eya\": _2, \"mosjøen\": _2, \"nesoddtangen\": _2, \"orkanger\": _2, \"osoyro\": _2, \"xn--osyro-wua\": _2, \"osøyro\": _2, \"raholt\": _2, \"xn--rholt-mra\": _2, \"råholt\": _2, \"sandnessjoen\": _2, \"xn--sandnessjen-ogb\": _2, \"sandnessjøen\": _2, \"skedsmokorset\": _2, \"slattum\": _2, \"spjelkavik\": _2, \"stathelle\": _2, \"stavern\": _2, \"stjordalshalsen\": _2, \"xn--stjrdalshalsen-sqb\": _2, \"stjørdalshalsen\": _2, \"tananger\": _2, \"tranby\": _2, \"vossevangen\": _2, \"aarborte\": _2, \"aejrie\": _2, \"afjord\": _2, \"xn--fjord-lra\": _2, \"åfjord\": _2, \"agdenes\": _2, \"akershus\": _64, \"aknoluokta\": _2, \"xn--koluokta-7ya57h\": _2, \"ákŋoluokta\": _2, \"al\": _2, \"xn--l-1fa\": _2, \"ål\": _2, \"alaheadju\": _2, \"xn--laheadju-7ya\": _2, \"álaheadju\": _2, \"alesund\": _2, \"xn--lesund-hua\": _2, \"ålesund\": _2, \"alstahaug\": _2, \"alta\": _2, \"xn--lt-liac\": _2, \"áltá\": _2, \"alvdal\": _2, \"amli\": _2, \"xn--mli-tla\": _2, \"åmli\": _2, \"amot\": _2, \"xn--mot-tla\": _2, \"åmot\": _2, \"andasuolo\": _2, \"andebu\": _2, \"andoy\": _2, \"xn--andy-ira\": _2, \"andøy\": _2, \"ardal\": _2, \"xn--rdal-poa\": _2, \"årdal\": _2, \"aremark\": _2, \"arendal\": _2, \"xn--s-1fa\": _2, \"ås\": _2, \"aseral\": _2, \"xn--seral-lra\": _2, \"åseral\": _2, \"asker\": _2, \"askim\": _2, \"askoy\": _2, \"xn--asky-ira\": _2, \"askøy\": _2, \"askvoll\": _2, \"asnes\": _2, \"xn--snes-poa\": _2, \"åsnes\": _2, \"audnedaln\": _2, \"aukra\": _2, \"aure\": _2, \"aurland\": _2, \"aurskog-holand\": _2, \"xn--aurskog-hland-jnb\": _2, \"aurskog-høland\": _2, \"austevoll\": _2, \"austrheim\": _2, \"averoy\": _2, \"xn--avery-yua\": _2, \"averøy\": _2, \"badaddja\": _2, \"xn--bdddj-mrabd\": _2, \"bådåddjå\": _2, \"xn--brum-voa\": _2, \"bærum\": _2, \"bahcavuotna\": _2, \"xn--bhcavuotna-s4a\": _2, \"báhcavuotna\": _2, \"bahccavuotna\": _2, \"xn--bhccavuotna-k7a\": _2, \"báhccavuotna\": _2, \"baidar\": _2, \"xn--bidr-5nac\": _2, \"báidár\": _2, \"bajddar\": _2, \"xn--bjddar-pta\": _2, \"bájddar\": _2, \"balat\": _2, \"xn--blt-elab\": _2, \"bálát\": _2, \"balestrand\": _2, \"ballangen\": _2, \"balsfjord\": _2, \"bamble\": _2, \"bardu\": _2, \"barum\": _2, \"batsfjord\": _2, \"xn--btsfjord-9za\": _2, \"båtsfjord\": _2, \"bearalvahki\": _2, \"xn--bearalvhki-y4a\": _2, \"bearalváhki\": _2, \"beardu\": _2, \"beiarn\": _2, \"berg\": _2, \"bergen\": _2, \"berlevag\": _2, \"xn--berlevg-jxa\": _2, \"berlevåg\": _2, \"bievat\": _2, \"xn--bievt-0qa\": _2, \"bievát\": _2, \"bindal\": _2, \"birkenes\": _2, \"bjarkoy\": _2, \"xn--bjarky-fya\": _2, \"bjarkøy\": _2, \"bjerkreim\": _2, \"bjugn\": _2, \"bodo\": _2, \"xn--bod-2na\": _2, \"bodø\": _2, \"bokn\": _2, \"bomlo\": _2, \"xn--bmlo-gra\": _2, \"bømlo\": _2, \"bremanger\": _2, \"bronnoy\": _2, \"xn--brnny-wuac\": _2, \"brønnøy\": _2, \"budejju\": _2, \"buskerud\": _64, \"bygland\": _2, \"bykle\": _2, \"cahcesuolo\": _2, \"xn--hcesuolo-7ya35b\": _2, \"čáhcesuolo\": _2, \"davvenjarga\": _2, \"xn--davvenjrga-y4a\": _2, \"davvenjárga\": _2, \"davvesiida\": _2, \"deatnu\": _2, \"dielddanuorri\": _2, \"divtasvuodna\": _2, \"divttasvuotna\": _2, \"donna\": _2, \"xn--dnna-gra\": _2, \"dønna\": _2, \"dovre\": _2, \"drammen\": _2, \"drangedal\": _2, \"dyroy\": _2, \"xn--dyry-ira\": _2, \"dyrøy\": _2, \"eid\": _2, \"eidfjord\": _2, \"eidsberg\": _2, \"eidskog\": _2, \"eidsvoll\": _2, \"eigersund\": _2, \"elverum\": _2, \"enebakk\": _2, \"engerdal\": _2, \"etne\": _2, \"etnedal\": _2, \"evenassi\": _2, \"xn--eveni-0qa01ga\": _2, \"evenášši\": _2, \"evenes\": _2, \"evje-og-hornnes\": _2, \"farsund\": _2, \"fauske\": _2, \"fedje\": _2, \"fet\": _2, \"finnoy\": _2, \"xn--finny-yua\": _2, \"finnøy\": _2, \"fitjar\": _2, \"fjaler\": _2, \"fjell\": _2, \"fla\": _2, \"xn--fl-zia\": _2, \"flå\": _2, \"flakstad\": _2, \"flatanger\": _2, \"flekkefjord\": _2, \"flesberg\": _2, \"flora\": _2, \"folldal\": _2, \"forde\": _2, \"xn--frde-gra\": _2, \"førde\": _2, \"forsand\": _2, \"fosnes\": _2, \"xn--frna-woa\": _2, \"fræna\": _2, \"frana\": _2, \"frei\": _2, \"frogn\": _2, \"froland\": _2, \"frosta\": _2, \"froya\": _2, \"xn--frya-hra\": _2, \"frøya\": _2, \"fuoisku\": _2, \"fuossko\": _2, \"fusa\": _2, \"fyresdal\": _2, \"gaivuotna\": _2, \"xn--givuotna-8ya\": _2, \"gáivuotna\": _2, \"galsa\": _2, \"xn--gls-elac\": _2, \"gálsá\": _2, \"gamvik\": _2, \"gangaviika\": _2, \"xn--ggaviika-8ya47h\": _2, \"gáŋgaviika\": _2, \"gaular\": _2, \"gausdal\": _2, \"giehtavuoatna\": _2, \"gildeskal\": _2, \"xn--gildeskl-g0a\": _2, \"gildeskål\": _2, \"giske\": _2, \"gjemnes\": _2, \"gjerdrum\": _2, \"gjerstad\": _2, \"gjesdal\": _2, \"gjovik\": _2, \"xn--gjvik-wua\": _2, \"gjøvik\": _2, \"gloppen\": _2, \"gol\": _2, \"gran\": _2, \"grane\": _2, \"granvin\": _2, \"gratangen\": _2, \"grimstad\": _2, \"grong\": _2, \"grue\": _2, \"gulen\": _2, \"guovdageaidnu\": _2, \"ha\": _2, \"xn--h-2fa\": _2, \"hå\": _2, \"habmer\": _2, \"xn--hbmer-xqa\": _2, \"hábmer\": _2, \"hadsel\": _2, \"xn--hgebostad-g3a\": _2, \"hægebostad\": _2, \"hagebostad\": _2, \"halden\": _2, \"halsa\": _2, \"hamar\": _2, \"hamaroy\": _2, \"hammarfeasta\": _2, \"xn--hmmrfeasta-s4ac\": _2, \"hámmárfeasta\": _2, \"hammerfest\": _2, \"hapmir\": _2, \"xn--hpmir-xqa\": _2, \"hápmir\": _2, \"haram\": _2, \"hareid\": _2, \"harstad\": _2, \"hasvik\": _2, \"hattfjelldal\": _2, \"haugesund\": _2, \"hedmark\": [0, { \"os\": _2, \"valer\": _2, \"xn--vler-qoa\": _2, \"våler\": _2 }], \"hemne\": _2, \"hemnes\": _2, \"hemsedal\": _2, \"hitra\": _2, \"hjartdal\": _2, \"hjelmeland\": _2, \"hobol\": _2, \"xn--hobl-ira\": _2, \"hobøl\": _2, \"hof\": _2, \"hol\": _2, \"hole\": _2, \"holmestrand\": _2, \"holtalen\": _2, \"xn--holtlen-hxa\": _2, \"holtålen\": _2, \"hordaland\": [0, { \"os\": _2 }], \"hornindal\": _2, \"horten\": _2, \"hoyanger\": _2, \"xn--hyanger-q1a\": _2, \"høyanger\": _2, \"hoylandet\": _2, \"xn--hylandet-54a\": _2, \"høylandet\": _2, \"hurdal\": _2, \"hurum\": _2, \"hvaler\": _2, \"hyllestad\": _2, \"ibestad\": _2, \"inderoy\": _2, \"xn--indery-fya\": _2, \"inderøy\": _2, \"iveland\": _2, \"ivgu\": _2, \"jevnaker\": _2, \"jolster\": _2, \"xn--jlster-bya\": _2, \"jølster\": _2, \"jondal\": _2, \"kafjord\": _2, \"xn--kfjord-iua\": _2, \"kåfjord\": _2, \"karasjohka\": _2, \"xn--krjohka-hwab49j\": _2, \"kárášjohka\": _2, \"karasjok\": _2, \"karlsoy\": _2, \"karmoy\": _2, \"xn--karmy-yua\": _2, \"karmøy\": _2, \"kautokeino\": _2, \"klabu\": _2, \"xn--klbu-woa\": _2, \"klæbu\": _2, \"klepp\": _2, \"kongsberg\": _2, \"kongsvinger\": _2, \"kraanghke\": _2, \"xn--kranghke-b0a\": _2, \"kråanghke\": _2, \"kragero\": _2, \"xn--krager-gya\": _2, \"kragerø\": _2, \"kristiansand\": _2, \"kristiansund\": _2, \"krodsherad\": _2, \"xn--krdsherad-m8a\": _2, \"krødsherad\": _2, \"xn--kvfjord-nxa\": _2, \"kvæfjord\": _2, \"xn--kvnangen-k0a\": _2, \"kvænangen\": _2, \"kvafjord\": _2, \"kvalsund\": _2, \"kvam\": _2, \"kvanangen\": _2, \"kvinesdal\": _2, \"kvinnherad\": _2, \"kviteseid\": _2, \"kvitsoy\": _2, \"xn--kvitsy-fya\": _2, \"kvitsøy\": _2, \"laakesvuemie\": _2, \"xn--lrdal-sra\": _2, \"lærdal\": _2, \"lahppi\": _2, \"xn--lhppi-xqa\": _2, \"láhppi\": _2, \"lardal\": _2, \"larvik\": _2, \"lavagis\": _2, \"lavangen\": _2, \"leangaviika\": _2, \"xn--leagaviika-52b\": _2, \"leaŋgaviika\": _2, \"lebesby\": _2, \"leikanger\": _2, \"leirfjord\": _2, \"leka\": _2, \"leksvik\": _2, \"lenvik\": _2, \"lerdal\": _2, \"lesja\": _2, \"levanger\": _2, \"lier\": _2, \"lierne\": _2, \"lillehammer\": _2, \"lillesand\": _2, \"lindas\": _2, \"xn--linds-pra\": _2, \"lindås\": _2, \"lindesnes\": _2, \"loabat\": _2, \"xn--loabt-0qa\": _2, \"loabát\": _2, \"lodingen\": _2, \"xn--ldingen-q1a\": _2, \"lødingen\": _2, \"lom\": _2, \"loppa\": _2, \"lorenskog\": _2, \"xn--lrenskog-54a\": _2, \"lørenskog\": _2, \"loten\": _2, \"xn--lten-gra\": _2, \"løten\": _2, \"lund\": _2, \"lunner\": _2, \"luroy\": _2, \"xn--lury-ira\": _2, \"lurøy\": _2, \"luster\": _2, \"lyngdal\": _2, \"lyngen\": _2, \"malatvuopmi\": _2, \"xn--mlatvuopmi-s4a\": _2, \"málatvuopmi\": _2, \"malselv\": _2, \"xn--mlselv-iua\": _2, \"målselv\": _2, \"malvik\": _2, \"mandal\": _2, \"marker\": _2, \"marnardal\": _2, \"masfjorden\": _2, \"masoy\": _2, \"xn--msy-ula0h\": _2, \"måsøy\": _2, \"matta-varjjat\": _2, \"xn--mtta-vrjjat-k7af\": _2, \"mátta-várjjat\": _2, \"meland\": _2, \"meldal\": _2, \"melhus\": _2, \"meloy\": _2, \"xn--mely-ira\": _2, \"meløy\": _2, \"meraker\": _2, \"xn--merker-kua\": _2, \"meråker\": _2, \"midsund\": _2, \"midtre-gauldal\": _2, \"moareke\": _2, \"xn--moreke-jua\": _2, \"moåreke\": _2, \"modalen\": _2, \"modum\": _2, \"molde\": _2, \"more-og-romsdal\": [0, { \"heroy\": _2, \"sande\": _2 }], \"xn--mre-og-romsdal-qqb\": [0, { \"xn--hery-ira\": _2, \"sande\": _2 }], \"møre-og-romsdal\": [0, { \"herøy\": _2, \"sande\": _2 }], \"moskenes\": _2, \"moss\": _2, \"mosvik\": _2, \"muosat\": _2, \"xn--muost-0qa\": _2, \"muosát\": _2, \"naamesjevuemie\": _2, \"xn--nmesjevuemie-tcba\": _2, \"nååmesjevuemie\": _2, \"xn--nry-yla5g\": _2, \"nærøy\": _2, \"namdalseid\": _2, \"namsos\": _2, \"namsskogan\": _2, \"nannestad\": _2, \"naroy\": _2, \"narviika\": _2, \"narvik\": _2, \"naustdal\": _2, \"navuotna\": _2, \"xn--nvuotna-hwa\": _2, \"návuotna\": _2, \"nedre-eiker\": _2, \"nesna\": _2, \"nesodden\": _2, \"nesseby\": _2, \"nesset\": _2, \"nissedal\": _2, \"nittedal\": _2, \"nord-aurdal\": _2, \"nord-fron\": _2, \"nord-odal\": _2, \"norddal\": _2, \"nordkapp\": _2, \"nordland\": [0, { \"bo\": _2, \"xn--b-5ga\": _2, \"bø\": _2, \"heroy\": _2, \"xn--hery-ira\": _2, \"herøy\": _2 }], \"nordre-land\": _2, \"nordreisa\": _2, \"nore-og-uvdal\": _2, \"notodden\": _2, \"notteroy\": _2, \"xn--nttery-byae\": _2, \"nøtterøy\": _2, \"odda\": _2, \"oksnes\": _2, \"xn--ksnes-uua\": _2, \"øksnes\": _2, \"omasvuotna\": _2, \"oppdal\": _2, \"oppegard\": _2, \"xn--oppegrd-ixa\": _2, \"oppegård\": _2, \"orkdal\": _2, \"orland\": _2, \"xn--rland-uua\": _2, \"ørland\": _2, \"orskog\": _2, \"xn--rskog-uua\": _2, \"ørskog\": _2, \"orsta\": _2, \"xn--rsta-fra\": _2, \"ørsta\": _2, \"osen\": _2, \"osteroy\": _2, \"xn--ostery-fya\": _2, \"osterøy\": _2, \"ostfold\": [0, { \"valer\": _2 }], \"xn--stfold-9xa\": [0, { \"xn--vler-qoa\": _2 }], \"østfold\": [0, { \"våler\": _2 }], \"ostre-toten\": _2, \"xn--stre-toten-zcb\": _2, \"østre-toten\": _2, \"overhalla\": _2, \"ovre-eiker\": _2, \"xn--vre-eiker-k8a\": _2, \"øvre-eiker\": _2, \"oyer\": _2, \"xn--yer-zna\": _2, \"øyer\": _2, \"oygarden\": _2, \"xn--ygarden-p1a\": _2, \"øygarden\": _2, \"oystre-slidre\": _2, \"xn--ystre-slidre-ujb\": _2, \"øystre-slidre\": _2, \"porsanger\": _2, \"porsangu\": _2, \"xn--porsgu-sta26f\": _2, \"porsáŋgu\": _2, \"porsgrunn\": _2, \"rade\": _2, \"xn--rde-ula\": _2, \"råde\": _2, \"radoy\": _2, \"xn--rady-ira\": _2, \"radøy\": _2, \"xn--rlingen-mxa\": _2, \"rælingen\": _2, \"rahkkeravju\": _2, \"xn--rhkkervju-01af\": _2, \"ráhkkerávju\": _2, \"raisa\": _2, \"xn--risa-5na\": _2, \"ráisa\": _2, \"rakkestad\": _2, \"ralingen\": _2, \"rana\": _2, \"randaberg\": _2, \"rauma\": _2, \"rendalen\": _2, \"rennebu\": _2, \"rennesoy\": _2, \"xn--rennesy-v1a\": _2, \"rennesøy\": _2, \"rindal\": _2, \"ringebu\": _2, \"ringerike\": _2, \"ringsaker\": _2, \"risor\": _2, \"xn--risr-ira\": _2, \"risør\": _2, \"rissa\": _2, \"roan\": _2, \"rodoy\": _2, \"xn--rdy-0nab\": _2, \"rødøy\": _2, \"rollag\": _2, \"romsa\": _2, \"romskog\": _2, \"xn--rmskog-bya\": _2, \"rømskog\": _2, \"roros\": _2, \"xn--rros-gra\": _2, \"røros\": _2, \"rost\": _2, \"xn--rst-0na\": _2, \"røst\": _2, \"royken\": _2, \"xn--ryken-vua\": _2, \"røyken\": _2, \"royrvik\": _2, \"xn--ryrvik-bya\": _2, \"røyrvik\": _2, \"ruovat\": _2, \"rygge\": _2, \"salangen\": _2, \"salat\": _2, \"xn--slat-5na\": _2, \"sálat\": _2, \"xn--slt-elab\": _2, \"sálát\": _2, \"saltdal\": _2, \"samnanger\": _2, \"sandefjord\": _2, \"sandnes\": _2, \"sandoy\": _2, \"xn--sandy-yua\": _2, \"sandøy\": _2, \"sarpsborg\": _2, \"sauda\": _2, \"sauherad\": _2, \"sel\": _2, \"selbu\": _2, \"selje\": _2, \"seljord\": _2, \"siellak\": _2, \"sigdal\": _2, \"siljan\": _2, \"sirdal\": _2, \"skanit\": _2, \"xn--sknit-yqa\": _2, \"skánit\": _2, \"skanland\": _2, \"xn--sknland-fxa\": _2, \"skånland\": _2, \"skaun\": _2, \"skedsmo\": _2, \"ski\": _2, \"skien\": _2, \"skierva\": _2, \"xn--skierv-uta\": _2, \"skiervá\": _2, \"skiptvet\": _2, \"skjak\": _2, \"xn--skjk-soa\": _2, \"skjåk\": _2, \"skjervoy\": _2, \"xn--skjervy-v1a\": _2, \"skjervøy\": _2, \"skodje\": _2, \"smola\": _2, \"xn--smla-hra\": _2, \"smøla\": _2, \"snaase\": _2, \"xn--snase-nra\": _2, \"snåase\": _2, \"snasa\": _2, \"xn--snsa-roa\": _2, \"snåsa\": _2, \"snillfjord\": _2, \"snoasa\": _2, \"sogndal\": _2, \"sogne\": _2, \"xn--sgne-gra\": _2, \"søgne\": _2, \"sokndal\": _2, \"sola\": _2, \"solund\": _2, \"somna\": _2, \"xn--smna-gra\": _2, \"sømna\": _2, \"sondre-land\": _2, \"xn--sndre-land-0cb\": _2, \"søndre-land\": _2, \"songdalen\": _2, \"sor-aurdal\": _2, \"xn--sr-aurdal-l8a\": _2, \"sør-aurdal\": _2, \"sor-fron\": _2, \"xn--sr-fron-q1a\": _2, \"sør-fron\": _2, \"sor-odal\": _2, \"xn--sr-odal-q1a\": _2, \"sør-odal\": _2, \"sor-varanger\": _2, \"xn--sr-varanger-ggb\": _2, \"sør-varanger\": _2, \"sorfold\": _2, \"xn--srfold-bya\": _2, \"sørfold\": _2, \"sorreisa\": _2, \"xn--srreisa-q1a\": _2, \"sørreisa\": _2, \"sortland\": _2, \"sorum\": _2, \"xn--srum-gra\": _2, \"sørum\": _2, \"spydeberg\": _2, \"stange\": _2, \"stavanger\": _2, \"steigen\": _2, \"steinkjer\": _2, \"stjordal\": _2, \"xn--stjrdal-s1a\": _2, \"stjørdal\": _2, \"stokke\": _2, \"stor-elvdal\": _2, \"stord\": _2, \"stordal\": _2, \"storfjord\": _2, \"strand\": _2, \"stranda\": _2, \"stryn\": _2, \"sula\": _2, \"suldal\": _2, \"sund\": _2, \"sunndal\": _2, \"surnadal\": _2, \"sveio\": _2, \"svelvik\": _2, \"sykkylven\": _2, \"tana\": _2, \"telemark\": [0, { \"bo\": _2, \"xn--b-5ga\": _2, \"bø\": _2 }], \"time\": _2, \"tingvoll\": _2, \"tinn\": _2, \"tjeldsund\": _2, \"tjome\": _2, \"xn--tjme-hra\": _2, \"tjøme\": _2, \"tokke\": _2, \"tolga\": _2, \"tonsberg\": _2, \"xn--tnsberg-q1a\": _2, \"tønsberg\": _2, \"torsken\": _2, \"xn--trna-woa\": _2, \"træna\": _2, \"trana\": _2, \"tranoy\": _2, \"xn--trany-yua\": _2, \"tranøy\": _2, \"troandin\": _2, \"trogstad\": _2, \"xn--trgstad-r1a\": _2, \"trøgstad\": _2, \"tromsa\": _2, \"tromso\": _2, \"xn--troms-zua\": _2, \"tromsø\": _2, \"trondheim\": _2, \"trysil\": _2, \"tvedestrand\": _2, \"tydal\": _2, \"tynset\": _2, \"tysfjord\": _2, \"tysnes\": _2, \"xn--tysvr-vra\": _2, \"tysvær\": _2, \"tysvar\": _2, \"ullensaker\": _2, \"ullensvang\": _2, \"ulvik\": _2, \"unjarga\": _2, \"xn--unjrga-rta\": _2, \"unjárga\": _2, \"utsira\": _2, \"vaapste\": _2, \"vadso\": _2, \"xn--vads-jra\": _2, \"vadsø\": _2, \"xn--vry-yla5g\": _2, \"værøy\": _2, \"vaga\": _2, \"xn--vg-yiab\": _2, \"vågå\": _2, \"vagan\": _2, \"xn--vgan-qoa\": _2, \"vågan\": _2, \"vagsoy\": _2, \"xn--vgsy-qoa0j\": _2, \"vågsøy\": _2, \"vaksdal\": _2, \"valle\": _2, \"vang\": _2, \"vanylven\": _2, \"vardo\": _2, \"xn--vard-jra\": _2, \"vardø\": _2, \"varggat\": _2, \"xn--vrggt-xqad\": _2, \"várggát\": _2, \"varoy\": _2, \"vefsn\": _2, \"vega\": _2, \"vegarshei\": _2, \"xn--vegrshei-c0a\": _2, \"vegårshei\": _2, \"vennesla\": _2, \"verdal\": _2, \"verran\": _2, \"vestby\": _2, \"vestfold\": [0, { \"sande\": _2 }], \"vestnes\": _2, \"vestre-slidre\": _2, \"vestre-toten\": _2, \"vestvagoy\": _2, \"xn--vestvgy-ixa6o\": _2, \"vestvågøy\": _2, \"vevelstad\": _2, \"vik\": _2, \"vikna\": _2, \"vindafjord\": _2, \"voagat\": _2, \"volda\": _2, \"voss\": _2, \"co\": _3, \"123hjemmeside\": _3, \"myspreadshop\": _3 }], \"np\": _20, \"nr\": _59, \"nu\": [1, { \"merseine\": _3, \"mine\": _3, \"shacknet\": _3, \"enterprisecloud\": _3 }], \"nz\": [1, { \"ac\": _2, \"co\": _2, \"cri\": _2, \"geek\": _2, \"gen\": _2, \"govt\": _2, \"health\": _2, \"iwi\": _2, \"kiwi\": _2, \"maori\": _2, \"xn--mori-qsa\": _2, \"māori\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"parliament\": _2, \"school\": _2, \"cloudns\": _3 }], \"om\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"med\": _2, \"museum\": _2, \"net\": _2, \"org\": _2, \"pro\": _2 }], \"onion\": _2, \"org\": [1, { \"altervista\": _3, \"pimienta\": _3, \"poivron\": _3, \"potager\": _3, \"sweetpepper\": _3, \"cdn77\": [0, { \"c\": _3, \"rsc\": _3 }], \"cdn77-secure\": [0, { \"origin\": [0, { \"ssl\": _3 }] }], \"ae\": _3, \"cloudns\": _3, \"ip-dynamic\": _3, \"ddnss\": _3, \"dpdns\": _3, \"duckdns\": _3, \"tunk\": _3, \"blogdns\": _3, \"blogsite\": _3, \"boldlygoingnowhere\": _3, \"dnsalias\": _3, \"dnsdojo\": _3, \"doesntexist\": _3, \"dontexist\": _3, \"doomdns\": _3, \"dvrdns\": _3, \"dynalias\": _3, \"dyndns\": [2, { \"go\": _3, \"home\": _3 }], \"endofinternet\": _3, \"endoftheinternet\": _3, \"from-me\": _3, \"game-host\": _3, \"gotdns\": _3, \"hobby-site\": _3, \"homedns\": _3, \"homeftp\": _3, \"homelinux\": _3, \"homeunix\": _3, \"is-a-bruinsfan\": _3, \"is-a-candidate\": _3, \"is-a-celticsfan\": _3, \"is-a-chef\": _3, \"is-a-geek\": _3, \"is-a-knight\": _3, \"is-a-linux-user\": _3, \"is-a-patsfan\": _3, \"is-a-soxfan\": _3, \"is-found\": _3, \"is-lost\": _3, \"is-saved\": _3, \"is-very-bad\": _3, \"is-very-evil\": _3, \"is-very-good\": _3, \"is-very-nice\": _3, \"is-very-sweet\": _3, \"isa-geek\": _3, \"kicks-ass\": _3, \"misconfused\": _3, \"podzone\": _3, \"readmyblog\": _3, \"selfip\": _3, \"sellsyourhome\": _3, \"servebbs\": _3, \"serveftp\": _3, \"servegame\": _3, \"stuff-4-sale\": _3, \"webhop\": _3, \"accesscam\": _3, \"camdvr\": _3, \"freeddns\": _3, \"mywire\": _3, \"webredirect\": _3, \"twmail\": _3, \"eu\": [2, { \"al\": _3, \"asso\": _3, \"at\": _3, \"au\": _3, \"be\": _3, \"bg\": _3, \"ca\": _3, \"cd\": _3, \"ch\": _3, \"cn\": _3, \"cy\": _3, \"cz\": _3, \"de\": _3, \"dk\": _3, \"edu\": _3, \"ee\": _3, \"es\": _3, \"fi\": _3, \"fr\": _3, \"gr\": _3, \"hr\": _3, \"hu\": _3, \"ie\": _3, \"il\": _3, \"in\": _3, \"int\": _3, \"is\": _3, \"it\": _3, \"jp\": _3, \"kr\": _3, \"lt\": _3, \"lu\": _3, \"lv\": _3, \"me\": _3, \"mk\": _3, \"mt\": _3, \"my\": _3, \"net\": _3, \"ng\": _3, \"nl\": _3, \"no\": _3, \"nz\": _3, \"pl\": _3, \"pt\": _3, \"ro\": _3, \"ru\": _3, \"se\": _3, \"si\": _3, \"sk\": _3, \"tr\": _3, \"uk\": _3, \"us\": _3 }], \"fedorainfracloud\": _3, \"fedorapeople\": _3, \"fedoraproject\": [0, { \"cloud\": _3, \"os\": _45, \"stg\": [0, { \"os\": _45 }] }], \"freedesktop\": _3, \"hatenadiary\": _3, \"hepforge\": _3, \"in-dsl\": _3, \"in-vpn\": _3, \"js\": _3, \"barsy\": _3, \"mayfirst\": _3, \"routingthecloud\": _3, \"bmoattachments\": _3, \"cable-modem\": _3, \"collegefan\": _3, \"couchpotatofries\": _3, \"hopto\": _3, \"mlbfan\": _3, \"myftp\": _3, \"mysecuritycamera\": _3, \"nflfan\": _3, \"no-ip\": _3, \"read-books\": _3, \"ufcfan\": _3, \"zapto\": _3, \"dynserv\": _3, \"now-dns\": _3, \"is-local\": _3, \"httpbin\": _3, \"pubtls\": _3, \"jpn\": _3, \"my-firewall\": _3, \"myfirewall\": _3, \"spdns\": _3, \"small-web\": _3, \"dsmynas\": _3, \"familyds\": _3, \"teckids\": _58, \"tuxfamily\": _3, \"diskstation\": _3, \"hk\": _3, \"us\": _3, \"toolforge\": _3, \"wmcloud\": [2, { \"beta\": _3 }], \"wmflabs\": _3, \"za\": _3 }], \"pa\": [1, { \"abo\": _2, \"ac\": _2, \"com\": _2, \"edu\": _2, \"gob\": _2, \"ing\": _2, \"med\": _2, \"net\": _2, \"nom\": _2, \"org\": _2, \"sld\": _2 }], \"pe\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"mil\": _2, \"net\": _2, \"nom\": _2, \"org\": _2 }], \"pf\": [1, { \"com\": _2, \"edu\": _2, \"org\": _2 }], \"pg\": _20, \"ph\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"i\": _2, \"mil\": _2, \"net\": _2, \"ngo\": _2, \"org\": _2, \"cloudns\": _3 }], \"pk\": [1, { \"ac\": _2, \"biz\": _2, \"com\": _2, \"edu\": _2, \"fam\": _2, \"gkp\": _2, \"gob\": _2, \"gog\": _2, \"gok\": _2, \"gop\": _2, \"gos\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"web\": _2 }], \"pl\": [1, { \"com\": _2, \"net\": _2, \"org\": _2, \"agro\": _2, \"aid\": _2, \"atm\": _2, \"auto\": _2, \"biz\": _2, \"edu\": _2, \"gmina\": _2, \"gsm\": _2, \"info\": _2, \"mail\": _2, \"media\": _2, \"miasta\": _2, \"mil\": _2, \"nieruchomosci\": _2, \"nom\": _2, \"pc\": _2, \"powiat\": _2, \"priv\": _2, \"realestate\": _2, \"rel\": _2, \"sex\": _2, \"shop\": _2, \"sklep\": _2, \"sos\": _2, \"szkola\": _2, \"targi\": _2, \"tm\": _2, \"tourism\": _2, \"travel\": _2, \"turystyka\": _2, \"gov\": [1, { \"ap\": _2, \"griw\": _2, \"ic\": _2, \"is\": _2, \"kmpsp\": _2, \"konsulat\": _2, \"kppsp\": _2, \"kwp\": _2, \"kwpsp\": _2, \"mup\": _2, \"mw\": _2, \"oia\": _2, \"oirm\": _2, \"oke\": _2, \"oow\": _2, \"oschr\": _2, \"oum\": _2, \"pa\": _2, \"pinb\": _2, \"piw\": _2, \"po\": _2, \"pr\": _2, \"psp\": _2, \"psse\": _2, \"pup\": _2, \"rzgw\": _2, \"sa\": _2, \"sdn\": _2, \"sko\": _2, \"so\": _2, \"sr\": _2, \"starostwo\": _2, \"ug\": _2, \"ugim\": _2, \"um\": _2, \"umig\": _2, \"upow\": _2, \"uppo\": _2, \"us\": _2, \"uw\": _2, \"uzs\": _2, \"wif\": _2, \"wiih\": _2, \"winb\": _2, \"wios\": _2, \"witd\": _2, \"wiw\": _2, \"wkz\": _2, \"wsa\": _2, \"wskr\": _2, \"wsse\": _2, \"wuoz\": _2, \"wzmiuw\": _2, \"zp\": _2, \"zpisdn\": _2 }], \"augustow\": _2, \"babia-gora\": _2, \"bedzin\": _2, \"beskidy\": _2, \"bialowieza\": _2, \"bialystok\": _2, \"bielawa\": _2, \"bieszczady\": _2, \"boleslawiec\": _2, \"bydgoszcz\": _2, \"bytom\": _2, \"cieszyn\": _2, \"czeladz\": _2, \"czest\": _2, \"dlugoleka\": _2, \"elblag\": _2, \"elk\": _2, \"glogow\": _2, \"gniezno\": _2, \"gorlice\": _2, \"grajewo\": _2, \"ilawa\": _2, \"jaworzno\": _2, \"jelenia-gora\": _2, \"jgora\": _2, \"kalisz\": _2, \"karpacz\": _2, \"kartuzy\": _2, \"kaszuby\": _2, \"katowice\": _2, \"kazimierz-dolny\": _2, \"kepno\": _2, \"ketrzyn\": _2, \"klodzko\": _2, \"kobierzyce\": _2, \"kolobrzeg\": _2, \"konin\": _2, \"konskowola\": _2, \"kutno\": _2, \"lapy\": _2, \"lebork\": _2, \"legnica\": _2, \"lezajsk\": _2, \"limanowa\": _2, \"lomza\": _2, \"lowicz\": _2, \"lubin\": _2, \"lukow\": _2, \"malbork\": _2, \"malopolska\": _2, \"mazowsze\": _2, \"mazury\": _2, \"mielec\": _2, \"mielno\": _2, \"mragowo\": _2, \"naklo\": _2, \"nowaruda\": _2, \"nysa\": _2, \"olawa\": _2, \"olecko\": _2, \"olkusz\": _2, \"olsztyn\": _2, \"opoczno\": _2, \"opole\": _2, \"ostroda\": _2, \"ostroleka\": _2, \"ostrowiec\": _2, \"ostrowwlkp\": _2, \"pila\": _2, \"pisz\": _2, \"podhale\": _2, \"podlasie\": _2, \"polkowice\": _2, \"pomorskie\": _2, \"pomorze\": _2, \"prochowice\": _2, \"pruszkow\": _2, \"przeworsk\": _2, \"pulawy\": _2, \"radom\": _2, \"rawa-maz\": _2, \"rybnik\": _2, \"rzeszow\": _2, \"sanok\": _2, \"sejny\": _2, \"skoczow\": _2, \"slask\": _2, \"slupsk\": _2, \"sosnowiec\": _2, \"stalowa-wola\": _2, \"starachowice\": _2, \"stargard\": _2, \"suwalki\": _2, \"swidnica\": _2, \"swiebodzin\": _2, \"swinoujscie\": _2, \"szczecin\": _2, \"szczytno\": _2, \"tarnobrzeg\": _2, \"tgory\": _2, \"turek\": _2, \"tychy\": _2, \"ustka\": _2, \"walbrzych\": _2, \"warmia\": _2, \"warszawa\": _2, \"waw\": _2, \"wegrow\": _2, \"wielun\": _2, \"wlocl\": _2, \"wloclawek\": _2, \"wodzislaw\": _2, \"wolomin\": _2, \"wroclaw\": _2, \"zachpomor\": _2, \"zagan\": _2, \"zarow\": _2, \"zgora\": _2, \"zgorzelec\": _2, \"art\": _3, \"gliwice\": _3, \"krakow\": _3, \"poznan\": _3, \"wroc\": _3, \"zakopane\": _3, \"beep\": _3, \"ecommerce-shop\": _3, \"cfolks\": _3, \"dfirma\": _3, \"dkonto\": _3, \"you2\": _3, \"shoparena\": _3, \"homesklep\": _3, \"sdscloud\": _3, \"unicloud\": _3, \"lodz\": _3, \"pabianice\": _3, \"plock\": _3, \"sieradz\": _3, \"skierniewice\": _3, \"zgierz\": _3, \"krasnik\": _3, \"leczna\": _3, \"lubartow\": _3, \"lublin\": _3, \"poniatowa\": _3, \"swidnik\": _3, \"co\": _3, \"torun\": _3, \"simplesite\": _3, \"myspreadshop\": _3, \"gda\": _3, \"gdansk\": _3, \"gdynia\": _3, \"med\": _3, \"sopot\": _3, \"bielsko\": _3 }], \"pm\": [1, { \"own\": _3, \"name\": _3 }], \"pn\": [1, { \"co\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2 }], \"post\": _2, \"pr\": [1, { \"biz\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"isla\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pro\": _2, \"ac\": _2, \"est\": _2, \"prof\": _2 }], \"pro\": [1, { \"aaa\": _2, \"aca\": _2, \"acct\": _2, \"avocat\": _2, \"bar\": _2, \"cpa\": _2, \"eng\": _2, \"jur\": _2, \"law\": _2, \"med\": _2, \"recht\": _2, \"12chars\": _3, \"cloudns\": _3, \"barsy\": _3, \"ngrok\": _3 }], \"ps\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"plo\": _2, \"sec\": _2 }], \"pt\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"int\": _2, \"net\": _2, \"nome\": _2, \"org\": _2, \"publ\": _2, \"123paginaweb\": _3 }], \"pw\": [1, { \"gov\": _2, \"cloudns\": _3, \"x443\": _3 }], \"py\": [1, { \"com\": _2, \"coop\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"qa\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"sch\": _2 }], \"re\": [1, { \"asso\": _2, \"com\": _2, \"netlib\": _3, \"can\": _3 }], \"ro\": [1, { \"arts\": _2, \"com\": _2, \"firm\": _2, \"info\": _2, \"nom\": _2, \"nt\": _2, \"org\": _2, \"rec\": _2, \"store\": _2, \"tm\": _2, \"www\": _2, \"co\": _3, \"shop\": _3, \"barsy\": _3 }], \"rs\": [1, { \"ac\": _2, \"co\": _2, \"edu\": _2, \"gov\": _2, \"in\": _2, \"org\": _2, \"brendly\": _19, \"barsy\": _3, \"ox\": _3 }], \"ru\": [1, { \"ac\": _3, \"edu\": _3, \"gov\": _3, \"int\": _3, \"mil\": _3, \"eurodir\": _3, \"adygeya\": _3, \"bashkiria\": _3, \"bir\": _3, \"cbg\": _3, \"com\": _3, \"dagestan\": _3, \"grozny\": _3, \"kalmykia\": _3, \"kustanai\": _3, \"marine\": _3, \"mordovia\": _3, \"msk\": _3, \"mytis\": _3, \"nalchik\": _3, \"nov\": _3, \"pyatigorsk\": _3, \"spb\": _3, \"vladikavkaz\": _3, \"vladimir\": _3, \"na4u\": _3, \"mircloud\": _3, \"myjino\": [2, { \"hosting\": _6, \"landing\": _6, \"spectrum\": _6, \"vps\": _6 }], \"cldmail\": [0, { \"hb\": _3 }], \"mcdir\": _11, \"mcpre\": _3, \"net\": _3, \"org\": _3, \"pp\": _3, \"lk3\": _3, \"ras\": _3 }], \"rw\": [1, { \"ac\": _2, \"co\": _2, \"coop\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"sa\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"med\": _2, \"net\": _2, \"org\": _2, \"pub\": _2, \"sch\": _2 }], \"sb\": _4, \"sc\": _4, \"sd\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"med\": _2, \"net\": _2, \"org\": _2, \"tv\": _2 }], \"se\": [1, { \"a\": _2, \"ac\": _2, \"b\": _2, \"bd\": _2, \"brand\": _2, \"c\": _2, \"d\": _2, \"e\": _2, \"f\": _2, \"fh\": _2, \"fhsk\": _2, \"fhv\": _2, \"g\": _2, \"h\": _2, \"i\": _2, \"k\": _2, \"komforb\": _2, \"kommunalforbund\": _2, \"komvux\": _2, \"l\": _2, \"lanbib\": _2, \"m\": _2, \"n\": _2, \"naturbruksgymn\": _2, \"o\": _2, \"org\": _2, \"p\": _2, \"parti\": _2, \"pp\": _2, \"press\": _2, \"r\": _2, \"s\": _2, \"t\": _2, \"tm\": _2, \"u\": _2, \"w\": _2, \"x\": _2, \"y\": _2, \"z\": _2, \"com\": _3, \"iopsys\": _3, \"123minsida\": _3, \"itcouldbewor\": _3, \"myspreadshop\": _3 }], \"sg\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"enscaled\": _3 }], \"sh\": [1, { \"com\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"hashbang\": _3, \"botda\": _3, \"lovable\": _3, \"platform\": [0, { \"ent\": _3, \"eu\": _3, \"us\": _3 }], \"now\": _3 }], \"si\": [1, { \"f5\": _3, \"gitapp\": _3, \"gitpage\": _3 }], \"sj\": _2, \"sk\": _2, \"sl\": _4, \"sm\": _2, \"sn\": [1, { \"art\": _2, \"com\": _2, \"edu\": _2, \"gouv\": _2, \"org\": _2, \"perso\": _2, \"univ\": _2 }], \"so\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"me\": _2, \"net\": _2, \"org\": _2, \"surveys\": _3 }], \"sr\": _2, \"ss\": [1, { \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"me\": _2, \"net\": _2, \"org\": _2, \"sch\": _2 }], \"st\": [1, { \"co\": _2, \"com\": _2, \"consulado\": _2, \"edu\": _2, \"embaixada\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"principe\": _2, \"saotome\": _2, \"store\": _2, \"helioho\": _3, \"kirara\": _3, \"noho\": _3 }], \"su\": [1, { \"abkhazia\": _3, \"adygeya\": _3, \"aktyubinsk\": _3, \"arkhangelsk\": _3, \"armenia\": _3, \"ashgabad\": _3, \"azerbaijan\": _3, \"balashov\": _3, \"bashkiria\": _3, \"bryansk\": _3, \"bukhara\": _3, \"chimkent\": _3, \"dagestan\": _3, \"east-kazakhstan\": _3, \"exnet\": _3, \"georgia\": _3, \"grozny\": _3, \"ivanovo\": _3, \"jambyl\": _3, \"kalmykia\": _3, \"kaluga\": _3, \"karacol\": _3, \"karaganda\": _3, \"karelia\": _3, \"khakassia\": _3, \"krasnodar\": _3, \"kurgan\": _3, \"kustanai\": _3, \"lenug\": _3, \"mangyshlak\": _3, \"mordovia\": _3, \"msk\": _3, \"murmansk\": _3, \"nalchik\": _3, \"navoi\": _3, \"north-kazakhstan\": _3, \"nov\": _3, \"obninsk\": _3, \"penza\": _3, \"pokrovsk\": _3, \"sochi\": _3, \"spb\": _3, \"tashkent\": _3, \"termez\": _3, \"togliatti\": _3, \"troitsk\": _3, \"tselinograd\": _3, \"tula\": _3, \"tuva\": _3, \"vladikavkaz\": _3, \"vladimir\": _3, \"vologda\": _3 }], \"sv\": [1, { \"com\": _2, \"edu\": _2, \"gob\": _2, \"org\": _2, \"red\": _2 }], \"sx\": _10, \"sy\": _5, \"sz\": [1, { \"ac\": _2, \"co\": _2, \"org\": _2 }], \"tc\": _2, \"td\": _2, \"tel\": _2, \"tf\": [1, { \"sch\": _3 }], \"tg\": _2, \"th\": [1, { \"ac\": _2, \"co\": _2, \"go\": _2, \"in\": _2, \"mi\": _2, \"net\": _2, \"or\": _2, \"online\": _3, \"shop\": _3 }], \"tj\": [1, { \"ac\": _2, \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"go\": _2, \"gov\": _2, \"int\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"nic\": _2, \"org\": _2, \"test\": _2, \"web\": _2 }], \"tk\": _2, \"tl\": _10, \"tm\": [1, { \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"nom\": _2, \"org\": _2 }], \"tn\": [1, { \"com\": _2, \"ens\": _2, \"fin\": _2, \"gov\": _2, \"ind\": _2, \"info\": _2, \"intl\": _2, \"mincom\": _2, \"nat\": _2, \"net\": _2, \"org\": _2, \"perso\": _2, \"tourism\": _2, \"orangecloud\": _3 }], \"to\": [1, { \"611\": _3, \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"oya\": _3, \"x0\": _3, \"quickconnect\": _27, \"vpnplus\": _3 }], \"tr\": [1, { \"av\": _2, \"bbs\": _2, \"bel\": _2, \"biz\": _2, \"com\": _2, \"dr\": _2, \"edu\": _2, \"gen\": _2, \"gov\": _2, \"info\": _2, \"k12\": _2, \"kep\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pol\": _2, \"tel\": _2, \"tsk\": _2, \"tv\": _2, \"web\": _2, \"nc\": _10 }], \"tt\": [1, { \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"mil\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pro\": _2 }], \"tv\": [1, { \"better-than\": _3, \"dyndns\": _3, \"on-the-web\": _3, \"worse-than\": _3, \"from\": _3, \"sakura\": _3 }], \"tw\": [1, { \"club\": _2, \"com\": [1, { \"mymailer\": _3 }], \"ebiz\": _2, \"edu\": _2, \"game\": _2, \"gov\": _2, \"idv\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"url\": _3, \"mydns\": _3 }], \"tz\": [1, { \"ac\": _2, \"co\": _2, \"go\": _2, \"hotel\": _2, \"info\": _2, \"me\": _2, \"mil\": _2, \"mobi\": _2, \"ne\": _2, \"or\": _2, \"sc\": _2, \"tv\": _2 }], \"ua\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"in\": _2, \"net\": _2, \"org\": _2, \"cherkassy\": _2, \"cherkasy\": _2, \"chernigov\": _2, \"chernihiv\": _2, \"chernivtsi\": _2, \"chernovtsy\": _2, \"ck\": _2, \"cn\": _2, \"cr\": _2, \"crimea\": _2, \"cv\": _2, \"dn\": _2, \"dnepropetrovsk\": _2, \"dnipropetrovsk\": _2, \"donetsk\": _2, \"dp\": _2, \"if\": _2, \"ivano-frankivsk\": _2, \"kh\": _2, \"kharkiv\": _2, \"kharkov\": _2, \"kherson\": _2, \"khmelnitskiy\": _2, \"khmelnytskyi\": _2, \"kiev\": _2, \"kirovograd\": _2, \"km\": _2, \"kr\": _2, \"kropyvnytskyi\": _2, \"krym\": _2, \"ks\": _2, \"kv\": _2, \"kyiv\": _2, \"lg\": _2, \"lt\": _2, \"lugansk\": _2, \"luhansk\": _2, \"lutsk\": _2, \"lv\": _2, \"lviv\": _2, \"mk\": _2, \"mykolaiv\": _2, \"nikolaev\": _2, \"od\": _2, \"odesa\": _2, \"odessa\": _2, \"pl\": _2, \"poltava\": _2, \"rivne\": _2, \"rovno\": _2, \"rv\": _2, \"sb\": _2, \"sebastopol\": _2, \"sevastopol\": _2, \"sm\": _2, \"sumy\": _2, \"te\": _2, \"ternopil\": _2, \"uz\": _2, \"uzhgorod\": _2, \"uzhhorod\": _2, \"vinnica\": _2, \"vinnytsia\": _2, \"vn\": _2, \"volyn\": _2, \"yalta\": _2, \"zakarpattia\": _2, \"zaporizhzhe\": _2, \"zaporizhzhia\": _2, \"zhitomir\": _2, \"zhytomyr\": _2, \"zp\": _2, \"zt\": _2, \"cc\": _3, \"inf\": _3, \"ltd\": _3, \"cx\": _3, \"biz\": _3, \"co\": _3, \"pp\": _3, \"v\": _3 }], \"ug\": [1, { \"ac\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"go\": _2, \"gov\": _2, \"mil\": _2, \"ne\": _2, \"or\": _2, \"org\": _2, \"sc\": _2, \"us\": _2 }], \"uk\": [1, { \"ac\": _2, \"co\": [1, { \"bytemark\": [0, { \"dh\": _3, \"vm\": _3 }], \"layershift\": _48, \"barsy\": _3, \"barsyonline\": _3, \"retrosnub\": _57, \"nh-serv\": _3, \"no-ip\": _3, \"adimo\": _3, \"myspreadshop\": _3 }], \"gov\": [1, { \"api\": _3, \"campaign\": _3, \"service\": _3 }], \"ltd\": _2, \"me\": _2, \"net\": _2, \"nhs\": _2, \"org\": [1, { \"glug\": _3, \"lug\": _3, \"lugs\": _3, \"affinitylottery\": _3, \"raffleentry\": _3, \"weeklylottery\": _3 }], \"plc\": _2, \"police\": _2, \"sch\": _20, \"conn\": _3, \"copro\": _3, \"hosp\": _3, \"independent-commission\": _3, \"independent-inquest\": _3, \"independent-inquiry\": _3, \"independent-panel\": _3, \"independent-review\": _3, \"public-inquiry\": _3, \"royal-commission\": _3, \"pymnt\": _3, \"barsy\": _3, \"nimsite\": _3, \"oraclegovcloudapps\": _6 }], \"us\": [1, { \"dni\": _2, \"isa\": _2, \"nsn\": _2, \"ak\": _65, \"al\": _65, \"ar\": _65, \"as\": _65, \"az\": _65, \"ca\": _65, \"co\": _65, \"ct\": _65, \"dc\": _65, \"de\": _66, \"fl\": _65, \"ga\": _65, \"gu\": _65, \"hi\": _67, \"ia\": _65, \"id\": _65, \"il\": _65, \"in\": _65, \"ks\": _65, \"ky\": _65, \"la\": _65, \"ma\": [1, { \"k12\": [1, { \"chtr\": _2, \"paroch\": _2, \"pvt\": _2 }], \"cc\": _2, \"lib\": _2 }], \"md\": _65, \"me\": _65, \"mi\": [1, { \"k12\": _2, \"cc\": _2, \"lib\": _2, \"ann-arbor\": _2, \"cog\": _2, \"dst\": _2, \"eaton\": _2, \"gen\": _2, \"mus\": _2, \"tec\": _2, \"washtenaw\": _2 }], \"mn\": _65, \"mo\": _65, \"ms\": [1, { \"k12\": _2, \"cc\": _2 }], \"mt\": _65, \"nc\": _65, \"nd\": _67, \"ne\": _65, \"nh\": _65, \"nj\": _65, \"nm\": _65, \"nv\": _65, \"ny\": _65, \"oh\": _65, \"ok\": _65, \"or\": _65, \"pa\": _65, \"pr\": _65, \"ri\": _67, \"sc\": _65, \"sd\": _67, \"tn\": _65, \"tx\": _65, \"ut\": _65, \"va\": _65, \"vi\": _65, \"vt\": _65, \"wa\": _65, \"wi\": _65, \"wv\": _66, \"wy\": _65, \"cloudns\": _3, \"is-by\": _3, \"land-4-sale\": _3, \"stuff-4-sale\": _3, \"heliohost\": _3, \"enscaled\": [0, { \"phx\": _3 }], \"mircloud\": _3, \"ngo\": _3, \"golffan\": _3, \"noip\": _3, \"pointto\": _3, \"freeddns\": _3, \"srv\": [2, { \"gh\": _3, \"gl\": _3 }], \"platterp\": _3, \"servername\": _3 }], \"uy\": [1, { \"com\": _2, \"edu\": _2, \"gub\": _2, \"mil\": _2, \"net\": _2, \"org\": _2 }], \"uz\": [1, { \"co\": _2, \"com\": _2, \"net\": _2, \"org\": _2 }], \"va\": _2, \"vc\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"gv\": [2, { \"d\": _3 }], \"0e\": _6, \"mydns\": _3 }], \"ve\": [1, { \"arts\": _2, \"bib\": _2, \"co\": _2, \"com\": _2, \"e12\": _2, \"edu\": _2, \"emprende\": _2, \"firm\": _2, \"gob\": _2, \"gov\": _2, \"info\": _2, \"int\": _2, \"mil\": _2, \"net\": _2, \"nom\": _2, \"org\": _2, \"rar\": _2, \"rec\": _2, \"store\": _2, \"tec\": _2, \"web\": _2 }], \"vg\": [1, { \"edu\": _2 }], \"vi\": [1, { \"co\": _2, \"com\": _2, \"k12\": _2, \"net\": _2, \"org\": _2 }], \"vn\": [1, { \"ac\": _2, \"ai\": _2, \"biz\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"health\": _2, \"id\": _2, \"info\": _2, \"int\": _2, \"io\": _2, \"name\": _2, \"net\": _2, \"org\": _2, \"pro\": _2, \"angiang\": _2, \"bacgiang\": _2, \"backan\": _2, \"baclieu\": _2, \"bacninh\": _2, \"baria-vungtau\": _2, \"bentre\": _2, \"binhdinh\": _2, \"binhduong\": _2, \"binhphuoc\": _2, \"binhthuan\": _2, \"camau\": _2, \"cantho\": _2, \"caobang\": _2, \"daklak\": _2, \"daknong\": _2, \"danang\": _2, \"dienbien\": _2, \"dongnai\": _2, \"dongthap\": _2, \"gialai\": _2, \"hagiang\": _2, \"haiduong\": _2, \"haiphong\": _2, \"hanam\": _2, \"hanoi\": _2, \"hatinh\": _2, \"haugiang\": _2, \"hoabinh\": _2, \"hungyen\": _2, \"khanhhoa\": _2, \"kiengiang\": _2, \"kontum\": _2, \"laichau\": _2, \"lamdong\": _2, \"langson\": _2, \"laocai\": _2, \"longan\": _2, \"namdinh\": _2, \"nghean\": _2, \"ninhbinh\": _2, \"ninhthuan\": _2, \"phutho\": _2, \"phuyen\": _2, \"quangbinh\": _2, \"quangnam\": _2, \"quangngai\": _2, \"quangninh\": _2, \"quangtri\": _2, \"soctrang\": _2, \"sonla\": _2, \"tayninh\": _2, \"thaibinh\": _2, \"thainguyen\": _2, \"thanhhoa\": _2, \"thanhphohochiminh\": _2, \"thuathienhue\": _2, \"tiengiang\": _2, \"travinh\": _2, \"tuyenquang\": _2, \"vinhlong\": _2, \"vinhphuc\": _2, \"yenbai\": _2 }], \"vu\": _47, \"wf\": [1, { \"biz\": _3, \"sch\": _3 }], \"ws\": [1, { \"com\": _2, \"edu\": _2, \"gov\": _2, \"net\": _2, \"org\": _2, \"advisor\": _6, \"cloud66\": _3, \"dyndns\": _3, \"mypets\": _3 }], \"yt\": [1, { \"org\": _3 }], \"xn--mgbaam7a8h\": _2, \"امارات\": _2, \"xn--y9a3aq\": _2, \"հայ\": _2, \"xn--54b7fta0cc\": _2, \"বাংলা\": _2, \"xn--90ae\": _2, \"бг\": _2, \"xn--mgbcpq6gpa1a\": _2, \"البحرين\": _2, \"xn--90ais\": _2, \"бел\": _2, \"xn--fiqs8s\": _2, \"中国\": _2, \"xn--fiqz9s\": _2, \"中國\": _2, \"xn--lgbbat1ad8j\": _2, \"الجزائر\": _2, \"xn--wgbh1c\": _2, \"مصر\": _2, \"xn--e1a4c\": _2, \"ею\": _2, \"xn--qxa6a\": _2, \"ευ\": _2, \"xn--mgbah1a3hjkrd\": _2, \"موريتانيا\": _2, \"xn--node\": _2, \"გე\": _2, \"xn--qxam\": _2, \"ελ\": _2, \"xn--j6w193g\": [1, { \"xn--gmqw5a\": _2, \"xn--55qx5d\": _2, \"xn--mxtq1m\": _2, \"xn--wcvs22d\": _2, \"xn--uc0atv\": _2, \"xn--od0alg\": _2 }], \"香港\": [1, { \"個人\": _2, \"公司\": _2, \"政府\": _2, \"教育\": _2, \"組織\": _2, \"網絡\": _2 }], \"xn--2scrj9c\": _2, \"ಭಾರತ\": _2, \"xn--3hcrj9c\": _2, \"ଭାରତ\": _2, \"xn--45br5cyl\": _2, \"ভাৰত\": _2, \"xn--h2breg3eve\": _2, \"भारतम्\": _2, \"xn--h2brj9c8c\": _2, \"भारोत\": _2, \"xn--mgbgu82a\": _2, \"ڀارت\": _2, \"xn--rvc1e0am3e\": _2, \"ഭാരതം\": _2, \"xn--h2brj9c\": _2, \"भारत\": _2, \"xn--mgbbh1a\": _2, \"بارت\": _2, \"xn--mgbbh1a71e\": _2, \"بھارت\": _2, \"xn--fpcrj9c3d\": _2, \"భారత్\": _2, \"xn--gecrj9c\": _2, \"ભારત\": _2, \"xn--s9brj9c\": _2, \"ਭਾਰਤ\": _2, \"xn--45brj9c\": _2, \"ভারত\": _2, \"xn--xkc2dl3a5ee0h\": _2, \"இந்தியா\": _2, \"xn--mgba3a4f16a\": _2, \"ایران\": _2, \"xn--mgba3a4fra\": _2, \"ايران\": _2, \"xn--mgbtx2b\": _2, \"عراق\": _2, \"xn--mgbayh7gpa\": _2, \"الاردن\": _2, \"xn--3e0b707e\": _2, \"한국\": _2, \"xn--80ao21a\": _2, \"қаз\": _2, \"xn--q7ce6a\": _2, \"ລາວ\": _2, \"xn--fzc2c9e2c\": _2, \"ලංකා\": _2, \"xn--xkc2al3hye2a\": _2, \"இலங்கை\": _2, \"xn--mgbc0a9azcg\": _2, \"المغرب\": _2, \"xn--d1alf\": _2, \"мкд\": _2, \"xn--l1acc\": _2, \"мон\": _2, \"xn--mix891f\": _2, \"澳門\": _2, \"xn--mix082f\": _2, \"澳门\": _2, \"xn--mgbx4cd0ab\": _2, \"مليسيا\": _2, \"xn--mgb9awbf\": _2, \"عمان\": _2, \"xn--mgbai9azgqp6j\": _2, \"پاکستان\": _2, \"xn--mgbai9a5eva00b\": _2, \"پاكستان\": _2, \"xn--ygbi2ammx\": _2, \"فلسطين\": _2, \"xn--90a3ac\": [1, { \"xn--80au\": _2, \"xn--90azh\": _2, \"xn--d1at\": _2, \"xn--c1avg\": _2, \"xn--o1ac\": _2, \"xn--o1ach\": _2 }], \"срб\": [1, { \"ак\": _2, \"обр\": _2, \"од\": _2, \"орг\": _2, \"пр\": _2, \"упр\": _2 }], \"xn--p1ai\": _2, \"рф\": _2, \"xn--wgbl6a\": _2, \"قطر\": _2, \"xn--mgberp4a5d4ar\": _2, \"السعودية\": _2, \"xn--mgberp4a5d4a87g\": _2, \"السعودیة\": _2, \"xn--mgbqly7c0a67fbc\": _2, \"السعودیۃ\": _2, \"xn--mgbqly7cvafr\": _2, \"السعوديه\": _2, \"xn--mgbpl2fh\": _2, \"سودان\": _2, \"xn--yfro4i67o\": _2, \"新加坡\": _2, \"xn--clchc0ea0b2g2a9gcd\": _2, \"சிங்கப்பூர்\": _2, \"xn--ogbpf8fl\": _2, \"سورية\": _2, \"xn--mgbtf8fl\": _2, \"سوريا\": _2, \"xn--o3cw4h\": [1, { \"xn--o3cyx2a\": _2, \"xn--12co0c3b4eva\": _2, \"xn--m3ch0j3a\": _2, \"xn--h3cuzk1di\": _2, \"xn--12c1fe0br\": _2, \"xn--12cfi8ixb8l\": _2 }], \"ไทย\": [1, { \"ทหาร\": _2, \"ธุรกิจ\": _2, \"เน็ต\": _2, \"รัฐบาล\": _2, \"ศึกษา\": _2, \"องค์กร\": _2 }], \"xn--pgbs0dh\": _2, \"تونس\": _2, \"xn--kpry57d\": _2, \"台灣\": _2, \"xn--kprw13d\": _2, \"台湾\": _2, \"xn--nnx388a\": _2, \"臺灣\": _2, \"xn--j1amh\": _2, \"укр\": _2, \"xn--mgb2ddes\": _2, \"اليمن\": _2, \"xxx\": _2, \"ye\": _5, \"za\": [0, { \"ac\": _2, \"agric\": _2, \"alt\": _2, \"co\": _2, \"edu\": _2, \"gov\": _2, \"grondar\": _2, \"law\": _2, \"mil\": _2, \"net\": _2, \"ngo\": _2, \"nic\": _2, \"nis\": _2, \"nom\": _2, \"org\": _2, \"school\": _2, \"tm\": _2, \"web\": _2 }], \"zm\": [1, { \"ac\": _2, \"biz\": _2, \"co\": _2, \"com\": _2, \"edu\": _2, \"gov\": _2, \"info\": _2, \"mil\": _2, \"net\": _2, \"org\": _2, \"sch\": _2 }], \"zw\": [1, { \"ac\": _2, \"co\": _2, \"gov\": _2, \"mil\": _2, \"org\": _2 }], \"aaa\": _2, \"aarp\": _2, \"abb\": _2, \"abbott\": _2, \"abbvie\": _2, \"abc\": _2, \"able\": _2, \"abogado\": _2, \"abudhabi\": _2, \"academy\": [1, { \"official\": _3 }], \"accenture\": _2, \"accountant\": _2, \"accountants\": _2, \"aco\": _2, \"actor\": _2, \"ads\": _2, \"adult\": _2, \"aeg\": _2, \"aetna\": _2, \"afl\": _2, \"africa\": _2, \"agakhan\": _2, \"agency\": _2, \"aig\": _2, \"airbus\": _2, \"airforce\": _2, \"airtel\": _2, \"akdn\": _2, \"alibaba\": _2, \"alipay\": _2, \"allfinanz\": _2, \"allstate\": _2, \"ally\": _2, \"alsace\": _2, \"alstom\": _2, \"amazon\": _2, \"americanexpress\": _2, \"americanfamily\": _2, \"amex\": _2, \"amfam\": _2, \"amica\": _2, \"amsterdam\": _2, \"analytics\": _2, \"android\": _2, \"anquan\": _2, \"anz\": _2, \"aol\": _2, \"apartments\": _2, \"app\": [1, { \"adaptable\": _3, \"aiven\": _3, \"beget\": _6, \"brave\": _7, \"clerk\": _3, \"clerkstage\": _3, \"wnext\": _3, \"csb\": [2, { \"preview\": _3 }], \"convex\": _3, \"deta\": _3, \"ondigitalocean\": _3, \"easypanel\": _3, \"encr\": [2, { \"frontend\": _3 }], \"evervault\": _8, \"expo\": [2, { \"staging\": _3 }], \"edgecompute\": _3, \"on-fleek\": _3, \"flutterflow\": _3, \"e2b\": _3, \"framer\": _3, \"github\": _3, \"hosted\": _6, \"run\": [0, { \"*\": _3, \"mtls\": _6 }], \"web\": _3, \"hackclub\": _3, \"hasura\": _3, \"botdash\": _3, \"loginline\": _3, \"lovable\": _3, \"luyani\": _3, \"medusajs\": _3, \"messerli\": _3, \"netfy\": _3, \"netlify\": _3, \"ngrok\": _3, \"ngrok-free\": _3, \"developer\": _6, \"noop\": _3, \"northflank\": _6, \"upsun\": _6, \"railway\": [0, { \"up\": _3 }], \"replit\": _9, \"nyat\": _3, \"snowflake\": [0, { \"*\": _3, \"privatelink\": _6 }], \"streamlit\": _3, \"storipress\": _3, \"telebit\": _3, \"typedream\": _3, \"vercel\": _3, \"wal\": _3, \"bookonline\": _3, \"wdh\": _3, \"windsurf\": _3, \"zeabur\": _3, \"zerops\": _6 }], \"apple\": _2, \"aquarelle\": _2, \"arab\": _2, \"aramco\": _2, \"archi\": _2, \"army\": _2, \"art\": _2, \"arte\": _2, \"asda\": _2, \"associates\": _2, \"athleta\": _2, \"attorney\": _2, \"auction\": _2, \"audi\": _2, \"audible\": _2, \"audio\": _2, \"auspost\": _2, \"author\": _2, \"auto\": _2, \"autos\": _2, \"aws\": [1, { \"on\": [0, { \"af-south-1\": _12, \"ap-east-1\": _12, \"ap-northeast-1\": _12, \"ap-northeast-2\": _12, \"ap-northeast-3\": _12, \"ap-south-1\": _12, \"ap-south-2\": _12, \"ap-southeast-1\": _12, \"ap-southeast-2\": _12, \"ap-southeast-3\": _12, \"ap-southeast-4\": _12, \"ap-southeast-5\": _12, \"ca-central-1\": _12, \"ca-west-1\": _12, \"eu-central-1\": _12, \"eu-central-2\": _12, \"eu-north-1\": _12, \"eu-south-1\": _12, \"eu-south-2\": _12, \"eu-west-1\": _12, \"eu-west-2\": _12, \"eu-west-3\": _12, \"il-central-1\": _12, \"me-central-1\": _12, \"me-south-1\": _12, \"sa-east-1\": _12, \"us-east-1\": _12, \"us-east-2\": _12, \"us-west-1\": _12, \"us-west-2\": _12, \"us-gov-east-1\": _13, \"us-gov-west-1\": _13 }], \"sagemaker\": [0, { \"ap-northeast-1\": _15, \"ap-northeast-2\": _15, \"ap-south-1\": _15, \"ap-southeast-1\": _15, \"ap-southeast-2\": _15, \"ca-central-1\": _17, \"eu-central-1\": _15, \"eu-west-1\": _15, \"eu-west-2\": _15, \"us-east-1\": _17, \"us-east-2\": _17, \"us-west-2\": _17, \"af-south-1\": _14, \"ap-east-1\": _14, \"ap-northeast-3\": _14, \"ap-south-2\": _16, \"ap-southeast-3\": _14, \"ap-southeast-4\": _16, \"ca-west-1\": [0, { \"notebook\": _3, \"notebook-fips\": _3 }], \"eu-central-2\": _14, \"eu-north-1\": _14, \"eu-south-1\": _14, \"eu-south-2\": _14, \"eu-west-3\": _14, \"il-central-1\": _14, \"me-central-1\": _14, \"me-south-1\": _14, \"sa-east-1\": _14, \"us-gov-east-1\": _18, \"us-gov-west-1\": _18, \"us-west-1\": [0, { \"notebook\": _3, \"notebook-fips\": _3, \"studio\": _3 }], \"experiments\": _6 }], \"repost\": [0, { \"private\": _6 }] }], \"axa\": _2, \"azure\": _2, \"baby\": _2, \"baidu\": _2, \"banamex\": _2, \"band\": _2, \"bank\": _2, \"bar\": _2, \"barcelona\": _2, \"barclaycard\": _2, \"barclays\": _2, \"barefoot\": _2, \"bargains\": _2, \"baseball\": _2, \"basketball\": [1, { \"aus\": _3, \"nz\": _3 }], \"bauhaus\": _2, \"bayern\": _2, \"bbc\": _2, \"bbt\": _2, \"bbva\": _2, \"bcg\": _2, \"bcn\": _2, \"beats\": _2, \"beauty\": _2, \"beer\": _2, \"berlin\": _2, \"best\": _2, \"bestbuy\": _2, \"bet\": _2, \"bharti\": _2, \"bible\": _2, \"bid\": _2, \"bike\": _2, \"bing\": _2, \"bingo\": _2, \"bio\": _2, \"black\": _2, \"blackfriday\": _2, \"blockbuster\": _2, \"blog\": _2, \"bloomberg\": _2, \"blue\": _2, \"bms\": _2, \"bmw\": _2, \"bnpparibas\": _2, \"boats\": _2, \"boehringer\": _2, \"bofa\": _2, \"bom\": _2, \"bond\": _2, \"boo\": _2, \"book\": _2, \"booking\": _2, \"bosch\": _2, \"bostik\": _2, \"boston\": _2, \"bot\": _2, \"boutique\": _2, \"box\": _2, \"bradesco\": _2, \"bridgestone\": _2, \"broadway\": _2, \"broker\": _2, \"brother\": _2, \"brussels\": _2, \"build\": [1, { \"v0\": _3, \"windsurf\": _3 }], \"builders\": [1, { \"cloudsite\": _3 }], \"business\": _21, \"buy\": _2, \"buzz\": _2, \"bzh\": _2, \"cab\": _2, \"cafe\": _2, \"cal\": _2, \"call\": _2, \"calvinklein\": _2, \"cam\": _2, \"camera\": _2, \"camp\": [1, { \"emf\": [0, { \"at\": _3 }] }], \"canon\": _2, \"capetown\": _2, \"capital\": _2, \"capitalone\": _2, \"car\": _2, \"caravan\": _2, \"cards\": _2, \"care\": _2, \"career\": _2, \"careers\": _2, \"cars\": _2, \"casa\": [1, { \"nabu\": [0, { \"ui\": _3 }] }], \"case\": _2, \"cash\": _2, \"casino\": _2, \"catering\": _2, \"catholic\": _2, \"cba\": _2, \"cbn\": _2, \"cbre\": _2, \"center\": _2, \"ceo\": _2, \"cern\": _2, \"cfa\": _2, \"cfd\": _2, \"chanel\": _2, \"channel\": _2, \"charity\": _2, \"chase\": _2, \"chat\": _2, \"cheap\": _2, \"chintai\": _2, \"christmas\": _2, \"chrome\": _2, \"church\": _2, \"cipriani\": _2, \"circle\": _2, \"cisco\": _2, \"citadel\": _2, \"citi\": _2, \"citic\": _2, \"city\": _2, \"claims\": _2, \"cleaning\": _2, \"click\": _2, \"clinic\": _2, \"clinique\": _2, \"clothing\": _2, \"cloud\": [1, { \"convex\": _3, \"elementor\": _3, \"encoway\": [0, { \"eu\": _3 }], \"statics\": _6, \"ravendb\": _3, \"axarnet\": [0, { \"es-1\": _3 }], \"diadem\": _3, \"jelastic\": [0, { \"vip\": _3 }], \"jele\": _3, \"jenv-aruba\": [0, { \"aruba\": [0, { \"eur\": [0, { \"it1\": _3 }] }], \"it1\": _3 }], \"keliweb\": [2, { \"cs\": _3 }], \"oxa\": [2, { \"tn\": _3, \"uk\": _3 }], \"primetel\": [2, { \"uk\": _3 }], \"reclaim\": [0, { \"ca\": _3, \"uk\": _3, \"us\": _3 }], \"trendhosting\": [0, { \"ch\": _3, \"de\": _3 }], \"jote\": _3, \"jotelulu\": _3, \"kuleuven\": _3, \"laravel\": _3, \"linkyard\": _3, \"magentosite\": _6, \"matlab\": _3, \"observablehq\": _3, \"perspecta\": _3, \"vapor\": _3, \"on-rancher\": _6, \"scw\": [0, { \"baremetal\": [0, { \"fr-par-1\": _3, \"fr-par-2\": _3, \"nl-ams-1\": _3 }], \"fr-par\": [0, { \"cockpit\": _3, \"ddl\": _3, \"dtwh\": _3, \"fnc\": [2, { \"functions\": _3 }], \"ifr\": _3, \"k8s\": _23, \"kafk\": _3, \"mgdb\": _3, \"rdb\": _3, \"s3\": _3, \"s3-website\": _3, \"scbl\": _3, \"whm\": _3 }], \"instances\": [0, { \"priv\": _3, \"pub\": _3 }], \"k8s\": _3, \"nl-ams\": [0, { \"cockpit\": _3, \"ddl\": _3, \"dtwh\": _3, \"ifr\": _3, \"k8s\": _23, \"kafk\": _3, \"mgdb\": _3, \"rdb\": _3, \"s3\": _3, \"s3-website\": _3, \"scbl\": _3, \"whm\": _3 }], \"pl-waw\": [0, { \"cockpit\": _3, \"ddl\": _3, \"dtwh\": _3, \"ifr\": _3, \"k8s\": _23, \"kafk\": _3, \"mgdb\": _3, \"rdb\": _3, \"s3\": _3, \"s3-website\": _3, \"scbl\": _3 }], \"scalebook\": _3, \"smartlabeling\": _3 }], \"servebolt\": _3, \"onstackit\": [0, { \"runs\": _3 }], \"trafficplex\": _3, \"unison-services\": _3, \"urown\": _3, \"voorloper\": _3, \"zap\": _3 }], \"club\": [1, { \"cloudns\": _3, \"jele\": _3, \"barsy\": _3 }], \"clubmed\": _2, \"coach\": _2, \"codes\": [1, { \"owo\": _6 }], \"coffee\": _2, \"college\": _2, \"cologne\": _2, \"commbank\": _2, \"community\": [1, { \"nog\": _3, \"ravendb\": _3, \"myforum\": _3 }], \"company\": _2, \"compare\": _2, \"computer\": _2, \"comsec\": _2, \"condos\": _2, \"construction\": _2, \"consulting\": _2, \"contact\": _2, \"contractors\": _2, \"cooking\": _2, \"cool\": [1, { \"elementor\": _3, \"de\": _3 }], \"corsica\": _2, \"country\": _2, \"coupon\": _2, \"coupons\": _2, \"courses\": _2, \"cpa\": _2, \"credit\": _2, \"creditcard\": _2, \"creditunion\": _2, \"cricket\": _2, \"crown\": _2, \"crs\": _2, \"cruise\": _2, \"cruises\": _2, \"cuisinella\": _2, \"cymru\": _2, \"cyou\": _2, \"dad\": _2, \"dance\": _2, \"data\": _2, \"date\": _2, \"dating\": _2, \"datsun\": _2, \"day\": _2, \"dclk\": _2, \"dds\": _2, \"deal\": _2, \"dealer\": _2, \"deals\": _2, \"degree\": _2, \"delivery\": _2, \"dell\": _2, \"deloitte\": _2, \"delta\": _2, \"democrat\": _2, \"dental\": _2, \"dentist\": _2, \"desi\": _2, \"design\": [1, { \"graphic\": _3, \"bss\": _3 }], \"dev\": [1, { \"12chars\": _3, \"myaddr\": _3, \"panel\": _3, \"lcl\": _6, \"lclstage\": _6, \"stg\": _6, \"stgstage\": _6, \"pages\": _3, \"r2\": _3, \"workers\": _3, \"deno\": _3, \"deno-staging\": _3, \"deta\": _3, \"lp\": [2, { \"api\": _3, \"objects\": _3 }], \"evervault\": _8, \"fly\": _3, \"githubpreview\": _3, \"gateway\": _6, \"botdash\": _3, \"inbrowser\": _6, \"is-a-good\": _3, \"is-a\": _3, \"iserv\": _3, \"runcontainers\": _3, \"localcert\": [0, { \"user\": _6 }], \"loginline\": _3, \"barsy\": _3, \"mediatech\": _3, \"modx\": _3, \"ngrok\": _3, \"ngrok-free\": _3, \"is-a-fullstack\": _3, \"is-cool\": _3, \"is-not-a\": _3, \"localplayer\": _3, \"xmit\": _3, \"platter-app\": _3, \"replit\": [2, { \"archer\": _3, \"bones\": _3, \"canary\": _3, \"global\": _3, \"hacker\": _3, \"id\": _3, \"janeway\": _3, \"kim\": _3, \"kira\": _3, \"kirk\": _3, \"odo\": _3, \"paris\": _3, \"picard\": _3, \"pike\": _3, \"prerelease\": _3, \"reed\": _3, \"riker\": _3, \"sisko\": _3, \"spock\": _3, \"staging\": _3, \"sulu\": _3, \"tarpit\": _3, \"teams\": _3, \"tucker\": _3, \"wesley\": _3, \"worf\": _3 }], \"crm\": [0, { \"d\": _6, \"w\": _6, \"wa\": _6, \"wb\": _6, \"wc\": _6, \"wd\": _6, \"we\": _6, \"wf\": _6 }], \"erp\": _50, \"vercel\": _3, \"webhare\": _6, \"hrsn\": _3 }], \"dhl\": _2, \"diamonds\": _2, \"diet\": _2, \"digital\": [1, { \"cloudapps\": [2, { \"london\": _3 }] }], \"direct\": [1, { \"libp2p\": _3 }], \"directory\": _2, \"discount\": _2, \"discover\": _2, \"dish\": _2, \"diy\": _2, \"dnp\": _2, \"docs\": _2, \"doctor\": _2, \"dog\": _2, \"domains\": _2, \"dot\": _2, \"download\": _2, \"drive\": _2, \"dtv\": _2, \"dubai\": _2, \"dunlop\": _2, \"dupont\": _2, \"durban\": _2, \"dvag\": _2, \"dvr\": _2, \"earth\": _2, \"eat\": _2, \"eco\": _2, \"edeka\": _2, \"education\": _21, \"email\": [1, { \"crisp\": [0, { \"on\": _3 }], \"tawk\": _52, \"tawkto\": _52 }], \"emerck\": _2, \"energy\": _2, \"engineer\": _2, \"engineering\": _2, \"enterprises\": _2, \"epson\": _2, \"equipment\": _2, \"ericsson\": _2, \"erni\": _2, \"esq\": _2, \"estate\": [1, { \"compute\": _6 }], \"eurovision\": _2, \"eus\": [1, { \"party\": _53 }], \"events\": [1, { \"koobin\": _3, \"co\": _3 }], \"exchange\": _2, \"expert\": _2, \"exposed\": _2, \"express\": _2, \"extraspace\": _2, \"fage\": _2, \"fail\": _2, \"fairwinds\": _2, \"faith\": _2, \"family\": _2, \"fan\": _2, \"fans\": _2, \"farm\": [1, { \"storj\": _3 }], \"farmers\": _2, \"fashion\": _2, \"fast\": _2, \"fedex\": _2, \"feedback\": _2, \"ferrari\": _2, \"ferrero\": _2, \"fidelity\": _2, \"fido\": _2, \"film\": _2, \"final\": _2, \"finance\": _2, \"financial\": _21, \"fire\": _2, \"firestone\": _2, \"firmdale\": _2, \"fish\": _2, \"fishing\": _2, \"fit\": _2, \"fitness\": _2, \"flickr\": _2, \"flights\": _2, \"flir\": _2, \"florist\": _2, \"flowers\": _2, \"fly\": _2, \"foo\": _2, \"food\": _2, \"football\": _2, \"ford\": _2, \"forex\": _2, \"forsale\": _2, \"forum\": _2, \"foundation\": _2, \"fox\": _2, \"free\": _2, \"fresenius\": _2, \"frl\": _2, \"frogans\": _2, \"frontier\": _2, \"ftr\": _2, \"fujitsu\": _2, \"fun\": _2, \"fund\": _2, \"furniture\": _2, \"futbol\": _2, \"fyi\": _2, \"gal\": _2, \"gallery\": _2, \"gallo\": _2, \"gallup\": _2, \"game\": _2, \"games\": [1, { \"pley\": _3, \"sheezy\": _3 }], \"gap\": _2, \"garden\": _2, \"gay\": [1, { \"pages\": _3 }], \"gbiz\": _2, \"gdn\": [1, { \"cnpy\": _3 }], \"gea\": _2, \"gent\": _2, \"genting\": _2, \"george\": _2, \"ggee\": _2, \"gift\": _2, \"gifts\": _2, \"gives\": _2, \"giving\": _2, \"glass\": _2, \"gle\": _2, \"global\": [1, { \"appwrite\": _3 }], \"globo\": _2, \"gmail\": _2, \"gmbh\": _2, \"gmo\": _2, \"gmx\": _2, \"godaddy\": _2, \"gold\": _2, \"goldpoint\": _2, \"golf\": _2, \"goo\": _2, \"goodyear\": _2, \"goog\": [1, { \"cloud\": _3, \"translate\": _3, \"usercontent\": _6 }], \"google\": _2, \"gop\": _2, \"got\": _2, \"grainger\": _2, \"graphics\": _2, \"gratis\": _2, \"green\": _2, \"gripe\": _2, \"grocery\": _2, \"group\": [1, { \"discourse\": _3 }], \"gucci\": _2, \"guge\": _2, \"guide\": _2, \"guitars\": _2, \"guru\": _2, \"hair\": _2, \"hamburg\": _2, \"hangout\": _2, \"haus\": _2, \"hbo\": _2, \"hdfc\": _2, \"hdfcbank\": _2, \"health\": [1, { \"hra\": _3 }], \"healthcare\": _2, \"help\": _2, \"helsinki\": _2, \"here\": _2, \"hermes\": _2, \"hiphop\": _2, \"hisamitsu\": _2, \"hitachi\": _2, \"hiv\": _2, \"hkt\": _2, \"hockey\": _2, \"holdings\": _2, \"holiday\": _2, \"homedepot\": _2, \"homegoods\": _2, \"homes\": _2, \"homesense\": _2, \"honda\": _2, \"horse\": _2, \"hospital\": _2, \"host\": [1, { \"cloudaccess\": _3, \"freesite\": _3, \"easypanel\": _3, \"fastvps\": _3, \"myfast\": _3, \"tempurl\": _3, \"wpmudev\": _3, \"iserv\": _3, \"jele\": _3, \"mircloud\": _3, \"wp2\": _3, \"half\": _3 }], \"hosting\": [1, { \"opencraft\": _3 }], \"hot\": _2, \"hotel\": _2, \"hotels\": _2, \"hotmail\": _2, \"house\": _2, \"how\": _2, \"hsbc\": _2, \"hughes\": _2, \"hyatt\": _2, \"hyundai\": _2, \"ibm\": _2, \"icbc\": _2, \"ice\": _2, \"icu\": _2, \"ieee\": _2, \"ifm\": _2, \"ikano\": _2, \"imamat\": _2, \"imdb\": _2, \"immo\": _2, \"immobilien\": _2, \"inc\": _2, \"industries\": _2, \"infiniti\": _2, \"ing\": _2, \"ink\": _2, \"institute\": _2, \"insurance\": _2, \"insure\": _2, \"international\": _2, \"intuit\": _2, \"investments\": _2, \"ipiranga\": _2, \"irish\": _2, \"ismaili\": _2, \"ist\": _2, \"istanbul\": _2, \"itau\": _2, \"itv\": _2, \"jaguar\": _2, \"java\": _2, \"jcb\": _2, \"jeep\": _2, \"jetzt\": _2, \"jewelry\": _2, \"jio\": _2, \"jll\": _2, \"jmp\": _2, \"jnj\": _2, \"joburg\": _2, \"jot\": _2, \"joy\": _2, \"jpmorgan\": _2, \"jprs\": _2, \"juegos\": _2, \"juniper\": _2, \"kaufen\": _2, \"kddi\": _2, \"kerryhotels\": _2, \"kerryproperties\": _2, \"kfh\": _2, \"kia\": _2, \"kids\": _2, \"kim\": _2, \"kindle\": _2, \"kitchen\": _2, \"kiwi\": _2, \"koeln\": _2, \"komatsu\": _2, \"kosher\": _2, \"kpmg\": _2, \"kpn\": _2, \"krd\": [1, { \"co\": _3, \"edu\": _3 }], \"kred\": _2, \"kuokgroup\": _2, \"kyoto\": _2, \"lacaixa\": _2, \"lamborghini\": _2, \"lamer\": _2, \"land\": _2, \"landrover\": _2, \"lanxess\": _2, \"lasalle\": _2, \"lat\": _2, \"latino\": _2, \"latrobe\": _2, \"law\": _2, \"lawyer\": _2, \"lds\": _2, \"lease\": _2, \"leclerc\": _2, \"lefrak\": _2, \"legal\": _2, \"lego\": _2, \"lexus\": _2, \"lgbt\": _2, \"lidl\": _2, \"life\": _2, \"lifeinsurance\": _2, \"lifestyle\": _2, \"lighting\": _2, \"like\": _2, \"lilly\": _2, \"limited\": _2, \"limo\": _2, \"lincoln\": _2, \"link\": [1, { \"myfritz\": _3, \"cyon\": _3, \"dweb\": _6, \"inbrowser\": _6, \"nftstorage\": _60, \"mypep\": _3, \"storacha\": _60, \"w3s\": _60 }], \"live\": [1, { \"aem\": _3, \"hlx\": _3, \"ewp\": _6 }], \"living\": _2, \"llc\": _2, \"llp\": _2, \"loan\": _2, \"loans\": _2, \"locker\": _2, \"locus\": _2, \"lol\": [1, { \"omg\": _3 }], \"london\": _2, \"lotte\": _2, \"lotto\": _2, \"love\": _2, \"lpl\": _2, \"lplfinancial\": _2, \"ltd\": _2, \"ltda\": _2, \"lundbeck\": _2, \"luxe\": _2, \"luxury\": _2, \"madrid\": _2, \"maif\": _2, \"maison\": _2, \"makeup\": _2, \"man\": _2, \"management\": _2, \"mango\": _2, \"map\": _2, \"market\": _2, \"marketing\": _2, \"markets\": _2, \"marriott\": _2, \"marshalls\": _2, \"mattel\": _2, \"mba\": _2, \"mckinsey\": _2, \"med\": _2, \"media\": _61, \"meet\": _2, \"melbourne\": _2, \"meme\": _2, \"memorial\": _2, \"men\": _2, \"menu\": [1, { \"barsy\": _3, \"barsyonline\": _3 }], \"merck\": _2, \"merckmsd\": _2, \"miami\": _2, \"microsoft\": _2, \"mini\": _2, \"mint\": _2, \"mit\": _2, \"mitsubishi\": _2, \"mlb\": _2, \"mls\": _2, \"mma\": _2, \"mobile\": _2, \"moda\": _2, \"moe\": _2, \"moi\": _2, \"mom\": _2, \"monash\": _2, \"money\": _2, \"monster\": _2, \"mormon\": _2, \"mortgage\": _2, \"moscow\": _2, \"moto\": _2, \"motorcycles\": _2, \"mov\": _2, \"movie\": _2, \"msd\": _2, \"mtn\": _2, \"mtr\": _2, \"music\": _2, \"nab\": _2, \"nagoya\": _2, \"navy\": _2, \"nba\": _2, \"nec\": _2, \"netbank\": _2, \"netflix\": _2, \"network\": [1, { \"aem\": _3, \"alces\": _6, \"co\": _3, \"arvo\": _3, \"azimuth\": _3, \"tlon\": _3 }], \"neustar\": _2, \"new\": _2, \"news\": [1, { \"noticeable\": _3 }], \"next\": _2, \"nextdirect\": _2, \"nexus\": _2, \"nfl\": _2, \"ngo\": _2, \"nhk\": _2, \"nico\": _2, \"nike\": _2, \"nikon\": _2, \"ninja\": _2, \"nissan\": _2, \"nissay\": _2, \"nokia\": _2, \"norton\": _2, \"now\": _2, \"nowruz\": _2, \"nowtv\": _2, \"nra\": _2, \"nrw\": _2, \"ntt\": _2, \"nyc\": _2, \"obi\": _2, \"observer\": _2, \"office\": _2, \"okinawa\": _2, \"olayan\": _2, \"olayangroup\": _2, \"ollo\": _2, \"omega\": _2, \"one\": [1, { \"kin\": _6, \"service\": _3 }], \"ong\": [1, { \"obl\": _3 }], \"onl\": _2, \"online\": [1, { \"eero\": _3, \"eero-stage\": _3, \"websitebuilder\": _3, \"barsy\": _3 }], \"ooo\": _2, \"open\": _2, \"oracle\": _2, \"orange\": [1, { \"tech\": _3 }], \"organic\": _2, \"origins\": _2, \"osaka\": _2, \"otsuka\": _2, \"ott\": _2, \"ovh\": [1, { \"nerdpol\": _3 }], \"page\": [1, { \"aem\": _3, \"hlx\": _3, \"translated\": _3, \"codeberg\": _3, \"heyflow\": _3, \"prvcy\": _3, \"rocky\": _3, \"pdns\": _3, \"plesk\": _3 }], \"panasonic\": _2, \"paris\": _2, \"pars\": _2, \"partners\": _2, \"parts\": _2, \"party\": _2, \"pay\": _2, \"pccw\": _2, \"pet\": _2, \"pfizer\": _2, \"pharmacy\": _2, \"phd\": _2, \"philips\": _2, \"phone\": _2, \"photo\": _2, \"photography\": _2, \"photos\": _61, \"physio\": _2, \"pics\": _2, \"pictet\": _2, \"pictures\": [1, { \"1337\": _3 }], \"pid\": _2, \"pin\": _2, \"ping\": _2, \"pink\": _2, \"pioneer\": _2, \"pizza\": [1, { \"ngrok\": _3 }], \"place\": _21, \"play\": _2, \"playstation\": _2, \"plumbing\": _2, \"plus\": _2, \"pnc\": _2, \"pohl\": _2, \"poker\": _2, \"politie\": _2, \"porn\": _2, \"praxi\": _2, \"press\": _2, \"prime\": _2, \"prod\": _2, \"productions\": _2, \"prof\": _2, \"progressive\": _2, \"promo\": _2, \"properties\": _2, \"property\": _2, \"protection\": _2, \"pru\": _2, \"prudential\": _2, \"pub\": [1, { \"id\": _6, \"kin\": _6, \"barsy\": _3 }], \"pwc\": _2, \"qpon\": _2, \"quebec\": _2, \"quest\": _2, \"racing\": _2, \"radio\": _2, \"read\": _2, \"realestate\": _2, \"realtor\": _2, \"realty\": _2, \"recipes\": _2, \"red\": _2, \"redumbrella\": _2, \"rehab\": _2, \"reise\": _2, \"reisen\": _2, \"reit\": _2, \"reliance\": _2, \"ren\": _2, \"rent\": _2, \"rentals\": _2, \"repair\": _2, \"report\": _2, \"republican\": _2, \"rest\": _2, \"restaurant\": _2, \"review\": _2, \"reviews\": [1, { \"aem\": _3 }], \"rexroth\": _2, \"rich\": _2, \"richardli\": _2, \"ricoh\": _2, \"ril\": _2, \"rio\": _2, \"rip\": [1, { \"clan\": _3 }], \"rocks\": [1, { \"myddns\": _3, \"stackit\": _3, \"lima-city\": _3, \"webspace\": _3 }], \"rodeo\": _2, \"rogers\": _2, \"room\": _2, \"rsvp\": _2, \"rugby\": _2, \"ruhr\": _2, \"run\": [1, { \"appwrite\": _6, \"development\": _3, \"ravendb\": _3, \"liara\": [2, { \"iran\": _3 }], \"servers\": _3, \"lovable\": _3, \"build\": _6, \"code\": _6, \"database\": _6, \"migration\": _6, \"onporter\": _3, \"repl\": _3, \"stackit\": _3, \"val\": _50, \"vercel\": _3, \"wix\": _3 }], \"rwe\": _2, \"ryukyu\": _2, \"saarland\": _2, \"safe\": _2, \"safety\": _2, \"sakura\": _2, \"sale\": _2, \"salon\": _2, \"samsclub\": _2, \"samsung\": _2, \"sandvik\": _2, \"sandvikcoromant\": _2, \"sanofi\": _2, \"sap\": _2, \"sarl\": _2, \"sas\": _2, \"save\": _2, \"saxo\": _2, \"sbi\": _2, \"sbs\": _2, \"scb\": _2, \"schaeffler\": _2, \"schmidt\": _2, \"scholarships\": _2, \"school\": _2, \"schule\": _2, \"schwarz\": _2, \"science\": _2, \"scot\": [1, { \"gov\": [2, { \"service\": _3 }] }], \"search\": _2, \"seat\": _2, \"secure\": _2, \"security\": _2, \"seek\": _2, \"select\": _2, \"sener\": _2, \"services\": [1, { \"loginline\": _3 }], \"seven\": _2, \"sew\": _2, \"sex\": _2, \"sexy\": _2, \"sfr\": _2, \"shangrila\": _2, \"sharp\": _2, \"shell\": _2, \"shia\": _2, \"shiksha\": _2, \"shoes\": _2, \"shop\": [1, { \"base\": _3, \"hoplix\": _3, \"barsy\": _3, \"barsyonline\": _3, \"shopware\": _3 }], \"shopping\": _2, \"shouji\": _2, \"show\": _2, \"silk\": _2, \"sina\": _2, \"singles\": _2, \"site\": [1, { \"square\": _3, \"canva\": _24, \"cloudera\": _6, \"convex\": _3, \"cyon\": _3, \"caffeine\": _3, \"fastvps\": _3, \"figma\": _3, \"preview\": _3, \"heyflow\": _3, \"jele\": _3, \"jouwweb\": _3, \"loginline\": _3, \"barsy\": _3, \"notion\": _3, \"omniwe\": _3, \"opensocial\": _3, \"madethis\": _3, \"platformsh\": _6, \"tst\": _6, \"byen\": _3, \"srht\": _3, \"novecore\": _3, \"cpanel\": _3, \"wpsquared\": _3, \"sourcecraft\": _3 }], \"ski\": _2, \"skin\": _2, \"sky\": _2, \"skype\": _2, \"sling\": _2, \"smart\": _2, \"smile\": _2, \"sncf\": _2, \"soccer\": _2, \"social\": _2, \"softbank\": _2, \"software\": _2, \"sohu\": _2, \"solar\": _2, \"solutions\": _2, \"song\": _2, \"sony\": _2, \"soy\": _2, \"spa\": _2, \"space\": [1, { \"myfast\": _3, \"heiyu\": _3, \"hf\": [2, { \"static\": _3 }], \"app-ionos\": _3, \"project\": _3, \"uber\": _3, \"xs4all\": _3 }], \"sport\": _2, \"spot\": _2, \"srl\": _2, \"stada\": _2, \"staples\": _2, \"star\": _2, \"statebank\": _2, \"statefarm\": _2, \"stc\": _2, \"stcgroup\": _2, \"stockholm\": _2, \"storage\": _2, \"store\": [1, { \"barsy\": _3, \"sellfy\": _3, \"shopware\": _3, \"storebase\": _3 }], \"stream\": _2, \"studio\": _2, \"study\": _2, \"style\": _2, \"sucks\": _2, \"supplies\": _2, \"supply\": _2, \"support\": [1, { \"barsy\": _3 }], \"surf\": _2, \"surgery\": _2, \"suzuki\": _2, \"swatch\": _2, \"swiss\": _2, \"sydney\": _2, \"systems\": [1, { \"knightpoint\": _3 }], \"tab\": _2, \"taipei\": _2, \"talk\": _2, \"taobao\": _2, \"target\": _2, \"tatamotors\": _2, \"tatar\": _2, \"tattoo\": _2, \"tax\": _2, \"taxi\": _2, \"tci\": _2, \"tdk\": _2, \"team\": [1, { \"discourse\": _3, \"jelastic\": _3 }], \"tech\": [1, { \"cleverapps\": _3 }], \"technology\": _21, \"temasek\": _2, \"tennis\": _2, \"teva\": _2, \"thd\": _2, \"theater\": _2, \"theatre\": _2, \"tiaa\": _2, \"tickets\": _2, \"tienda\": _2, \"tips\": _2, \"tires\": _2, \"tirol\": _2, \"tjmaxx\": _2, \"tjx\": _2, \"tkmaxx\": _2, \"tmall\": _2, \"today\": [1, { \"prequalifyme\": _3 }], \"tokyo\": _2, \"tools\": [1, { \"addr\": _49, \"myaddr\": _3 }], \"top\": [1, { \"ntdll\": _3, \"wadl\": _6 }], \"toray\": _2, \"toshiba\": _2, \"total\": _2, \"tours\": _2, \"town\": _2, \"toyota\": _2, \"toys\": _2, \"trade\": _2, \"trading\": _2, \"training\": _2, \"travel\": _2, \"travelers\": _2, \"travelersinsurance\": _2, \"trust\": _2, \"trv\": _2, \"tube\": _2, \"tui\": _2, \"tunes\": _2, \"tushu\": _2, \"tvs\": _2, \"ubank\": _2, \"ubs\": _2, \"unicom\": _2, \"university\": _2, \"uno\": _2, \"uol\": _2, \"ups\": _2, \"vacations\": _2, \"vana\": _2, \"vanguard\": _2, \"vegas\": _2, \"ventures\": _2, \"verisign\": _2, \"versicherung\": _2, \"vet\": _2, \"viajes\": _2, \"video\": _2, \"vig\": _2, \"viking\": _2, \"villas\": _2, \"vin\": _2, \"vip\": [1, { \"hidns\": _3 }], \"virgin\": _2, \"visa\": _2, \"vision\": _2, \"viva\": _2, \"vivo\": _2, \"vlaanderen\": _2, \"vodka\": _2, \"volvo\": _2, \"vote\": _2, \"voting\": _2, \"voto\": _2, \"voyage\": _2, \"wales\": _2, \"walmart\": _2, \"walter\": _2, \"wang\": _2, \"wanggou\": _2, \"watch\": _2, \"watches\": _2, \"weather\": _2, \"weatherchannel\": _2, \"webcam\": _2, \"weber\": _2, \"website\": _61, \"wed\": _2, \"wedding\": _2, \"weibo\": _2, \"weir\": _2, \"whoswho\": _2, \"wien\": _2, \"wiki\": _61, \"williamhill\": _2, \"win\": _2, \"windows\": _2, \"wine\": _2, \"winners\": _2, \"wme\": _2, \"wolterskluwer\": _2, \"woodside\": _2, \"work\": _2, \"works\": _2, \"world\": _2, \"wow\": _2, \"wtc\": _2, \"wtf\": _2, \"xbox\": _2, \"xerox\": _2, \"xihuan\": _2, \"xin\": _2, \"xn--11b4c3d\": _2, \"कॉम\": _2, \"xn--1ck2e1b\": _2, \"セール\": _2, \"xn--1qqw23a\": _2, \"佛山\": _2, \"xn--30rr7y\": _2, \"慈善\": _2, \"xn--3bst00m\": _2, \"集团\": _2, \"xn--3ds443g\": _2, \"在线\": _2, \"xn--3pxu8k\": _2, \"点看\": _2, \"xn--42c2d9a\": _2, \"คอม\": _2, \"xn--45q11c\": _2, \"八卦\": _2, \"xn--4gbrim\": _2, \"موقع\": _2, \"xn--55qw42g\": _2, \"公益\": _2, \"xn--55qx5d\": _2, \"公司\": _2, \"xn--5su34j936bgsg\": _2, \"香格里拉\": _2, \"xn--5tzm5g\": _2, \"网站\": _2, \"xn--6frz82g\": _2, \"移动\": _2, \"xn--6qq986b3xl\": _2, \"我爱你\": _2, \"xn--80adxhks\": _2, \"москва\": _2, \"xn--80aqecdr1a\": _2, \"католик\": _2, \"xn--80asehdb\": _2, \"онлайн\": _2, \"xn--80aswg\": _2, \"сайт\": _2, \"xn--8y0a063a\": _2, \"联通\": _2, \"xn--9dbq2a\": _2, \"קום\": _2, \"xn--9et52u\": _2, \"时尚\": _2, \"xn--9krt00a\": _2, \"微博\": _2, \"xn--b4w605ferd\": _2, \"淡马锡\": _2, \"xn--bck1b9a5dre4c\": _2, \"ファッション\": _2, \"xn--c1avg\": _2, \"орг\": _2, \"xn--c2br7g\": _2, \"नेट\": _2, \"xn--cck2b3b\": _2, \"ストア\": _2, \"xn--cckwcxetd\": _2, \"アマゾン\": _2, \"xn--cg4bki\": _2, \"삼성\": _2, \"xn--czr694b\": _2, \"商标\": _2, \"xn--czrs0t\": _2, \"商店\": _2, \"xn--czru2d\": _2, \"商城\": _2, \"xn--d1acj3b\": _2, \"дети\": _2, \"xn--eckvdtc9d\": _2, \"ポイント\": _2, \"xn--efvy88h\": _2, \"新闻\": _2, \"xn--fct429k\": _2, \"家電\": _2, \"xn--fhbei\": _2, \"كوم\": _2, \"xn--fiq228c5hs\": _2, \"中文网\": _2, \"xn--fiq64b\": _2, \"中信\": _2, \"xn--fjq720a\": _2, \"娱乐\": _2, \"xn--flw351e\": _2, \"谷歌\": _2, \"xn--fzys8d69uvgm\": _2, \"電訊盈科\": _2, \"xn--g2xx48c\": _2, \"购物\": _2, \"xn--gckr3f0f\": _2, \"クラウド\": _2, \"xn--gk3at1e\": _2, \"通販\": _2, \"xn--hxt814e\": _2, \"网店\": _2, \"xn--i1b6b1a6a2e\": _2, \"संगठन\": _2, \"xn--imr513n\": _2, \"餐厅\": _2, \"xn--io0a7i\": _2, \"网络\": _2, \"xn--j1aef\": _2, \"ком\": _2, \"xn--jlq480n2rg\": _2, \"亚马逊\": _2, \"xn--jvr189m\": _2, \"食品\": _2, \"xn--kcrx77d1x4a\": _2, \"飞利浦\": _2, \"xn--kput3i\": _2, \"手机\": _2, \"xn--mgba3a3ejt\": _2, \"ارامكو\": _2, \"xn--mgba7c0bbn0a\": _2, \"العليان\": _2, \"xn--mgbab2bd\": _2, \"بازار\": _2, \"xn--mgbca7dzdo\": _2, \"ابوظبي\": _2, \"xn--mgbi4ecexp\": _2, \"كاثوليك\": _2, \"xn--mgbt3dhd\": _2, \"همراه\": _2, \"xn--mk1bu44c\": _2, \"닷컴\": _2, \"xn--mxtq1m\": _2, \"政府\": _2, \"xn--ngbc5azd\": _2, \"شبكة\": _2, \"xn--ngbe9e0a\": _2, \"بيتك\": _2, \"xn--ngbrx\": _2, \"عرب\": _2, \"xn--nqv7f\": _2, \"机构\": _2, \"xn--nqv7fs00ema\": _2, \"组织机构\": _2, \"xn--nyqy26a\": _2, \"健康\": _2, \"xn--otu796d\": _2, \"招聘\": _2, \"xn--p1acf\": [1, { \"xn--90amc\": _3, \"xn--j1aef\": _3, \"xn--j1ael8b\": _3, \"xn--h1ahn\": _3, \"xn--j1adp\": _3, \"xn--c1avg\": _3, \"xn--80aaa0cvac\": _3, \"xn--h1aliz\": _3, \"xn--90a1af\": _3, \"xn--41a\": _3 }], \"рус\": [1, { \"биз\": _3, \"ком\": _3, \"крым\": _3, \"мир\": _3, \"мск\": _3, \"орг\": _3, \"самара\": _3, \"сочи\": _3, \"спб\": _3, \"я\": _3 }], \"xn--pssy2u\": _2, \"大拿\": _2, \"xn--q9jyb4c\": _2, \"みんな\": _2, \"xn--qcka1pmc\": _2, \"グーグル\": _2, \"xn--rhqv96g\": _2, \"世界\": _2, \"xn--rovu88b\": _2, \"書籍\": _2, \"xn--ses554g\": _2, \"网址\": _2, \"xn--t60b56a\": _2, \"닷넷\": _2, \"xn--tckwe\": _2, \"コム\": _2, \"xn--tiq49xqyj\": _2, \"天主教\": _2, \"xn--unup4y\": _2, \"游戏\": _2, \"xn--vermgensberater-ctb\": _2, \"vermögensberater\": _2, \"xn--vermgensberatung-pwb\": _2, \"vermögensberatung\": _2, \"xn--vhquv\": _2, \"企业\": _2, \"xn--vuq861b\": _2, \"信息\": _2, \"xn--w4r85el8fhu5dnra\": _2, \"嘉里大酒店\": _2, \"xn--w4rs40l\": _2, \"嘉里\": _2, \"xn--xhq521b\": _2, \"广东\": _2, \"xn--zfr164b\": _2, \"政务\": _2, \"xyz\": [1, { \"botdash\": _3, \"telebit\": _6 }], \"yachts\": _2, \"yahoo\": _2, \"yamaxun\": _2, \"yandex\": _2, \"yodobashi\": _2, \"yoga\": _2, \"yokohama\": _2, \"you\": _2, \"youtube\": _2, \"yun\": _2, \"zappos\": _2, \"zara\": _2, \"zero\": _2, \"zip\": _2, \"zone\": [1, { \"triton\": _6, \"stackit\": _3, \"lima\": _3 }], \"zuerich\": _2 }];\n    return rules;\n})();\n//# sourceMappingURL=trie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts/dist/es6/src/data/trie.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tldts/dist/es6/src/suffix-trie.js":
/*!********************************************************!*\
  !*** ./node_modules/tldts/dist/es6/src/suffix-trie.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ suffixLookup; }\n/* harmony export */ });\n/* harmony import */ var tldts_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tldts-core */ \"(app-pages-browser)/./node_modules/tldts-core/dist/es6/index.js\");\n/* harmony import */ var _data_trie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/trie */ \"(app-pages-browser)/./node_modules/tldts/dist/es6/src/data/trie.js\");\n\n\n/**\n * Lookup parts of domain in Trie\n */\nfunction lookupInTrie(parts, trie, index, allowedMask) {\n    let result = null;\n    let node = trie;\n    while (node !== undefined) {\n        // We have a match!\n        if ((node[0] & allowedMask) !== 0) {\n            result = {\n                index: index + 1,\n                isIcann: node[0] === 1 /* RULE_TYPE.ICANN */,\n                isPrivate: node[0] === 2 /* RULE_TYPE.PRIVATE */,\n            };\n        }\n        // No more `parts` to look for\n        if (index === -1) {\n            break;\n        }\n        const succ = node[1];\n        node = Object.prototype.hasOwnProperty.call(succ, parts[index])\n            ? succ[parts[index]]\n            : succ['*'];\n        index -= 1;\n    }\n    return result;\n}\n/**\n * Check if `hostname` has a valid public suffix in `trie`.\n */\nfunction suffixLookup(hostname, options, out) {\n    var _a;\n    if ((0,tldts_core__WEBPACK_IMPORTED_MODULE_0__.fastPathLookup)(hostname, options, out)) {\n        return;\n    }\n    const hostnameParts = hostname.split('.');\n    const allowedMask = (options.allowPrivateDomains ? 2 /* RULE_TYPE.PRIVATE */ : 0) |\n        (options.allowIcannDomains ? 1 /* RULE_TYPE.ICANN */ : 0);\n    // Look for exceptions\n    const exceptionMatch = lookupInTrie(hostnameParts, _data_trie__WEBPACK_IMPORTED_MODULE_1__.exceptions, hostnameParts.length - 1, allowedMask);\n    if (exceptionMatch !== null) {\n        out.isIcann = exceptionMatch.isIcann;\n        out.isPrivate = exceptionMatch.isPrivate;\n        out.publicSuffix = hostnameParts.slice(exceptionMatch.index + 1).join('.');\n        return;\n    }\n    // Look for a match in rules\n    const rulesMatch = lookupInTrie(hostnameParts, _data_trie__WEBPACK_IMPORTED_MODULE_1__.rules, hostnameParts.length - 1, allowedMask);\n    if (rulesMatch !== null) {\n        out.isIcann = rulesMatch.isIcann;\n        out.isPrivate = rulesMatch.isPrivate;\n        out.publicSuffix = hostnameParts.slice(rulesMatch.index).join('.');\n        return;\n    }\n    // No match found...\n    // Prevailing rule is '*' so we consider the top-level domain to be the\n    // public suffix of `hostname` (e.g.: 'example.org' => 'org').\n    out.isIcann = false;\n    out.isPrivate = false;\n    out.publicSuffix = (_a = hostnameParts[hostnameParts.length - 1]) !== null && _a !== void 0 ? _a : null;\n}\n//# sourceMappingURL=suffix-trie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90bGR0cy9kaXN0L2VzNi9zcmMvc3VmZml4LXRyaWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ0c7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBLFFBQVEsMERBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGtEQUFVO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELDZDQUFLO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RsZHRzL2Rpc3QvZXM2L3NyYy9zdWZmaXgtdHJpZS5qcz83MjE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZhc3RQYXRoTG9va3VwLCB9IGZyb20gJ3RsZHRzLWNvcmUnO1xuaW1wb3J0IHsgZXhjZXB0aW9ucywgcnVsZXMgfSBmcm9tICcuL2RhdGEvdHJpZSc7XG4vKipcbiAqIExvb2t1cCBwYXJ0cyBvZiBkb21haW4gaW4gVHJpZVxuICovXG5mdW5jdGlvbiBsb29rdXBJblRyaWUocGFydHMsIHRyaWUsIGluZGV4LCBhbGxvd2VkTWFzaykge1xuICAgIGxldCByZXN1bHQgPSBudWxsO1xuICAgIGxldCBub2RlID0gdHJpZTtcbiAgICB3aGlsZSAobm9kZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIFdlIGhhdmUgYSBtYXRjaCFcbiAgICAgICAgaWYgKChub2RlWzBdICYgYWxsb3dlZE1hc2spICE9PSAwKSB7XG4gICAgICAgICAgICByZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgaW5kZXg6IGluZGV4ICsgMSxcbiAgICAgICAgICAgICAgICBpc0ljYW5uOiBub2RlWzBdID09PSAxIC8qIFJVTEVfVFlQRS5JQ0FOTiAqLyxcbiAgICAgICAgICAgICAgICBpc1ByaXZhdGU6IG5vZGVbMF0gPT09IDIgLyogUlVMRV9UWVBFLlBSSVZBVEUgKi8sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIC8vIE5vIG1vcmUgYHBhcnRzYCB0byBsb29rIGZvclxuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzdWNjID0gbm9kZVsxXTtcbiAgICAgICAgbm9kZSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzdWNjLCBwYXJ0c1tpbmRleF0pXG4gICAgICAgICAgICA/IHN1Y2NbcGFydHNbaW5kZXhdXVxuICAgICAgICAgICAgOiBzdWNjWycqJ107XG4gICAgICAgIGluZGV4IC09IDE7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIENoZWNrIGlmIGBob3N0bmFtZWAgaGFzIGEgdmFsaWQgcHVibGljIHN1ZmZpeCBpbiBgdHJpZWAuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN1ZmZpeExvb2t1cChob3N0bmFtZSwgb3B0aW9ucywgb3V0KSB7XG4gICAgdmFyIF9hO1xuICAgIGlmIChmYXN0UGF0aExvb2t1cChob3N0bmFtZSwgb3B0aW9ucywgb3V0KSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGhvc3RuYW1lUGFydHMgPSBob3N0bmFtZS5zcGxpdCgnLicpO1xuICAgIGNvbnN0IGFsbG93ZWRNYXNrID0gKG9wdGlvbnMuYWxsb3dQcml2YXRlRG9tYWlucyA/IDIgLyogUlVMRV9UWVBFLlBSSVZBVEUgKi8gOiAwKSB8XG4gICAgICAgIChvcHRpb25zLmFsbG93SWNhbm5Eb21haW5zID8gMSAvKiBSVUxFX1RZUEUuSUNBTk4gKi8gOiAwKTtcbiAgICAvLyBMb29rIGZvciBleGNlcHRpb25zXG4gICAgY29uc3QgZXhjZXB0aW9uTWF0Y2ggPSBsb29rdXBJblRyaWUoaG9zdG5hbWVQYXJ0cywgZXhjZXB0aW9ucywgaG9zdG5hbWVQYXJ0cy5sZW5ndGggLSAxLCBhbGxvd2VkTWFzayk7XG4gICAgaWYgKGV4Y2VwdGlvbk1hdGNoICE9PSBudWxsKSB7XG4gICAgICAgIG91dC5pc0ljYW5uID0gZXhjZXB0aW9uTWF0Y2guaXNJY2FubjtcbiAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGV4Y2VwdGlvbk1hdGNoLmlzUHJpdmF0ZTtcbiAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9IGhvc3RuYW1lUGFydHMuc2xpY2UoZXhjZXB0aW9uTWF0Y2guaW5kZXggKyAxKS5qb2luKCcuJyk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gTG9vayBmb3IgYSBtYXRjaCBpbiBydWxlc1xuICAgIGNvbnN0IHJ1bGVzTWF0Y2ggPSBsb29rdXBJblRyaWUoaG9zdG5hbWVQYXJ0cywgcnVsZXMsIGhvc3RuYW1lUGFydHMubGVuZ3RoIC0gMSwgYWxsb3dlZE1hc2spO1xuICAgIGlmIChydWxlc01hdGNoICE9PSBudWxsKSB7XG4gICAgICAgIG91dC5pc0ljYW5uID0gcnVsZXNNYXRjaC5pc0ljYW5uO1xuICAgICAgICBvdXQuaXNQcml2YXRlID0gcnVsZXNNYXRjaC5pc1ByaXZhdGU7XG4gICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSBob3N0bmFtZVBhcnRzLnNsaWNlKHJ1bGVzTWF0Y2guaW5kZXgpLmpvaW4oJy4nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBObyBtYXRjaCBmb3VuZC4uLlxuICAgIC8vIFByZXZhaWxpbmcgcnVsZSBpcyAnKicgc28gd2UgY29uc2lkZXIgdGhlIHRvcC1sZXZlbCBkb21haW4gdG8gYmUgdGhlXG4gICAgLy8gcHVibGljIHN1ZmZpeCBvZiBgaG9zdG5hbWVgIChlLmcuOiAnZXhhbXBsZS5vcmcnID0+ICdvcmcnKS5cbiAgICBvdXQuaXNJY2FubiA9IGZhbHNlO1xuICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICBvdXQucHVibGljU3VmZml4ID0gKF9hID0gaG9zdG5hbWVQYXJ0c1tob3N0bmFtZVBhcnRzLmxlbmd0aCAtIDFdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VmZml4LXRyaWUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tldts/dist/es6/src/suffix-trie.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/mocks/browser.ts":
/*!******************************!*\
  !*** ./src/mocks/browser.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   worker: function() { return /* binding */ worker; }\n/* harmony export */ });\n/* harmony import */ var msw_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! msw/browser */ \"(app-pages-browser)/./node_modules/msw/lib/browser/index.mjs\");\n/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers */ \"(app-pages-browser)/./src/mocks/handlers.ts\");\n\n\nconst worker = (0,msw_browser__WEBPACK_IMPORTED_MODULE_1__.setupWorker)(..._handlers__WEBPACK_IMPORTED_MODULE_0__.handlers);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9tb2Nrcy9icm93c2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNKO0FBRTlCLE1BQU1FLFNBQVNGLHdEQUFXQSxJQUFJQywrQ0FBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbW9ja3MvYnJvd3Nlci50cz9kZTE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldHVwV29ya2VyIH0gZnJvbSAnbXN3L2Jyb3dzZXInXHJcbmltcG9ydCB7IGhhbmRsZXJzIH0gZnJvbSAnLi9oYW5kbGVycydcclxuXHJcbmV4cG9ydCBjb25zdCB3b3JrZXIgPSBzZXR1cFdvcmtlciguLi5oYW5kbGVycylcclxuIl0sIm5hbWVzIjpbInNldHVwV29ya2VyIiwiaGFuZGxlcnMiLCJ3b3JrZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/mocks/browser.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/mocks/handlers.ts":
/*!*******************************!*\
  !*** ./src/mocks/handlers.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: function() { return /* binding */ handlers; }\n/* harmony export */ });\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! msw */ \"(app-pages-browser)/./node_modules/msw/lib/core/http.mjs\");\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! msw */ \"(app-pages-browser)/./node_modules/msw/lib/core/HttpResponse.mjs\");\n\n// Mock data for enrichment snippets\nconst mockSnippets = [\n    {\n        id: \"s1\",\n        title: \"Breakthrough in Genomic Analysis Methods\",\n        excerpt: \"Recent advances in machine learning have significantly improved the accuracy of genomic variant detection, showing 12% improvement over traditional methods.\",\n        source: \"nature.com\",\n        publishedAt: \"2024-11-15\",\n        included: true\n    },\n    {\n        id: \"s2\",\n        title: \"Large-scale Genomic Data Processing\",\n        excerpt: \"New computational frameworks demonstrate the ability to process millions of genomic samples efficiently, enabling population-scale studies.\",\n        source: \"science.org\",\n        publishedAt: \"2024-10-22\",\n        included: true\n    },\n    {\n        id: \"s3\",\n        title: \"Clinical Applications of AI in Medicine\",\n        excerpt: \"AI-driven diagnostic tools are being validated in clinical settings, showing promising results for early disease detection.\",\n        source: \"cell.com\",\n        publishedAt: \"2024-09-30\",\n        included: false\n    },\n    {\n        id: \"s4\",\n        title: \"Ethical Considerations in Genomic Research\",\n        excerpt: \"The scientific community discusses the importance of ethical frameworks when dealing with large-scale genetic data.\",\n        source: \"nejm.org\",\n        publishedAt: \"2024-08-14\",\n        included: true\n    },\n    {\n        id: \"s5\",\n        title: \"Future Directions in Precision Medicine\",\n        excerpt: \"Emerging technologies promise to revolutionize personalized treatment approaches based on individual genetic profiles.\",\n        source: \"thelancet.com\",\n        publishedAt: \"2024-07-03\",\n        included: false\n    },\n    {\n        id: \"s6\",\n        title: \"Regulatory Framework for AI in Healthcare\",\n        excerpt: \"Government agencies are developing new guidelines for the approval and monitoring of AI-based medical devices.\",\n        source: \"fda.gov\",\n        publishedAt: \"2024-06-18\",\n        included: true\n    }\n];\n// Mock story generation based on story type\nfunction generateMockStory(storyType, paper, snippets) {\n    const baseStory = {\n        paper,\n        snippets: snippets.filter((s)=>s.included),\n        storyType\n    };\n    switch(storyType){\n        case \"explainer\":\n            return {\n                ...baseStory,\n                sections: [\n                    {\n                        heading: \"Introduction\",\n                        body: \"This research introduces a novel approach to genomic analysis using advanced machine learning techniques. The study addresses the growing need for more accurate and efficient methods in processing large-scale genomic data.\"\n                    },\n                    {\n                        heading: \"Methodology\",\n                        body: \"The researchers developed a new algorithm that combines deep learning with traditional statistical methods. The approach was validated on a dataset of over 10 million genetic variants across diverse populations.\"\n                    },\n                    {\n                        heading: \"Key Findings\",\n                        body: \"The results demonstrate a 12% improvement in accuracy compared to existing methods. The algorithm successfully identified rare variants that were previously missed by conventional approaches.\"\n                    },\n                    {\n                        heading: \"Clinical Implications\",\n                        body: \"These findings have significant implications for precision medicine and personalized treatment strategies. The improved accuracy could lead to better diagnosis and treatment of genetic disorders.\"\n                    }\n                ]\n            };\n        case \"claim_evidence\":\n            return {\n                ...baseStory,\n                claims: [\n                    {\n                        id: \"c1\",\n                        text: \"The new method improves genomic variant detection accuracy by 12%\",\n                        evidence: \"Validated on 10M+ variants across diverse populations (Methods section)\",\n                        confidence: 0.85\n                    },\n                    {\n                        id: \"c2\",\n                        text: \"The algorithm scales efficiently to population-level studies\",\n                        evidence: \"Processed datasets of unprecedented size (Figure 2)\",\n                        confidence: 0.78\n                    },\n                    {\n                        id: \"c3\",\n                        text: \"Clinical validation shows promise for rare disease diagnosis\",\n                        evidence: \"Pilot study with 1,000 patients (Supplementary Materials)\",\n                        confidence: 0.72\n                    }\n                ],\n                glossary: [\n                    {\n                        term: \"Genomic variant\",\n                        definition: \"A difference in DNA sequence between individuals\"\n                    },\n                    {\n                        term: \"Population-scale\",\n                        definition: \"Studies involving large groups of people (thousands to millions)\"\n                    },\n                    {\n                        term: \"Precision medicine\",\n                        definition: \"Medical care tailored to individual characteristics\"\n                    }\n                ]\n            };\n        case \"timeline\":\n            return {\n                ...baseStory,\n                events: [\n                    {\n                        date: \"2020-2022\",\n                        label: \"Initial Development\",\n                        detail: \"Research team developed the core algorithm and conducted preliminary testing\"\n                    },\n                    {\n                        date: \"2023\",\n                        label: \"Large-scale Validation\",\n                        detail: \"Validation study conducted on 10+ million genomic variants\"\n                    },\n                    {\n                        date: \"Early 2024\",\n                        label: \"Clinical Pilot\",\n                        detail: \"First clinical application in rare disease diagnosis\"\n                    },\n                    {\n                        date: \"Current\",\n                        label: \"Publication & Review\",\n                        detail: \"Results published and undergoing peer review process\"\n                    }\n                ]\n            };\n        case \"comparison\":\n            return {\n                ...baseStory,\n                axes: [\n                    \"Method\",\n                    \"Accuracy\",\n                    \"Speed\",\n                    \"Scalability\"\n                ],\n                items: [\n                    {\n                        name: \"Traditional Methods\",\n                        values: {\n                            \"Method\": \"Statistical analysis\",\n                            \"Accuracy\": \"Baseline (100%)\",\n                            \"Speed\": \"Moderate\",\n                            \"Scalability\": \"Limited\"\n                        }\n                    },\n                    {\n                        name: \"New AI Approach\",\n                        values: {\n                            \"Method\": \"Deep learning + statistics\",\n                            \"Accuracy\": \"112% of baseline\",\n                            \"Speed\": \"Fast\",\n                            \"Scalability\": \"Population-scale\"\n                        }\n                    }\n                ]\n            };\n        default:\n            throw new Error(\"Unknown story type: \".concat(storyType));\n    }\n}\nconst handlers = [\n    // Enrich endpoint\n    msw__WEBPACK_IMPORTED_MODULE_0__.http.post(\"/api/enrich\", async (param)=>{\n        let { request } = param;\n        const body = await request.json();\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        const maxSnippets = body.maxSnippets || 6;\n        const selectedSnippets = mockSnippets.slice(0, maxSnippets);\n        return msw__WEBPACK_IMPORTED_MODULE_1__.HttpResponse.json({\n            snippets: selectedSnippets\n        });\n    }),\n    // Generate story endpoint\n    msw__WEBPACK_IMPORTED_MODULE_0__.http.post(\"/api/generate\", async (param)=>{\n        let { request } = param;\n        const body = await request.json();\n        // Simulate longer API delay for story generation\n        await new Promise((resolve)=>setTimeout(resolve, 2000));\n        const story = generateMockStory(body.storyType, body.paper, body.snippets);\n        return msw__WEBPACK_IMPORTED_MODULE_1__.HttpResponse.json({\n            story\n        });\n    }),\n    // Export endpoint\n    msw__WEBPACK_IMPORTED_MODULE_0__.http.post(\"/api/export\", async (param)=>{\n        let { request } = param;\n        const body = await request.json();\n        // Simulate export processing\n        await new Promise((resolve)=>setTimeout(resolve, 1500));\n        const files = [];\n        if (body.formats.includes(\"mdx\")) {\n            files.push({\n                path: \"stories/Example.stories.mdx\",\n                content: generateMDXContent(body.story)\n            });\n        }\n        if (body.formats.includes(\"csf\")) {\n            files.push({\n                path: \"stories/Example.stories.tsx\",\n                content: generateCSFContent(body.story)\n            });\n        }\n        // Add component files\n        files.push({\n            path: \"src/components/Explainer.tsx\",\n            content: generateComponentContent(\"Explainer\")\n        });\n        // Create a mock blob URL (in real implementation, would use JSZip)\n        const zipUrl = \"blob:mock-zip-url\";\n        return msw__WEBPACK_IMPORTED_MODULE_1__.HttpResponse.json({\n            zipUrl,\n            files\n        });\n    })\n];\nfunction generateMDXContent(story) {\n    var _story_paper_title;\n    const paperSlug = ((_story_paper_title = story.paper.title) === null || _story_paper_title === void 0 ? void 0 : _story_paper_title.replace(/[^a-zA-Z0-9]/g, \"_\")) || \"Paper\";\n    return \"import { Meta, Story, Canvas } from '@storybook/blocks';\\nimport { \".concat(story.storyType === \"explainer\" ? \"Explainer\" : \"ClaimEvidence\", \" } from '../src/components/\").concat(story.storyType === \"explainer\" ? \"Explainer\" : \"ClaimEvidence\", \"';\\n\\n<Meta title=\\\"Papers/\").concat(paperSlug, \"/\").concat(story.storyType, '\" />\\n\\n# ').concat(story.paper.title || \"Research Paper\", \"\\n\\n\").concat(story.paper.summary.substring(0, 200), '...\\n\\n<Canvas>\\n  <Story name=\"Default\">\\n    <').concat(story.storyType === \"explainer\" ? \"Explainer\" : \"ClaimEvidence\", \" \\n      \").concat(story.storyType === \"explainer\" ? \"sections={\".concat(JSON.stringify(story.sections, null, 2), \"}\") : \"claims={\".concat(JSON.stringify(story.claims, null, 2), \"}\"), \" \\n    />\\n  </Story>\\n</Canvas>\\n\");\n}\nfunction generateCSFContent(story) {\n    var _story_paper_title;\n    const componentName = story.storyType === \"explainer\" ? \"Explainer\" : \"ClaimEvidence\";\n    const paperSlug = ((_story_paper_title = story.paper.title) === null || _story_paper_title === void 0 ? void 0 : _story_paper_title.replace(/[^a-zA-Z0-9]/g, \"_\")) || \"Paper\";\n    return \"import type { Meta, StoryObj } from '@storybook/react';\\nimport { \".concat(componentName, \" } from '../src/components/\").concat(componentName, \"';\\n\\nconst meta: Meta<typeof \").concat(componentName, \"> = {\\n  title: 'Papers/\").concat(paperSlug, \"/\").concat(componentName, \"',\\n  component: \").concat(componentName, \",\\n};\\nexport default meta;\\n\\nexport const Default: StoryObj<typeof \").concat(componentName, \"> = {\\n  args: {\\n    \").concat(story.storyType === \"explainer\" ? \"sections: \".concat(JSON.stringify(story.sections, null, 4)) : \"claims: \".concat(JSON.stringify(story.claims, null, 4)), \"\\n  },\\n};\\n\");\n}\nfunction generateComponentContent(componentName) {\n    return \"import React from 'react';\\n\\ninterface \".concat(componentName, \"Props {\\n  sections: { heading: string; body: string; }[];\\n}\\n\\nexport const \").concat(componentName, \": React.FC<\").concat(componentName, 'Props> = ({ sections }) => {\\n  return (\\n    <div className=\"max-w-4xl mx-auto p-6\">\\n      {sections.map((section, index) => (\\n        <div key={index} className=\"mb-8\">\\n          <h2 className=\"text-2xl font-bold mb-4\">{section.heading}</h2>\\n          <p className=\"text-gray-700 leading-relaxed\">{section.body}</p>\\n        </div>\\n      ))}\\n    </div>\\n  );\\n};\\n');\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/mocks/handlers.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@bundled-es-modules/cookie/index-esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/@bundled-es-modules/cookie/index-esm.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ source_default; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/cookie/index.js\nvar require_cookie = __commonJS({\n  \"node_modules/cookie/index.js\"(exports) {\n    \"use strict\";\n    exports.parse = parse;\n    exports.serialize = serialize;\n    var __toString = Object.prototype.toString;\n    var __hasOwnProperty = Object.prototype.hasOwnProperty;\n    var cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n    var cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n    var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n    var pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n    function parse(str, opt) {\n      if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var obj = {};\n      var len = str.length;\n      if (len < 2) return obj;\n      var dec = opt && opt.decode || decode;\n      var index = 0;\n      var eqIdx = 0;\n      var endIdx = 0;\n      do {\n        eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) break;\n        endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n          endIdx = len;\n        } else if (eqIdx > endIdx) {\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n          continue;\n        }\n        var keyStartIdx = startIndex(str, index, eqIdx);\n        var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        var key = str.slice(keyStartIdx, keyEndIdx);\n        if (!__hasOwnProperty.call(obj, key)) {\n          var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n          var valEndIdx = endIndex(str, endIdx, valStartIdx);\n          if (str.charCodeAt(valStartIdx) === 34 && str.charCodeAt(valEndIdx - 1) === 34) {\n            valStartIdx++;\n            valEndIdx--;\n          }\n          var val = str.slice(valStartIdx, valEndIdx);\n          obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n      } while (index < len);\n      return obj;\n    }\n    function startIndex(str, index, max) {\n      do {\n        var code = str.charCodeAt(index);\n        if (code !== 32 && code !== 9) return index;\n      } while (++index < max);\n      return max;\n    }\n    function endIndex(str, index, min) {\n      while (index > min) {\n        var code = str.charCodeAt(--index);\n        if (code !== 32 && code !== 9) return index + 1;\n      }\n      return min;\n    }\n    function serialize(name, val, opt) {\n      var enc = opt && opt.encode || encodeURIComponent;\n      if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var value = enc(val);\n      if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var str = name + \"=\" + value;\n      if (!opt) return str;\n      if (null != opt.maxAge) {\n        var maxAge = Math.floor(opt.maxAge);\n        if (!isFinite(maxAge)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + maxAge;\n      }\n      if (opt.domain) {\n        if (!domainValueRegExp.test(opt.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n      }\n      if (opt.path) {\n        if (!pathValueRegExp.test(opt.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n      }\n      if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n      }\n      if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n      if (opt.secure) {\n        str += \"; Secure\";\n      }\n      if (opt.partitioned) {\n        str += \"; Partitioned\";\n      }\n      if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch (priority) {\n          case \"low\":\n            str += \"; Priority=Low\";\n            break;\n          case \"medium\":\n            str += \"; Priority=Medium\";\n            break;\n          case \"high\":\n            str += \"; Priority=High\";\n            break;\n          default:\n            throw new TypeError(\"option priority is invalid\");\n        }\n      }\n      if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n          case true:\n            str += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            str += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            str += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            str += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return str;\n    }\n    function decode(str) {\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n    }\n    function isDate(val) {\n      return __toString.call(val) === \"[object Date]\";\n    }\n    function tryDecode(str, decode2) {\n      try {\n        return decode2(str);\n      } catch (e) {\n        return str;\n      }\n    }\n  }\n});\n\n// source.js\nvar import_cookie = __toESM(require_cookie(), 1);\nvar source_default = import_cookie.default;\n\n/*! Bundled license information:\n\ncookie/index.js:\n  (*!\n   * cookie\n   * Copyright(c) 2012-2014 Roman Shtylman\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@bundled-es-modules/cookie/index-esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@bundled-es-modules/statuses/index-esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bundled-es-modules/statuses/index-esm.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ source_default; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/statuses/codes.json\nvar require_codes = __commonJS({\n  \"node_modules/statuses/codes.json\"(exports, module) {\n    module.exports = {\n      \"100\": \"Continue\",\n      \"101\": \"Switching Protocols\",\n      \"102\": \"Processing\",\n      \"103\": \"Early Hints\",\n      \"200\": \"OK\",\n      \"201\": \"Created\",\n      \"202\": \"Accepted\",\n      \"203\": \"Non-Authoritative Information\",\n      \"204\": \"No Content\",\n      \"205\": \"Reset Content\",\n      \"206\": \"Partial Content\",\n      \"207\": \"Multi-Status\",\n      \"208\": \"Already Reported\",\n      \"226\": \"IM Used\",\n      \"300\": \"Multiple Choices\",\n      \"301\": \"Moved Permanently\",\n      \"302\": \"Found\",\n      \"303\": \"See Other\",\n      \"304\": \"Not Modified\",\n      \"305\": \"Use Proxy\",\n      \"307\": \"Temporary Redirect\",\n      \"308\": \"Permanent Redirect\",\n      \"400\": \"Bad Request\",\n      \"401\": \"Unauthorized\",\n      \"402\": \"Payment Required\",\n      \"403\": \"Forbidden\",\n      \"404\": \"Not Found\",\n      \"405\": \"Method Not Allowed\",\n      \"406\": \"Not Acceptable\",\n      \"407\": \"Proxy Authentication Required\",\n      \"408\": \"Request Timeout\",\n      \"409\": \"Conflict\",\n      \"410\": \"Gone\",\n      \"411\": \"Length Required\",\n      \"412\": \"Precondition Failed\",\n      \"413\": \"Payload Too Large\",\n      \"414\": \"URI Too Long\",\n      \"415\": \"Unsupported Media Type\",\n      \"416\": \"Range Not Satisfiable\",\n      \"417\": \"Expectation Failed\",\n      \"418\": \"I'm a Teapot\",\n      \"421\": \"Misdirected Request\",\n      \"422\": \"Unprocessable Entity\",\n      \"423\": \"Locked\",\n      \"424\": \"Failed Dependency\",\n      \"425\": \"Too Early\",\n      \"426\": \"Upgrade Required\",\n      \"428\": \"Precondition Required\",\n      \"429\": \"Too Many Requests\",\n      \"431\": \"Request Header Fields Too Large\",\n      \"451\": \"Unavailable For Legal Reasons\",\n      \"500\": \"Internal Server Error\",\n      \"501\": \"Not Implemented\",\n      \"502\": \"Bad Gateway\",\n      \"503\": \"Service Unavailable\",\n      \"504\": \"Gateway Timeout\",\n      \"505\": \"HTTP Version Not Supported\",\n      \"506\": \"Variant Also Negotiates\",\n      \"507\": \"Insufficient Storage\",\n      \"508\": \"Loop Detected\",\n      \"509\": \"Bandwidth Limit Exceeded\",\n      \"510\": \"Not Extended\",\n      \"511\": \"Network Authentication Required\"\n    };\n  }\n});\n\n// node_modules/statuses/index.js\nvar require_statuses = __commonJS({\n  \"node_modules/statuses/index.js\"(exports, module) {\n    \"use strict\";\n    var codes = require_codes();\n    module.exports = status2;\n    status2.message = codes;\n    status2.code = createMessageToStatusCodeMap(codes);\n    status2.codes = createStatusCodeList(codes);\n    status2.redirect = {\n      300: true,\n      301: true,\n      302: true,\n      303: true,\n      305: true,\n      307: true,\n      308: true\n    };\n    status2.empty = {\n      204: true,\n      205: true,\n      304: true\n    };\n    status2.retry = {\n      502: true,\n      503: true,\n      504: true\n    };\n    function createMessageToStatusCodeMap(codes2) {\n      var map = {};\n      Object.keys(codes2).forEach(function forEachCode(code) {\n        var message = codes2[code];\n        var status3 = Number(code);\n        map[message.toLowerCase()] = status3;\n      });\n      return map;\n    }\n    function createStatusCodeList(codes2) {\n      return Object.keys(codes2).map(function mapCode(code) {\n        return Number(code);\n      });\n    }\n    function getStatusCode(message) {\n      var msg = message.toLowerCase();\n      if (!Object.prototype.hasOwnProperty.call(status2.code, msg)) {\n        throw new Error('invalid status message: \"' + message + '\"');\n      }\n      return status2.code[msg];\n    }\n    function getStatusMessage(code) {\n      if (!Object.prototype.hasOwnProperty.call(status2.message, code)) {\n        throw new Error(\"invalid status code: \" + code);\n      }\n      return status2.message[code];\n    }\n    function status2(code) {\n      if (typeof code === \"number\") {\n        return getStatusMessage(code);\n      }\n      if (typeof code !== \"string\") {\n        throw new TypeError(\"code must be a number or string\");\n      }\n      var n = parseInt(code, 10);\n      if (!isNaN(n)) {\n        return getStatusMessage(n);\n      }\n      return getStatusCode(code);\n    }\n  }\n});\n\n// source.js\nvar import_statuses = __toESM(require_statuses(), 1);\nvar source_default = import_statuses.default;\n\n/*! Bundled license information:\n\nstatuses/index.js:\n  (*!\n   * statuses\n   * Copyright(c) 2014 Jonathan Ong\n   * Copyright(c) 2016 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYnVuZGxlZC1lcy1tb2R1bGVzL3N0YXR1c2VzL2luZGV4LWVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsYUFBYTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsOEJBQThCO0FBQ3ZHO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFHRTtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BidW5kbGVkLWVzLW1vZHVsZXMvc3RhdHVzZXMvaW5kZXgtZXNtLmpzPzBlYjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2dldFByb3RvT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX2NvbW1vbkpTID0gKGNiLCBtb2QpID0+IGZ1bmN0aW9uIF9fcmVxdWlyZSgpIHtcbiAgcmV0dXJuIG1vZCB8fCAoMCwgY2JbX19nZXRPd25Qcm9wTmFtZXMoY2IpWzBdXSkoKG1vZCA9IHsgZXhwb3J0czoge30gfSkuZXhwb3J0cywgbW9kKSwgbW9kLmV4cG9ydHM7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fdG9FU00gPSAobW9kLCBpc05vZGVNb2RlLCB0YXJnZXQpID0+ICh0YXJnZXQgPSBtb2QgIT0gbnVsbCA/IF9fY3JlYXRlKF9fZ2V0UHJvdG9PZihtb2QpKSA6IHt9LCBfX2NvcHlQcm9wcyhcbiAgLy8gSWYgdGhlIGltcG9ydGVyIGlzIGluIG5vZGUgY29tcGF0aWJpbGl0eSBtb2RlIG9yIHRoaXMgaXMgbm90IGFuIEVTTVxuICAvLyBmaWxlIHRoYXQgaGFzIGJlZW4gY29udmVydGVkIHRvIGEgQ29tbW9uSlMgZmlsZSB1c2luZyBhIEJhYmVsLVxuICAvLyBjb21wYXRpYmxlIHRyYW5zZm9ybSAoaS5lLiBcIl9fZXNNb2R1bGVcIiBoYXMgbm90IGJlZW4gc2V0KSwgdGhlbiBzZXRcbiAgLy8gXCJkZWZhdWx0XCIgdG8gdGhlIENvbW1vbkpTIFwibW9kdWxlLmV4cG9ydHNcIiBmb3Igbm9kZSBjb21wYXRpYmlsaXR5LlxuICBpc05vZGVNb2RlIHx8ICFtb2QgfHwgIW1vZC5fX2VzTW9kdWxlID8gX19kZWZQcm9wKHRhcmdldCwgXCJkZWZhdWx0XCIsIHsgdmFsdWU6IG1vZCwgZW51bWVyYWJsZTogdHJ1ZSB9KSA6IHRhcmdldCxcbiAgbW9kXG4pKTtcblxuLy8gbm9kZV9tb2R1bGVzL3N0YXR1c2VzL2NvZGVzLmpzb25cbnZhciByZXF1aXJlX2NvZGVzID0gX19jb21tb25KUyh7XG4gIFwibm9kZV9tb2R1bGVzL3N0YXR1c2VzL2NvZGVzLmpzb25cIihleHBvcnRzLCBtb2R1bGUpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAgIFwiMTAwXCI6IFwiQ29udGludWVcIixcbiAgICAgIFwiMTAxXCI6IFwiU3dpdGNoaW5nIFByb3RvY29sc1wiLFxuICAgICAgXCIxMDJcIjogXCJQcm9jZXNzaW5nXCIsXG4gICAgICBcIjEwM1wiOiBcIkVhcmx5IEhpbnRzXCIsXG4gICAgICBcIjIwMFwiOiBcIk9LXCIsXG4gICAgICBcIjIwMVwiOiBcIkNyZWF0ZWRcIixcbiAgICAgIFwiMjAyXCI6IFwiQWNjZXB0ZWRcIixcbiAgICAgIFwiMjAzXCI6IFwiTm9uLUF1dGhvcml0YXRpdmUgSW5mb3JtYXRpb25cIixcbiAgICAgIFwiMjA0XCI6IFwiTm8gQ29udGVudFwiLFxuICAgICAgXCIyMDVcIjogXCJSZXNldCBDb250ZW50XCIsXG4gICAgICBcIjIwNlwiOiBcIlBhcnRpYWwgQ29udGVudFwiLFxuICAgICAgXCIyMDdcIjogXCJNdWx0aS1TdGF0dXNcIixcbiAgICAgIFwiMjA4XCI6IFwiQWxyZWFkeSBSZXBvcnRlZFwiLFxuICAgICAgXCIyMjZcIjogXCJJTSBVc2VkXCIsXG4gICAgICBcIjMwMFwiOiBcIk11bHRpcGxlIENob2ljZXNcIixcbiAgICAgIFwiMzAxXCI6IFwiTW92ZWQgUGVybWFuZW50bHlcIixcbiAgICAgIFwiMzAyXCI6IFwiRm91bmRcIixcbiAgICAgIFwiMzAzXCI6IFwiU2VlIE90aGVyXCIsXG4gICAgICBcIjMwNFwiOiBcIk5vdCBNb2RpZmllZFwiLFxuICAgICAgXCIzMDVcIjogXCJVc2UgUHJveHlcIixcbiAgICAgIFwiMzA3XCI6IFwiVGVtcG9yYXJ5IFJlZGlyZWN0XCIsXG4gICAgICBcIjMwOFwiOiBcIlBlcm1hbmVudCBSZWRpcmVjdFwiLFxuICAgICAgXCI0MDBcIjogXCJCYWQgUmVxdWVzdFwiLFxuICAgICAgXCI0MDFcIjogXCJVbmF1dGhvcml6ZWRcIixcbiAgICAgIFwiNDAyXCI6IFwiUGF5bWVudCBSZXF1aXJlZFwiLFxuICAgICAgXCI0MDNcIjogXCJGb3JiaWRkZW5cIixcbiAgICAgIFwiNDA0XCI6IFwiTm90IEZvdW5kXCIsXG4gICAgICBcIjQwNVwiOiBcIk1ldGhvZCBOb3QgQWxsb3dlZFwiLFxuICAgICAgXCI0MDZcIjogXCJOb3QgQWNjZXB0YWJsZVwiLFxuICAgICAgXCI0MDdcIjogXCJQcm94eSBBdXRoZW50aWNhdGlvbiBSZXF1aXJlZFwiLFxuICAgICAgXCI0MDhcIjogXCJSZXF1ZXN0IFRpbWVvdXRcIixcbiAgICAgIFwiNDA5XCI6IFwiQ29uZmxpY3RcIixcbiAgICAgIFwiNDEwXCI6IFwiR29uZVwiLFxuICAgICAgXCI0MTFcIjogXCJMZW5ndGggUmVxdWlyZWRcIixcbiAgICAgIFwiNDEyXCI6IFwiUHJlY29uZGl0aW9uIEZhaWxlZFwiLFxuICAgICAgXCI0MTNcIjogXCJQYXlsb2FkIFRvbyBMYXJnZVwiLFxuICAgICAgXCI0MTRcIjogXCJVUkkgVG9vIExvbmdcIixcbiAgICAgIFwiNDE1XCI6IFwiVW5zdXBwb3J0ZWQgTWVkaWEgVHlwZVwiLFxuICAgICAgXCI0MTZcIjogXCJSYW5nZSBOb3QgU2F0aXNmaWFibGVcIixcbiAgICAgIFwiNDE3XCI6IFwiRXhwZWN0YXRpb24gRmFpbGVkXCIsXG4gICAgICBcIjQxOFwiOiBcIkknbSBhIFRlYXBvdFwiLFxuICAgICAgXCI0MjFcIjogXCJNaXNkaXJlY3RlZCBSZXF1ZXN0XCIsXG4gICAgICBcIjQyMlwiOiBcIlVucHJvY2Vzc2FibGUgRW50aXR5XCIsXG4gICAgICBcIjQyM1wiOiBcIkxvY2tlZFwiLFxuICAgICAgXCI0MjRcIjogXCJGYWlsZWQgRGVwZW5kZW5jeVwiLFxuICAgICAgXCI0MjVcIjogXCJUb28gRWFybHlcIixcbiAgICAgIFwiNDI2XCI6IFwiVXBncmFkZSBSZXF1aXJlZFwiLFxuICAgICAgXCI0MjhcIjogXCJQcmVjb25kaXRpb24gUmVxdWlyZWRcIixcbiAgICAgIFwiNDI5XCI6IFwiVG9vIE1hbnkgUmVxdWVzdHNcIixcbiAgICAgIFwiNDMxXCI6IFwiUmVxdWVzdCBIZWFkZXIgRmllbGRzIFRvbyBMYXJnZVwiLFxuICAgICAgXCI0NTFcIjogXCJVbmF2YWlsYWJsZSBGb3IgTGVnYWwgUmVhc29uc1wiLFxuICAgICAgXCI1MDBcIjogXCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIixcbiAgICAgIFwiNTAxXCI6IFwiTm90IEltcGxlbWVudGVkXCIsXG4gICAgICBcIjUwMlwiOiBcIkJhZCBHYXRld2F5XCIsXG4gICAgICBcIjUwM1wiOiBcIlNlcnZpY2UgVW5hdmFpbGFibGVcIixcbiAgICAgIFwiNTA0XCI6IFwiR2F0ZXdheSBUaW1lb3V0XCIsXG4gICAgICBcIjUwNVwiOiBcIkhUVFAgVmVyc2lvbiBOb3QgU3VwcG9ydGVkXCIsXG4gICAgICBcIjUwNlwiOiBcIlZhcmlhbnQgQWxzbyBOZWdvdGlhdGVzXCIsXG4gICAgICBcIjUwN1wiOiBcIkluc3VmZmljaWVudCBTdG9yYWdlXCIsXG4gICAgICBcIjUwOFwiOiBcIkxvb3AgRGV0ZWN0ZWRcIixcbiAgICAgIFwiNTA5XCI6IFwiQmFuZHdpZHRoIExpbWl0IEV4Y2VlZGVkXCIsXG4gICAgICBcIjUxMFwiOiBcIk5vdCBFeHRlbmRlZFwiLFxuICAgICAgXCI1MTFcIjogXCJOZXR3b3JrIEF1dGhlbnRpY2F0aW9uIFJlcXVpcmVkXCJcbiAgICB9O1xuICB9XG59KTtcblxuLy8gbm9kZV9tb2R1bGVzL3N0YXR1c2VzL2luZGV4LmpzXG52YXIgcmVxdWlyZV9zdGF0dXNlcyA9IF9fY29tbW9uSlMoe1xuICBcIm5vZGVfbW9kdWxlcy9zdGF0dXNlcy9pbmRleC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIHZhciBjb2RlcyA9IHJlcXVpcmVfY29kZXMoKTtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHN0YXR1czI7XG4gICAgc3RhdHVzMi5tZXNzYWdlID0gY29kZXM7XG4gICAgc3RhdHVzMi5jb2RlID0gY3JlYXRlTWVzc2FnZVRvU3RhdHVzQ29kZU1hcChjb2Rlcyk7XG4gICAgc3RhdHVzMi5jb2RlcyA9IGNyZWF0ZVN0YXR1c0NvZGVMaXN0KGNvZGVzKTtcbiAgICBzdGF0dXMyLnJlZGlyZWN0ID0ge1xuICAgICAgMzAwOiB0cnVlLFxuICAgICAgMzAxOiB0cnVlLFxuICAgICAgMzAyOiB0cnVlLFxuICAgICAgMzAzOiB0cnVlLFxuICAgICAgMzA1OiB0cnVlLFxuICAgICAgMzA3OiB0cnVlLFxuICAgICAgMzA4OiB0cnVlXG4gICAgfTtcbiAgICBzdGF0dXMyLmVtcHR5ID0ge1xuICAgICAgMjA0OiB0cnVlLFxuICAgICAgMjA1OiB0cnVlLFxuICAgICAgMzA0OiB0cnVlXG4gICAgfTtcbiAgICBzdGF0dXMyLnJldHJ5ID0ge1xuICAgICAgNTAyOiB0cnVlLFxuICAgICAgNTAzOiB0cnVlLFxuICAgICAgNTA0OiB0cnVlXG4gICAgfTtcbiAgICBmdW5jdGlvbiBjcmVhdGVNZXNzYWdlVG9TdGF0dXNDb2RlTWFwKGNvZGVzMikge1xuICAgICAgdmFyIG1hcCA9IHt9O1xuICAgICAgT2JqZWN0LmtleXMoY29kZXMyKS5mb3JFYWNoKGZ1bmN0aW9uIGZvckVhY2hDb2RlKGNvZGUpIHtcbiAgICAgICAgdmFyIG1lc3NhZ2UgPSBjb2RlczJbY29kZV07XG4gICAgICAgIHZhciBzdGF0dXMzID0gTnVtYmVyKGNvZGUpO1xuICAgICAgICBtYXBbbWVzc2FnZS50b0xvd2VyQ2FzZSgpXSA9IHN0YXR1czM7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXA7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZVN0YXR1c0NvZGVMaXN0KGNvZGVzMikge1xuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGNvZGVzMikubWFwKGZ1bmN0aW9uIG1hcENvZGUoY29kZSkge1xuICAgICAgICByZXR1cm4gTnVtYmVyKGNvZGUpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldFN0YXR1c0NvZGUobWVzc2FnZSkge1xuICAgICAgdmFyIG1zZyA9IG1lc3NhZ2UudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHN0YXR1czIuY29kZSwgbXNnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc3RhdHVzIG1lc3NhZ2U6IFwiJyArIG1lc3NhZ2UgKyAnXCInKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzdGF0dXMyLmNvZGVbbXNnXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0U3RhdHVzTWVzc2FnZShjb2RlKSB7XG4gICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzdGF0dXMyLm1lc3NhZ2UsIGNvZGUpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgc3RhdHVzIGNvZGU6IFwiICsgY29kZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc3RhdHVzMi5tZXNzYWdlW2NvZGVdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdGF0dXMyKGNvZGUpIHtcbiAgICAgIGlmICh0eXBlb2YgY29kZSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gZ2V0U3RhdHVzTWVzc2FnZShjb2RlKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgY29kZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY29kZSBtdXN0IGJlIGEgbnVtYmVyIG9yIHN0cmluZ1wiKTtcbiAgICAgIH1cbiAgICAgIHZhciBuID0gcGFyc2VJbnQoY29kZSwgMTApO1xuICAgICAgaWYgKCFpc05hTihuKSkge1xuICAgICAgICByZXR1cm4gZ2V0U3RhdHVzTWVzc2FnZShuKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBnZXRTdGF0dXNDb2RlKGNvZGUpO1xuICAgIH1cbiAgfVxufSk7XG5cbi8vIHNvdXJjZS5qc1xudmFyIGltcG9ydF9zdGF0dXNlcyA9IF9fdG9FU00ocmVxdWlyZV9zdGF0dXNlcygpLCAxKTtcbnZhciBzb3VyY2VfZGVmYXVsdCA9IGltcG9ydF9zdGF0dXNlcy5kZWZhdWx0O1xuZXhwb3J0IHtcbiAgc291cmNlX2RlZmF1bHQgYXMgZGVmYXVsdFxufTtcbi8qISBCdW5kbGVkIGxpY2Vuc2UgaW5mb3JtYXRpb246XG5cbnN0YXR1c2VzL2luZGV4LmpzOlxuICAoKiFcbiAgICogc3RhdHVzZXNcbiAgICogQ29weXJpZ2h0KGMpIDIwMTQgSm9uYXRoYW4gT25nXG4gICAqIENvcHlyaWdodChjKSAyMDE2IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gICAqIE1JVCBMaWNlbnNlZFxuICAgKilcbiovXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@bundled-es-modules/statuses/index-esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-3RXCRGL2.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-3RXCRGL2.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchResponse: function() { return /* binding */ FetchResponse; },\n/* harmony export */   IS_PATCHED_MODULE: function() { return /* binding */ IS_PATCHED_MODULE; },\n/* harmony export */   canParseUrl: function() { return /* binding */ canParseUrl; },\n/* harmony export */   getRawRequest: function() { return /* binding */ getRawRequest; },\n/* harmony export */   setRawRequest: function() { return /* binding */ setRawRequest; }\n/* harmony export */ });\n// src/glossary.ts\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\n\n// src/utils/canParseUrl.ts\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\n\n// src/utils/getValueBySymbol.ts\nfunction getValueBySymbol(symbolName, source) {\n  const ownSymbols = Object.getOwnPropertySymbols(source);\n  const symbol = ownSymbols.find((symbol2) => {\n    return symbol2.description === symbolName;\n  });\n  if (symbol) {\n    return Reflect.get(source, symbol);\n  }\n  return;\n}\n\n// src/utils/fetchUtils.ts\nvar _FetchResponse = class extends Response {\n  static isConfigurableStatusCode(status) {\n    return status >= 200 && status <= 599;\n  }\n  static isRedirectResponse(status) {\n    return _FetchResponse.STATUS_CODES_WITH_REDIRECT.includes(status);\n  }\n  /**\n   * Returns a boolean indicating whether the given response status\n   * code represents a response that can have a body.\n   */\n  static isResponseWithBody(status) {\n    return !_FetchResponse.STATUS_CODES_WITHOUT_BODY.includes(status);\n  }\n  static setUrl(url, response) {\n    if (!url || url === \"about:\" || !canParseUrl(url)) {\n      return;\n    }\n    const state = getValueBySymbol(\"state\", response);\n    if (state) {\n      state.urlList.push(new URL(url));\n    } else {\n      Object.defineProperty(response, \"url\", {\n        value: url,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n    }\n  }\n  /**\n   * Parses the given raw HTTP headers into a Fetch API `Headers` instance.\n   */\n  static parseRawHeaders(rawHeaders) {\n    const headers = new Headers();\n    for (let line = 0; line < rawHeaders.length; line += 2) {\n      headers.append(rawHeaders[line], rawHeaders[line + 1]);\n    }\n    return headers;\n  }\n  constructor(body, init = {}) {\n    var _a;\n    const status = (_a = init.status) != null ? _a : 200;\n    const safeStatus = _FetchResponse.isConfigurableStatusCode(status) ? status : 200;\n    const finalBody = _FetchResponse.isResponseWithBody(status) ? body : null;\n    super(finalBody, {\n      status: safeStatus,\n      statusText: init.statusText,\n      headers: init.headers\n    });\n    if (status !== safeStatus) {\n      const state = getValueBySymbol(\"state\", this);\n      if (state) {\n        state.status = status;\n      } else {\n        Object.defineProperty(this, \"status\", {\n          value: status,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n      }\n    }\n    _FetchResponse.setUrl(init.url, this);\n  }\n};\nvar FetchResponse = _FetchResponse;\n/**\n * Response status codes for responses that cannot have body.\n * @see https://fetch.spec.whatwg.org/#statuses\n */\nFetchResponse.STATUS_CODES_WITHOUT_BODY = [101, 103, 204, 205, 304];\nFetchResponse.STATUS_CODES_WITH_REDIRECT = [301, 302, 303, 307, 308];\n\n// src/getRawRequest.ts\nvar kRawRequest = Symbol(\"kRawRequest\");\nfunction getRawRequest(request) {\n  return Reflect.get(request, kRawRequest);\n}\nfunction setRawRequest(request, rawRequest) {\n  Reflect.set(request, kRawRequest, rawRequest);\n}\n\n\n//# sourceMappingURL=chunk-3RXCRGL2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLTNSWENSR0wyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMEJBQTBCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFRRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLTNSWENSR0wyLm1qcz9mYzU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9nbG9zc2FyeS50c1xudmFyIElTX1BBVENIRURfTU9EVUxFID0gU3ltYm9sKFwiaXNQYXRjaGVkTW9kdWxlXCIpO1xuXG4vLyBzcmMvdXRpbHMvY2FuUGFyc2VVcmwudHNcbmZ1bmN0aW9uIGNhblBhcnNlVXJsKHVybCkge1xuICB0cnkge1xuICAgIG5ldyBVUkwodXJsKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoX2Vycm9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8vIHNyYy91dGlscy9nZXRWYWx1ZUJ5U3ltYm9sLnRzXG5mdW5jdGlvbiBnZXRWYWx1ZUJ5U3ltYm9sKHN5bWJvbE5hbWUsIHNvdXJjZSkge1xuICBjb25zdCBvd25TeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpO1xuICBjb25zdCBzeW1ib2wgPSBvd25TeW1ib2xzLmZpbmQoKHN5bWJvbDIpID0+IHtcbiAgICByZXR1cm4gc3ltYm9sMi5kZXNjcmlwdGlvbiA9PT0gc3ltYm9sTmFtZTtcbiAgfSk7XG4gIGlmIChzeW1ib2wpIHtcbiAgICByZXR1cm4gUmVmbGVjdC5nZXQoc291cmNlLCBzeW1ib2wpO1xuICB9XG4gIHJldHVybjtcbn1cblxuLy8gc3JjL3V0aWxzL2ZldGNoVXRpbHMudHNcbnZhciBfRmV0Y2hSZXNwb25zZSA9IGNsYXNzIGV4dGVuZHMgUmVzcG9uc2Uge1xuICBzdGF0aWMgaXNDb25maWd1cmFibGVTdGF0dXNDb2RlKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8PSA1OTk7XG4gIH1cbiAgc3RhdGljIGlzUmVkaXJlY3RSZXNwb25zZShzdGF0dXMpIHtcbiAgICByZXR1cm4gX0ZldGNoUmVzcG9uc2UuU1RBVFVTX0NPREVTX1dJVEhfUkVESVJFQ1QuaW5jbHVkZXMoc3RhdHVzKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBnaXZlbiByZXNwb25zZSBzdGF0dXNcbiAgICogY29kZSByZXByZXNlbnRzIGEgcmVzcG9uc2UgdGhhdCBjYW4gaGF2ZSBhIGJvZHkuXG4gICAqL1xuICBzdGF0aWMgaXNSZXNwb25zZVdpdGhCb2R5KHN0YXR1cykge1xuICAgIHJldHVybiAhX0ZldGNoUmVzcG9uc2UuU1RBVFVTX0NPREVTX1dJVEhPVVRfQk9EWS5pbmNsdWRlcyhzdGF0dXMpO1xuICB9XG4gIHN0YXRpYyBzZXRVcmwodXJsLCByZXNwb25zZSkge1xuICAgIGlmICghdXJsIHx8IHVybCA9PT0gXCJhYm91dDpcIiB8fCAhY2FuUGFyc2VVcmwodXJsKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzdGF0ZSA9IGdldFZhbHVlQnlTeW1ib2woXCJzdGF0ZVwiLCByZXNwb25zZSk7XG4gICAgaWYgKHN0YXRlKSB7XG4gICAgICBzdGF0ZS51cmxMaXN0LnB1c2gobmV3IFVSTCh1cmwpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3BvbnNlLCBcInVybFwiLCB7XG4gICAgICAgIHZhbHVlOiB1cmwsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgd3JpdGFibGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFBhcnNlcyB0aGUgZ2l2ZW4gcmF3IEhUVFAgaGVhZGVycyBpbnRvIGEgRmV0Y2ggQVBJIGBIZWFkZXJzYCBpbnN0YW5jZS5cbiAgICovXG4gIHN0YXRpYyBwYXJzZVJhd0hlYWRlcnMocmF3SGVhZGVycykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgIGZvciAobGV0IGxpbmUgPSAwOyBsaW5lIDwgcmF3SGVhZGVycy5sZW5ndGg7IGxpbmUgKz0gMikge1xuICAgICAgaGVhZGVycy5hcHBlbmQocmF3SGVhZGVyc1tsaW5lXSwgcmF3SGVhZGVyc1tsaW5lICsgMV0pO1xuICAgIH1cbiAgICByZXR1cm4gaGVhZGVycztcbiAgfVxuICBjb25zdHJ1Y3Rvcihib2R5LCBpbml0ID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc3RhdHVzID0gKF9hID0gaW5pdC5zdGF0dXMpICE9IG51bGwgPyBfYSA6IDIwMDtcbiAgICBjb25zdCBzYWZlU3RhdHVzID0gX0ZldGNoUmVzcG9uc2UuaXNDb25maWd1cmFibGVTdGF0dXNDb2RlKHN0YXR1cykgPyBzdGF0dXMgOiAyMDA7XG4gICAgY29uc3QgZmluYWxCb2R5ID0gX0ZldGNoUmVzcG9uc2UuaXNSZXNwb25zZVdpdGhCb2R5KHN0YXR1cykgPyBib2R5IDogbnVsbDtcbiAgICBzdXBlcihmaW5hbEJvZHksIHtcbiAgICAgIHN0YXR1czogc2FmZVN0YXR1cyxcbiAgICAgIHN0YXR1c1RleHQ6IGluaXQuc3RhdHVzVGV4dCxcbiAgICAgIGhlYWRlcnM6IGluaXQuaGVhZGVyc1xuICAgIH0pO1xuICAgIGlmIChzdGF0dXMgIT09IHNhZmVTdGF0dXMpIHtcbiAgICAgIGNvbnN0IHN0YXRlID0gZ2V0VmFsdWVCeVN5bWJvbChcInN0YXRlXCIsIHRoaXMpO1xuICAgICAgaWYgKHN0YXRlKSB7XG4gICAgICAgIHN0YXRlLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInN0YXR1c1wiLCB7XG4gICAgICAgICAgdmFsdWU6IHN0YXR1cyxcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICB3cml0YWJsZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIF9GZXRjaFJlc3BvbnNlLnNldFVybChpbml0LnVybCwgdGhpcyk7XG4gIH1cbn07XG52YXIgRmV0Y2hSZXNwb25zZSA9IF9GZXRjaFJlc3BvbnNlO1xuLyoqXG4gKiBSZXNwb25zZSBzdGF0dXMgY29kZXMgZm9yIHJlc3BvbnNlcyB0aGF0IGNhbm5vdCBoYXZlIGJvZHkuXG4gKiBAc2VlIGh0dHBzOi8vZmV0Y2guc3BlYy53aGF0d2cub3JnLyNzdGF0dXNlc1xuICovXG5GZXRjaFJlc3BvbnNlLlNUQVRVU19DT0RFU19XSVRIT1VUX0JPRFkgPSBbMTAxLCAxMDMsIDIwNCwgMjA1LCAzMDRdO1xuRmV0Y2hSZXNwb25zZS5TVEFUVVNfQ09ERVNfV0lUSF9SRURJUkVDVCA9IFszMDEsIDMwMiwgMzAzLCAzMDcsIDMwOF07XG5cbi8vIHNyYy9nZXRSYXdSZXF1ZXN0LnRzXG52YXIga1Jhd1JlcXVlc3QgPSBTeW1ib2woXCJrUmF3UmVxdWVzdFwiKTtcbmZ1bmN0aW9uIGdldFJhd1JlcXVlc3QocmVxdWVzdCkge1xuICByZXR1cm4gUmVmbGVjdC5nZXQocmVxdWVzdCwga1Jhd1JlcXVlc3QpO1xufVxuZnVuY3Rpb24gc2V0UmF3UmVxdWVzdChyZXF1ZXN0LCByYXdSZXF1ZXN0KSB7XG4gIFJlZmxlY3Quc2V0KHJlcXVlc3QsIGtSYXdSZXF1ZXN0LCByYXdSZXF1ZXN0KTtcbn1cblxuZXhwb3J0IHtcbiAgSVNfUEFUQ0hFRF9NT0RVTEUsXG4gIGNhblBhcnNlVXJsLFxuICBGZXRjaFJlc3BvbnNlLFxuICBnZXRSYXdSZXF1ZXN0LFxuICBzZXRSYXdSZXF1ZXN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstM1JYQ1JHTDIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-3RXCRGL2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBuffer: function() { return /* binding */ decodeBuffer; },\n/* harmony export */   encodeBuffer: function() { return /* binding */ encodeBuffer; },\n/* harmony export */   toArrayBuffer: function() { return /* binding */ toArrayBuffer; }\n/* harmony export */ });\n// src/utils/bufferUtils.ts\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n\n//# sourceMappingURL=chunk-6HYIRFX2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLTZIWUlSRlgyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBTUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay02SFlJUkZYMi5tanM/ZWU5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvYnVmZmVyVXRpbHMudHNcbnZhciBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5mdW5jdGlvbiBlbmNvZGVCdWZmZXIodGV4dCkge1xuICByZXR1cm4gZW5jb2Rlci5lbmNvZGUodGV4dCk7XG59XG5mdW5jdGlvbiBkZWNvZGVCdWZmZXIoYnVmZmVyLCBlbmNvZGluZykge1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKGVuY29kaW5nKTtcbiAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGJ1ZmZlcik7XG59XG5mdW5jdGlvbiB0b0FycmF5QnVmZmVyKGFycmF5KSB7XG4gIHJldHVybiBhcnJheS5idWZmZXIuc2xpY2UoXG4gICAgYXJyYXkuYnl0ZU9mZnNldCxcbiAgICBhcnJheS5ieXRlT2Zmc2V0ICsgYXJyYXkuYnl0ZUxlbmd0aFxuICApO1xufVxuXG5leHBvcnQge1xuICBlbmNvZGVCdWZmZXIsXG4gIGRlY29kZUJ1ZmZlcixcbiAgdG9BcnJheUJ1ZmZlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZIWUlSRlgyLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: function() { return /* binding */ INTERNAL_REQUEST_ID_HEADER_NAME; },\n/* harmony export */   Interceptor: function() { return /* binding */ Interceptor; },\n/* harmony export */   InterceptorReadyState: function() { return /* binding */ InterceptorReadyState; },\n/* harmony export */   createRequestId: function() { return /* binding */ createRequestId; },\n/* harmony export */   deleteGlobalSymbol: function() { return /* binding */ deleteGlobalSymbol; },\n/* harmony export */   getGlobalSymbol: function() { return /* binding */ getGlobalSymbol; }\n/* harmony export */ });\n/* harmony import */ var _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/logger */ \"(app-pages-browser)/./node_modules/@open-draft/logger/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"(app-pages-browser)/./node_modules/strict-event-emitter/lib/index.mjs\");\n// src/Interceptor.ts\n\n\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar InterceptorReadyState = /* @__PURE__ */ ((InterceptorReadyState2) => {\n  InterceptorReadyState2[\"INACTIVE\"] = \"INACTIVE\";\n  InterceptorReadyState2[\"APPLYING\"] = \"APPLYING\";\n  InterceptorReadyState2[\"APPLIED\"] = \"APPLIED\";\n  InterceptorReadyState2[\"DISPOSING\"] = \"DISPOSING\";\n  InterceptorReadyState2[\"DISPOSED\"] = \"DISPOSED\";\n  return InterceptorReadyState2;\n})(InterceptorReadyState || {});\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\" /* INACTIVE */;\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.subscriptions = [];\n    this.logger = new _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\" /* APPLIED */) {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\" /* APPLYING */;\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\" /* APPLIED */;\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\" /* APPLIED */;\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" /* DISPOSING */ || this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\" /* DISPOSING */;\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\" /* DISPOSED */;\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\n\n// src/createRequestId.ts\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n\n//# sourceMappingURL=chunk-QED3Q6Z2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasConfigurableGlobal: function() { return /* binding */ hasConfigurableGlobal; }\n/* harmony export */ });\n// src/utils/hasConfigurableGlobal.ts\nfunction hasConfigurableGlobal(propertyName) {\n  const descriptor = Object.getOwnPropertyDescriptor(globalThis, propertyName);\n  if (typeof descriptor === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"function\" && typeof descriptor.get() === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"undefined\" && descriptor.value == null) {\n    return false;\n  }\n  if (typeof descriptor.set === \"undefined\" && !descriptor.configurable) {\n    console.error(\n      `[MSW] Failed to apply interceptor: the global \\`${propertyName}\\` property is non-configurable. This is likely an issue with your environment. If you are using a framework, please open an issue about this in their repository.`\n    );\n    return false;\n  }\n  return true;\n}\n\n\n//# sourceMappingURL=chunk-TX5GBTFY.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLVRYNUdCVEZZLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxhQUFhO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay1UWDVHQlRGWS5tanM/OTcxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvaGFzQ29uZmlndXJhYmxlR2xvYmFsLnRzXG5mdW5jdGlvbiBoYXNDb25maWd1cmFibGVHbG9iYWwocHJvcGVydHlOYW1lKSB7XG4gIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGdsb2JhbFRoaXMsIHByb3BlcnR5TmFtZSk7XG4gIGlmICh0eXBlb2YgZGVzY3JpcHRvciA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAodHlwZW9mIGRlc2NyaXB0b3IuZ2V0ID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGRlc2NyaXB0b3IuZ2V0KCkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yLmdldCA9PT0gXCJ1bmRlZmluZWRcIiAmJiBkZXNjcmlwdG9yLnZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yLnNldCA9PT0gXCJ1bmRlZmluZWRcIiAmJiAhZGVzY3JpcHRvci5jb25maWd1cmFibGUpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgYFtNU1ddIEZhaWxlZCB0byBhcHBseSBpbnRlcmNlcHRvcjogdGhlIGdsb2JhbCBcXGAke3Byb3BlcnR5TmFtZX1cXGAgcHJvcGVydHkgaXMgbm9uLWNvbmZpZ3VyYWJsZS4gVGhpcyBpcyBsaWtlbHkgYW4gaXNzdWUgd2l0aCB5b3VyIGVudmlyb25tZW50LiBJZiB5b3UgYXJlIHVzaW5nIGEgZnJhbWV3b3JrLCBwbGVhc2Ugb3BlbiBhbiBpc3N1ZSBhYm91dCB0aGlzIGluIHRoZWlyIHJlcG9zaXRvcnkuYFxuICAgICk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQge1xuICBoYXNDb25maWd1cmFibGVHbG9iYWxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1UWDVHQlRGWS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/index.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/index.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchInterceptor: function() { return /* binding */ BatchInterceptor; },\n/* harmony export */   FetchResponse: function() { return /* reexport safe */ _chunk_3RXCRGL2_mjs__WEBPACK_IMPORTED_MODULE_1__.FetchResponse; },\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.INTERNAL_REQUEST_ID_HEADER_NAME; },\n/* harmony export */   IS_PATCHED_MODULE: function() { return /* reexport safe */ _chunk_3RXCRGL2_mjs__WEBPACK_IMPORTED_MODULE_1__.IS_PATCHED_MODULE; },\n/* harmony export */   Interceptor: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.Interceptor; },\n/* harmony export */   InterceptorReadyState: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.InterceptorReadyState; },\n/* harmony export */   createRequestId: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.createRequestId; },\n/* harmony export */   decodeBuffer: function() { return /* reexport safe */ _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeBuffer; },\n/* harmony export */   deleteGlobalSymbol: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.deleteGlobalSymbol; },\n/* harmony export */   encodeBuffer: function() { return /* reexport safe */ _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_0__.encodeBuffer; },\n/* harmony export */   getCleanUrl: function() { return /* binding */ getCleanUrl; },\n/* harmony export */   getGlobalSymbol: function() { return /* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.getGlobalSymbol; },\n/* harmony export */   getRawRequest: function() { return /* reexport safe */ _chunk_3RXCRGL2_mjs__WEBPACK_IMPORTED_MODULE_1__.getRawRequest; }\n/* harmony export */ });\n/* harmony import */ var _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-6HYIRFX2.mjs */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\");\n/* harmony import */ var _chunk_3RXCRGL2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3RXCRGL2.mjs */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-3RXCRGL2.mjs\");\n/* harmony import */ var _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-QED3Q6Z2.mjs */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\");\n\n\n\n\n// src/BatchInterceptor.ts\nvar BatchInterceptor = class extends _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/utils/getCleanUrl.ts\nfunction getCleanUrl(url, isAbsolute = true) {\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join(\"\");\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRzhCO0FBS0E7QUFRQTs7QUFFOUI7QUFDQSxxQ0FBcUMsNERBQVc7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFlRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2luZGV4Lm1qcz8wOGZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGRlY29kZUJ1ZmZlcixcbiAgZW5jb2RlQnVmZmVyXG59IGZyb20gXCIuL2NodW5rLTZIWUlSRlgyLm1qc1wiO1xuaW1wb3J0IHtcbiAgRmV0Y2hSZXNwb25zZSxcbiAgSVNfUEFUQ0hFRF9NT0RVTEUsXG4gIGdldFJhd1JlcXVlc3Rcbn0gZnJvbSBcIi4vY2h1bmstM1JYQ1JHTDIubWpzXCI7XG5pbXBvcnQge1xuICBJTlRFUk5BTF9SRVFVRVNUX0lEX0hFQURFUl9OQU1FLFxuICBJbnRlcmNlcHRvcixcbiAgSW50ZXJjZXB0b3JSZWFkeVN0YXRlLFxuICBjcmVhdGVSZXF1ZXN0SWQsXG4gIGRlbGV0ZUdsb2JhbFN5bWJvbCxcbiAgZ2V0R2xvYmFsU3ltYm9sXG59IGZyb20gXCIuL2NodW5rLVFFRDNRNloyLm1qc1wiO1xuXG4vLyBzcmMvQmF0Y2hJbnRlcmNlcHRvci50c1xudmFyIEJhdGNoSW50ZXJjZXB0b3IgPSBjbGFzcyBleHRlbmRzIEludGVyY2VwdG9yIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIEJhdGNoSW50ZXJjZXB0b3Iuc3ltYm9sID0gU3ltYm9sKG9wdGlvbnMubmFtZSk7XG4gICAgc3VwZXIoQmF0Y2hJbnRlcmNlcHRvci5zeW1ib2wpO1xuICAgIHRoaXMuaW50ZXJjZXB0b3JzID0gb3B0aW9ucy5pbnRlcmNlcHRvcnM7XG4gIH1cbiAgc2V0dXAoKSB7XG4gICAgY29uc3QgbG9nZ2VyID0gdGhpcy5sb2dnZXIuZXh0ZW5kKFwic2V0dXBcIik7XG4gICAgbG9nZ2VyLmluZm8oXCJhcHBseWluZyBhbGwgJWQgaW50ZXJjZXB0b3JzLi4uXCIsIHRoaXMuaW50ZXJjZXB0b3JzLmxlbmd0aCk7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgbG9nZ2VyLmluZm8oJ2FwcGx5aW5nIFwiJXNcIiBpbnRlcmNlcHRvci4uLicsIGludGVyY2VwdG9yLmNvbnN0cnVjdG9yLm5hbWUpO1xuICAgICAgaW50ZXJjZXB0b3IuYXBwbHkoKTtcbiAgICAgIGxvZ2dlci5pbmZvKFwiYWRkaW5nIGludGVyY2VwdG9yIGRpc3Bvc2Ugc3Vic2NyaXB0aW9uXCIpO1xuICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goKCkgPT4gaW50ZXJjZXB0b3IuZGlzcG9zZSgpKTtcbiAgICB9XG4gIH1cbiAgb24oZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgaW50ZXJjZXB0b3Iub24oZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgb25jZShldmVudCwgbGlzdGVuZXIpIHtcbiAgICBmb3IgKGNvbnN0IGludGVyY2VwdG9yIG9mIHRoaXMuaW50ZXJjZXB0b3JzKSB7XG4gICAgICBpbnRlcmNlcHRvci5vbmNlKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIG9mZihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBmb3IgKGNvbnN0IGludGVyY2VwdG9yIG9mIHRoaXMuaW50ZXJjZXB0b3JzKSB7XG4gICAgICBpbnRlcmNlcHRvci5vZmYoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgcmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvcnMgb2YgdGhpcy5pbnRlcmNlcHRvcnMpIHtcbiAgICAgIGludGVyY2VwdG9ycy5yZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxufTtcblxuLy8gc3JjL3V0aWxzL2dldENsZWFuVXJsLnRzXG5mdW5jdGlvbiBnZXRDbGVhblVybCh1cmwsIGlzQWJzb2x1dGUgPSB0cnVlKSB7XG4gIHJldHVybiBbaXNBYnNvbHV0ZSAmJiB1cmwub3JpZ2luLCB1cmwucGF0aG5hbWVdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiXCIpO1xufVxuZXhwb3J0IHtcbiAgQmF0Y2hJbnRlcmNlcHRvcixcbiAgRmV0Y2hSZXNwb25zZSxcbiAgSU5URVJOQUxfUkVRVUVTVF9JRF9IRUFERVJfTkFNRSxcbiAgSVNfUEFUQ0hFRF9NT0RVTEUsXG4gIEludGVyY2VwdG9yLFxuICBJbnRlcmNlcHRvclJlYWR5U3RhdGUsXG4gIGNyZWF0ZVJlcXVlc3RJZCxcbiAgZGVjb2RlQnVmZmVyLFxuICBkZWxldGVHbG9iYWxTeW1ib2wsXG4gIGVuY29kZUJ1ZmZlcixcbiAgZ2V0Q2xlYW5VcmwsXG4gIGdldEdsb2JhbFN5bWJvbCxcbiAgZ2V0UmF3UmVxdWVzdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelableCloseEvent: function() { return /* binding */ CancelableCloseEvent; },\n/* harmony export */   CancelableMessageEvent: function() { return /* binding */ CancelableMessageEvent; },\n/* harmony export */   CloseEvent: function() { return /* binding */ CloseEvent; },\n/* harmony export */   WebSocketClientConnection: function() { return /* binding */ WebSocketClientConnection; },\n/* harmony export */   WebSocketClientConnectionProtocol: function() { return /* binding */ WebSocketClientConnectionProtocol; },\n/* harmony export */   WebSocketInterceptor: function() { return /* binding */ WebSocketInterceptor; },\n/* harmony export */   WebSocketServerConnection: function() { return /* binding */ WebSocketServerConnection; },\n/* harmony export */   WebSocketServerConnectionProtocol: function() { return /* binding */ WebSocketServerConnectionProtocol; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TX5GBTFY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunk-TX5GBTFY.mjs */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs\");\n/* harmony import */ var _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chunk-QED3Q6Z2.mjs */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var _open_draft_deferred_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @open-draft/deferred-promise */ \"(app-pages-browser)/./node_modules/@open-draft/deferred-promise/build/index.mjs\");\n\n\n\n// src/interceptors/WebSocket/utils/bindEvent.ts\nfunction bindEvent(target, event) {\n  Object.defineProperties(event, {\n    target: {\n      value: target,\n      enumerable: true,\n      writable: true\n    },\n    currentTarget: {\n      value: target,\n      enumerable: true,\n      writable: true\n    }\n  });\n  return event;\n}\n\n// src/interceptors/WebSocket/utils/events.ts\nvar kCancelable = Symbol(\"kCancelable\");\nvar kDefaultPrevented = Symbol(\"kDefaultPrevented\");\nvar CancelableMessageEvent = class extends MessageEvent {\n  constructor(type, init) {\n    super(type, init);\n    this[kCancelable] = !!init.cancelable;\n    this[kDefaultPrevented] = false;\n  }\n  get cancelable() {\n    return this[kCancelable];\n  }\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable;\n  }\n  get defaultPrevented() {\n    return this[kDefaultPrevented];\n  }\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented;\n  }\n  preventDefault() {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true;\n    }\n  }\n};\nkCancelable, kDefaultPrevented;\nvar CloseEvent = class extends Event {\n  constructor(type, init = {}) {\n    super(type, init);\n    this.code = init.code === void 0 ? 0 : init.code;\n    this.reason = init.reason === void 0 ? \"\" : init.reason;\n    this.wasClean = init.wasClean === void 0 ? false : init.wasClean;\n  }\n};\nvar CancelableCloseEvent = class extends CloseEvent {\n  constructor(type, init = {}) {\n    super(type, init);\n    this[kCancelable] = !!init.cancelable;\n    this[kDefaultPrevented] = false;\n  }\n  get cancelable() {\n    return this[kCancelable];\n  }\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable;\n  }\n  get defaultPrevented() {\n    return this[kDefaultPrevented];\n  }\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented;\n  }\n  preventDefault() {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true;\n    }\n  }\n};\nkCancelable, kDefaultPrevented;\n\n// src/interceptors/WebSocket/WebSocketClientConnection.ts\nvar kEmitter = Symbol(\"kEmitter\");\nvar kBoundListener = Symbol(\"kBoundListener\");\nvar WebSocketClientConnectionProtocol = class {\n};\nvar WebSocketClientConnection = class {\n  constructor(socket, transport) {\n    this.socket = socket;\n    this.transport = transport;\n    this.id = (0,_chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_1__.createRequestId)();\n    this.url = new URL(socket.url);\n    this[kEmitter] = new EventTarget();\n    this.transport.addEventListener(\"outgoing\", (event) => {\n      const message = bindEvent(\n        this.socket,\n        new CancelableMessageEvent(\"message\", {\n          data: event.data,\n          origin: event.origin,\n          cancelable: true\n        })\n      );\n      this[kEmitter].dispatchEvent(message);\n      if (message.defaultPrevented) {\n        event.preventDefault();\n      }\n    });\n    this.transport.addEventListener(\"close\", (event) => {\n      this[kEmitter].dispatchEvent(\n        bindEvent(this.socket, new CloseEvent(\"close\", event))\n      );\n    });\n  }\n  /**\n   * Listen for the outgoing events from the connected WebSocket client.\n   */\n  addEventListener(type, listener, options) {\n    if (!Reflect.has(listener, kBoundListener)) {\n      const boundListener = listener.bind(this.socket);\n      Object.defineProperty(listener, kBoundListener, {\n        value: boundListener,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    this[kEmitter].addEventListener(\n      type,\n      Reflect.get(listener, kBoundListener),\n      options\n    );\n  }\n  /**\n   * Removes the listener for the given event.\n   */\n  removeEventListener(event, listener, options) {\n    this[kEmitter].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener),\n      options\n    );\n  }\n  /**\n   * Send data to the connected client.\n   */\n  send(data) {\n    this.transport.send(data);\n  }\n  /**\n   * Close the WebSocket connection.\n   * @param {number} code A status code (see https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1).\n   * @param {string} reason A custom connection close reason.\n   */\n  close(code, reason) {\n    this.transport.close(code, reason);\n  }\n};\nkEmitter;\n\n// src/interceptors/WebSocket/WebSocketServerConnection.ts\n\n\n// src/interceptors/WebSocket/WebSocketOverride.ts\n\n\nvar WEBSOCKET_CLOSE_CODE_RANGE_ERROR = \"InvalidAccessError: close code out of user configurable range\";\nvar kPassthroughPromise = Symbol(\"kPassthroughPromise\");\nvar kOnSend = Symbol(\"kOnSend\");\nvar kClose = Symbol(\"kClose\");\nvar WebSocketOverride = class extends EventTarget {\n  constructor(url, protocols) {\n    super();\n    this.CONNECTING = 0;\n    this.OPEN = 1;\n    this.CLOSING = 2;\n    this.CLOSED = 3;\n    this._onopen = null;\n    this._onmessage = null;\n    this._onerror = null;\n    this._onclose = null;\n    this.url = url.toString();\n    this.protocol = \"\";\n    this.extensions = \"\";\n    this.binaryType = \"blob\";\n    this.readyState = this.CONNECTING;\n    this.bufferedAmount = 0;\n    this[kPassthroughPromise] = new _open_draft_deferred_promise__WEBPACK_IMPORTED_MODULE_3__.DeferredPromise();\n    queueMicrotask(async () => {\n      if (await this[kPassthroughPromise]) {\n        return;\n      }\n      this.protocol = typeof protocols === \"string\" ? protocols : Array.isArray(protocols) && protocols.length > 0 ? protocols[0] : \"\";\n      if (this.readyState === this.CONNECTING) {\n        this.readyState = this.OPEN;\n        this.dispatchEvent(bindEvent(this, new Event(\"open\")));\n      }\n    });\n  }\n  set onopen(listener) {\n    this.removeEventListener(\"open\", this._onopen);\n    this._onopen = listener;\n    if (listener !== null) {\n      this.addEventListener(\"open\", listener);\n    }\n  }\n  get onopen() {\n    return this._onopen;\n  }\n  set onmessage(listener) {\n    this.removeEventListener(\n      \"message\",\n      this._onmessage\n    );\n    this._onmessage = listener;\n    if (listener !== null) {\n      this.addEventListener(\"message\", listener);\n    }\n  }\n  get onmessage() {\n    return this._onmessage;\n  }\n  set onerror(listener) {\n    this.removeEventListener(\"error\", this._onerror);\n    this._onerror = listener;\n    if (listener !== null) {\n      this.addEventListener(\"error\", listener);\n    }\n  }\n  get onerror() {\n    return this._onerror;\n  }\n  set onclose(listener) {\n    this.removeEventListener(\"close\", this._onclose);\n    this._onclose = listener;\n    if (listener !== null) {\n      this.addEventListener(\"close\", listener);\n    }\n  }\n  get onclose() {\n    return this._onclose;\n  }\n  /**\n   * @see https://websockets.spec.whatwg.org/#ref-for-dom-websocket-send%E2%91%A0\n   */\n  send(data) {\n    if (this.readyState === this.CONNECTING) {\n      this.close();\n      throw new DOMException(\"InvalidStateError\");\n    }\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n    this.bufferedAmount += getDataSize(data);\n    queueMicrotask(() => {\n      var _a;\n      this.bufferedAmount = 0;\n      (_a = this[kOnSend]) == null ? void 0 : _a.call(this, data);\n    });\n  }\n  close(code = 1e3, reason) {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(code, WEBSOCKET_CLOSE_CODE_RANGE_ERROR);\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      code === 1e3 || code >= 3e3 && code <= 4999,\n      WEBSOCKET_CLOSE_CODE_RANGE_ERROR\n    );\n    this[kClose](code, reason);\n  }\n  [(kPassthroughPromise, kOnSend, kClose)](code = 1e3, reason, wasClean = true) {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n    this.readyState = this.CLOSING;\n    queueMicrotask(() => {\n      this.readyState = this.CLOSED;\n      this.dispatchEvent(\n        bindEvent(\n          this,\n          new CloseEvent(\"close\", {\n            code,\n            reason,\n            wasClean\n          })\n        )\n      );\n      this._onopen = null;\n      this._onmessage = null;\n      this._onerror = null;\n      this._onclose = null;\n    });\n  }\n  addEventListener(type, listener, options) {\n    return super.addEventListener(\n      type,\n      listener,\n      options\n    );\n  }\n  removeEventListener(type, callback, options) {\n    return super.removeEventListener(type, callback, options);\n  }\n};\nWebSocketOverride.CONNECTING = 0;\nWebSocketOverride.OPEN = 1;\nWebSocketOverride.CLOSING = 2;\nWebSocketOverride.CLOSED = 3;\nfunction getDataSize(data) {\n  if (typeof data === \"string\") {\n    return data.length;\n  }\n  if (data instanceof Blob) {\n    return data.size;\n  }\n  return data.byteLength;\n}\n\n// src/interceptors/WebSocket/WebSocketServerConnection.ts\nvar kEmitter2 = Symbol(\"kEmitter\");\nvar kBoundListener2 = Symbol(\"kBoundListener\");\nvar kSend = Symbol(\"kSend\");\nvar WebSocketServerConnectionProtocol = class {\n};\nvar WebSocketServerConnection = class {\n  constructor(client, transport, createConnection) {\n    this.client = client;\n    this.transport = transport;\n    this.createConnection = createConnection;\n    this[kEmitter2] = new EventTarget();\n    this.mockCloseController = new AbortController();\n    this.realCloseController = new AbortController();\n    this.transport.addEventListener(\"outgoing\", (event) => {\n      if (typeof this.realWebSocket === \"undefined\") {\n        return;\n      }\n      queueMicrotask(() => {\n        if (!event.defaultPrevented) {\n          this[kSend](event.data);\n        }\n      });\n    });\n    this.transport.addEventListener(\n      \"incoming\",\n      this.handleIncomingMessage.bind(this)\n    );\n  }\n  /**\n   * The `WebSocket` instance connected to the original server.\n   * Accessing this before calling `server.connect()` will throw.\n   */\n  get socket() {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      this.realWebSocket,\n      'Cannot access \"socket\" on the original WebSocket server object: the connection is not open. Did you forget to call `server.connect()`?'\n    );\n    return this.realWebSocket;\n  }\n  /**\n   * Open connection to the original WebSocket server.\n   */\n  connect() {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      !this.realWebSocket || this.realWebSocket.readyState !== WebSocket.OPEN,\n      'Failed to call \"connect()\" on the original WebSocket instance: the connection already open'\n    );\n    const realWebSocket = this.createConnection();\n    realWebSocket.binaryType = this.client.binaryType;\n    realWebSocket.addEventListener(\n      \"open\",\n      (event) => {\n        this[kEmitter2].dispatchEvent(\n          bindEvent(this.realWebSocket, new Event(\"open\", event))\n        );\n      },\n      { once: true }\n    );\n    realWebSocket.addEventListener(\"message\", (event) => {\n      this.transport.dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new MessageEvent(\"incoming\", {\n            data: event.data,\n            origin: event.origin\n          })\n        )\n      );\n    });\n    this.client.addEventListener(\n      \"close\",\n      (event) => {\n        this.handleMockClose(event);\n      },\n      {\n        signal: this.mockCloseController.signal\n      }\n    );\n    realWebSocket.addEventListener(\n      \"close\",\n      (event) => {\n        this.handleRealClose(event);\n      },\n      {\n        signal: this.realCloseController.signal\n      }\n    );\n    realWebSocket.addEventListener(\"error\", () => {\n      const errorEvent = bindEvent(\n        realWebSocket,\n        new Event(\"error\", { cancelable: true })\n      );\n      this[kEmitter2].dispatchEvent(errorEvent);\n      if (!errorEvent.defaultPrevented) {\n        this.client.dispatchEvent(bindEvent(this.client, new Event(\"error\")));\n      }\n    });\n    this.realWebSocket = realWebSocket;\n  }\n  /**\n   * Listen for the incoming events from the original WebSocket server.\n   */\n  addEventListener(event, listener, options) {\n    if (!Reflect.has(listener, kBoundListener2)) {\n      const boundListener = listener.bind(this.client);\n      Object.defineProperty(listener, kBoundListener2, {\n        value: boundListener,\n        enumerable: false\n      });\n    }\n    this[kEmitter2].addEventListener(\n      event,\n      Reflect.get(listener, kBoundListener2),\n      options\n    );\n  }\n  /**\n   * Remove the listener for the given event.\n   */\n  removeEventListener(event, listener, options) {\n    this[kEmitter2].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener2),\n      options\n    );\n  }\n  /**\n   * Send data to the original WebSocket server.\n   * @example\n   * server.send('hello')\n   * server.send(new Blob(['hello']))\n   * server.send(new TextEncoder().encode('hello'))\n   */\n  send(data) {\n    this[kSend](data);\n  }\n  [(kEmitter2, kSend)](data) {\n    const { realWebSocket } = this;\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      realWebSocket,\n      'Failed to call \"server.send()\" for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    );\n    if (realWebSocket.readyState === WebSocket.CLOSING || realWebSocket.readyState === WebSocket.CLOSED) {\n      return;\n    }\n    if (realWebSocket.readyState === WebSocket.CONNECTING) {\n      realWebSocket.addEventListener(\n        \"open\",\n        () => {\n          realWebSocket.send(data);\n        },\n        { once: true }\n      );\n      return;\n    }\n    realWebSocket.send(data);\n  }\n  /**\n   * Close the actual server connection.\n   */\n  close() {\n    const { realWebSocket } = this;\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      realWebSocket,\n      'Failed to close server connection for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    );\n    this.realCloseController.abort();\n    if (realWebSocket.readyState === WebSocket.CLOSING || realWebSocket.readyState === WebSocket.CLOSED) {\n      return;\n    }\n    realWebSocket.close();\n    queueMicrotask(() => {\n      this[kEmitter2].dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new CancelableCloseEvent(\"close\", {\n            /**\n             * @note `server.close()` in the interceptor\n             * always results in clean closures.\n             */\n            code: 1e3,\n            cancelable: true\n          })\n        )\n      );\n    });\n  }\n  handleIncomingMessage(event) {\n    const messageEvent = bindEvent(\n      event.target,\n      new CancelableMessageEvent(\"message\", {\n        data: event.data,\n        origin: event.origin,\n        cancelable: true\n      })\n    );\n    this[kEmitter2].dispatchEvent(messageEvent);\n    if (!messageEvent.defaultPrevented) {\n      this.client.dispatchEvent(\n        bindEvent(\n          /**\n           * @note Bind the forwarded original server events\n           * to the mock WebSocket instance so it would\n           * dispatch them straight away.\n           */\n          this.client,\n          // Clone the message event again to prevent\n          // the \"already being dispatched\" exception.\n          new MessageEvent(\"message\", {\n            data: event.data,\n            origin: event.origin\n          })\n        )\n      );\n    }\n  }\n  handleMockClose(_event) {\n    if (this.realWebSocket) {\n      this.realWebSocket.close();\n    }\n  }\n  handleRealClose(event) {\n    this.mockCloseController.abort();\n    const closeEvent = bindEvent(\n      this.realWebSocket,\n      new CancelableCloseEvent(\"close\", {\n        code: event.code,\n        reason: event.reason,\n        wasClean: event.wasClean,\n        cancelable: true\n      })\n    );\n    this[kEmitter2].dispatchEvent(closeEvent);\n    if (!closeEvent.defaultPrevented) {\n      this.client[kClose](event.code, event.reason);\n    }\n  }\n};\n\n// src/interceptors/WebSocket/WebSocketClassTransport.ts\nvar WebSocketClassTransport = class extends EventTarget {\n  constructor(socket) {\n    super();\n    this.socket = socket;\n    this.socket.addEventListener(\"close\", (event) => {\n      this.dispatchEvent(bindEvent(this.socket, new CloseEvent(\"close\", event)));\n    });\n    this.socket[kOnSend] = (data) => {\n      this.dispatchEvent(\n        bindEvent(\n          this.socket,\n          // Dispatch this as cancelable because \"client\" connection\n          // re-creates this message event (cannot dispatch the same event).\n          new CancelableMessageEvent(\"outgoing\", {\n            data,\n            origin: this.socket.url,\n            cancelable: true\n          })\n        )\n      );\n    };\n  }\n  addEventListener(type, callback, options) {\n    return super.addEventListener(type, callback, options);\n  }\n  dispatchEvent(event) {\n    return super.dispatchEvent(event);\n  }\n  send(data) {\n    queueMicrotask(() => {\n      if (this.socket.readyState === this.socket.CLOSING || this.socket.readyState === this.socket.CLOSED) {\n        return;\n      }\n      const dispatchEvent = () => {\n        this.socket.dispatchEvent(\n          bindEvent(\n            /**\n             * @note Setting this event's \"target\" to the\n             * WebSocket override instance is important.\n             * This way it can tell apart original incoming events\n             * (must be forwarded to the transport) from the\n             * mocked message events like the one below\n             * (must be dispatched on the client instance).\n             */\n            this.socket,\n            new MessageEvent(\"message\", {\n              data,\n              origin: this.socket.url\n            })\n          )\n        );\n      };\n      if (this.socket.readyState === this.socket.CONNECTING) {\n        this.socket.addEventListener(\n          \"open\",\n          () => {\n            dispatchEvent();\n          },\n          { once: true }\n        );\n      } else {\n        dispatchEvent();\n      }\n    });\n  }\n  close(code, reason) {\n    this.socket[kClose](code, reason);\n  }\n};\n\n// src/interceptors/WebSocket/index.ts\nvar _WebSocketInterceptor = class extends _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_1__.Interceptor {\n  constructor() {\n    super(_WebSocketInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return (0,_chunk_TX5GBTFY_mjs__WEBPACK_IMPORTED_MODULE_0__.hasConfigurableGlobal)(\"WebSocket\");\n  }\n  setup() {\n    const originalWebSocketDescriptor = Object.getOwnPropertyDescriptor(\n      globalThis,\n      \"WebSocket\"\n    );\n    const WebSocketProxy = new Proxy(globalThis.WebSocket, {\n      construct: (target, args, newTarget) => {\n        const [url, protocols] = args;\n        const createConnection = () => {\n          return Reflect.construct(target, args, newTarget);\n        };\n        const socket = new WebSocketOverride(url, protocols);\n        const transport = new WebSocketClassTransport(socket);\n        queueMicrotask(() => {\n          try {\n            const server = new WebSocketServerConnection(\n              socket,\n              transport,\n              createConnection\n            );\n            const hasConnectionListeners = this.emitter.emit(\"connection\", {\n              client: new WebSocketClientConnection(socket, transport),\n              server,\n              info: {\n                protocols\n              }\n            });\n            if (hasConnectionListeners) {\n              socket[kPassthroughPromise].resolve(false);\n            } else {\n              socket[kPassthroughPromise].resolve(true);\n              server.connect();\n              server.addEventListener(\"open\", () => {\n                socket.dispatchEvent(bindEvent(socket, new Event(\"open\")));\n                if (server[\"realWebSocket\"]) {\n                  socket.protocol = server[\"realWebSocket\"].protocol;\n                }\n              });\n            }\n          } catch (error) {\n            if (error instanceof Error) {\n              socket.dispatchEvent(new Event(\"error\"));\n              if (socket.readyState !== WebSocket.CLOSING && socket.readyState !== WebSocket.CLOSED) {\n                socket[kClose](1011, error.message, false);\n              }\n              console.error(error);\n            }\n          }\n        });\n        return socket;\n      }\n    });\n    Object.defineProperty(globalThis, \"WebSocket\", {\n      value: WebSocketProxy,\n      configurable: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(\n        globalThis,\n        \"WebSocket\",\n        originalWebSocketDescriptor\n      );\n    });\n  }\n};\nvar WebSocketInterceptor = _WebSocketInterceptor;\nWebSocketInterceptor.symbol = Symbol(\"websocket\");\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@open-draft/deferred-promise/build/index.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@open-draft/deferred-promise/build/index.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeferredPromise: function() { return /* binding */ DeferredPromise; },\n/* harmony export */   createDeferredExecutor: function() { return /* binding */ createDeferredExecutor; }\n/* harmony export */ });\n// src/createDeferredExecutor.ts\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\n\n// src/DeferredPromise.ts\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3Blbi1kcmFmdC9kZWZlcnJlZC1wcm9taXNlL2J1aWxkL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseUNBQXlDO0FBQzFELGdCQUFnQjtBQUNoQixLQUFLO0FBQ0w7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BvcGVuLWRyYWZ0L2RlZmVycmVkLXByb21pc2UvYnVpbGQvaW5kZXgubWpzP2Y2YjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NyZWF0ZURlZmVycmVkRXhlY3V0b3IudHNcbmZ1bmN0aW9uIGNyZWF0ZURlZmVycmVkRXhlY3V0b3IoKSB7XG4gIGNvbnN0IGV4ZWN1dG9yID0gKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGV4ZWN1dG9yLnN0YXRlID0gXCJwZW5kaW5nXCI7XG4gICAgZXhlY3V0b3IucmVzb2x2ZSA9IChkYXRhKSA9PiB7XG4gICAgICBpZiAoZXhlY3V0b3Iuc3RhdGUgIT09IFwicGVuZGluZ1wiKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGV4ZWN1dG9yLnJlc3VsdCA9IGRhdGE7XG4gICAgICBjb25zdCBvbkZ1bGZpbGxlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBleGVjdXRvci5zdGF0ZSA9IFwiZnVsZmlsbGVkXCI7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH07XG4gICAgICByZXR1cm4gcmVzb2x2ZShcbiAgICAgICAgZGF0YSBpbnN0YW5jZW9mIFByb21pc2UgPyBkYXRhIDogUHJvbWlzZS5yZXNvbHZlKGRhdGEpLnRoZW4ob25GdWxmaWxsZWQpXG4gICAgICApO1xuICAgIH07XG4gICAgZXhlY3V0b3IucmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgICAgaWYgKGV4ZWN1dG9yLnN0YXRlICE9PSBcInBlbmRpbmdcIikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIGV4ZWN1dG9yLnN0YXRlID0gXCJyZWplY3RlZFwiO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVqZWN0KGV4ZWN1dG9yLnJlamVjdGlvblJlYXNvbiA9IHJlYXNvbik7XG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGV4ZWN1dG9yO1xufVxuXG4vLyBzcmMvRGVmZXJyZWRQcm9taXNlLnRzXG52YXIgRGVmZXJyZWRQcm9taXNlID0gY2xhc3MgZXh0ZW5kcyBQcm9taXNlIHtcbiAgI2V4ZWN1dG9yO1xuICByZXNvbHZlO1xuICByZWplY3Q7XG4gIGNvbnN0cnVjdG9yKGV4ZWN1dG9yID0gbnVsbCkge1xuICAgIGNvbnN0IGRlZmVycmVkRXhlY3V0b3IgPSBjcmVhdGVEZWZlcnJlZEV4ZWN1dG9yKCk7XG4gICAgc3VwZXIoKG9yaWdpbmFsUmVzb2x2ZSwgb3JpZ2luYWxSZWplY3QpID0+IHtcbiAgICAgIGRlZmVycmVkRXhlY3V0b3Iob3JpZ2luYWxSZXNvbHZlLCBvcmlnaW5hbFJlamVjdCk7XG4gICAgICBleGVjdXRvcj8uKGRlZmVycmVkRXhlY3V0b3IucmVzb2x2ZSwgZGVmZXJyZWRFeGVjdXRvci5yZWplY3QpO1xuICAgIH0pO1xuICAgIHRoaXMuI2V4ZWN1dG9yID0gZGVmZXJyZWRFeGVjdXRvcjtcbiAgICB0aGlzLnJlc29sdmUgPSB0aGlzLiNleGVjdXRvci5yZXNvbHZlO1xuICAgIHRoaXMucmVqZWN0ID0gdGhpcy4jZXhlY3V0b3IucmVqZWN0O1xuICB9XG4gIGdldCBzdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy4jZXhlY3V0b3Iuc3RhdGU7XG4gIH1cbiAgZ2V0IHJlamVjdGlvblJlYXNvbigpIHtcbiAgICByZXR1cm4gdGhpcy4jZXhlY3V0b3IucmVqZWN0aW9uUmVhc29uO1xuICB9XG4gIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICByZXR1cm4gdGhpcy4jZGVjb3JhdGUoc3VwZXIudGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkpO1xuICB9XG4gIGNhdGNoKG9uUmVqZWN0ZWQpIHtcbiAgICByZXR1cm4gdGhpcy4jZGVjb3JhdGUoc3VwZXIuY2F0Y2gob25SZWplY3RlZCkpO1xuICB9XG4gIGZpbmFsbHkob25maW5hbGx5KSB7XG4gICAgcmV0dXJuIHRoaXMuI2RlY29yYXRlKHN1cGVyLmZpbmFsbHkob25maW5hbGx5KSk7XG4gIH1cbiAgI2RlY29yYXRlKHByb21pc2UpIHtcbiAgICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocHJvbWlzZSwge1xuICAgICAgcmVzb2x2ZTogeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0aGlzLnJlc29sdmUgfSxcbiAgICAgIHJlamVjdDogeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0aGlzLnJlamVjdCB9XG4gICAgfSk7XG4gIH1cbn07XG5leHBvcnQge1xuICBEZWZlcnJlZFByb21pc2UsXG4gIGNyZWF0ZURlZmVycmVkRXhlY3V0b3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@open-draft/deferred-promise/build/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@open-draft/logger/lib/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@open-draft/logger/lib/index.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: function() { return /* binding */ Logger; }\n/* harmony export */ });\n/* harmony import */ var is_node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-node-process */ \"(app-pages-browser)/./node_modules/is-node-process/lib/index.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/outvariant/lib/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/index.ts\n\n\n\n// src/colors.ts\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\n\n// src/index.ts\nvar IS_NODE = (0,is_node_process__WEBPACK_IMPORTED_MODULE_0__.isNodeProcess)();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@open-draft/logger/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@open-draft/until/lib/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@open-draft/until/lib/index.mjs ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   until: function() { return /* binding */ until; }\n/* harmony export */ });\n// src/until.ts\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error;\n    });\n    return { error: null, data };\n  } catch (error) {\n    return { error, data: null };\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3Blbi1kcmFmdC91bnRpbC9saWIvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWE7QUFDYixJQUFJO0FBQ0osYUFBYTtBQUNiO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ab3Blbi1kcmFmdC91bnRpbC9saWIvaW5kZXgubWpzP2MzYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3VudGlsLnRzXG52YXIgdW50aWwgPSBhc3luYyAocHJvbWlzZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBwcm9taXNlKCkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9KTtcbiAgICByZXR1cm4geyBlcnJvcjogbnVsbCwgZGF0YSB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7IGVycm9yLCBkYXRhOiBudWxsIH07XG4gIH1cbn07XG5leHBvcnQge1xuICB1bnRpbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@open-draft/until/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/headers-polyfill/lib/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/headers-polyfill/lib/index.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: function() { return /* binding */ Headers; },\n/* harmony export */   flattenHeadersList: function() { return /* binding */ flattenHeadersList; },\n/* harmony export */   flattenHeadersObject: function() { return /* binding */ flattenHeadersObject; },\n/* harmony export */   getRawHeaders: function() { return /* binding */ getRawHeaders; },\n/* harmony export */   headersToList: function() { return /* binding */ headersToList; },\n/* harmony export */   headersToObject: function() { return /* binding */ headersToObject; },\n/* harmony export */   headersToString: function() { return /* binding */ headersToString; },\n/* harmony export */   listToHeaders: function() { return /* binding */ listToHeaders; },\n/* harmony export */   objectToHeaders: function() { return /* binding */ objectToHeaders; },\n/* harmony export */   reduceHeadersObject: function() { return /* binding */ reduceHeadersObject; },\n/* harmony export */   stringToHeaders: function() { return /* binding */ stringToHeaders; }\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString2(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString2;\n  }\n});\n\n// src/Headers.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\n\n// src/utils/normalizeHeaderName.ts\nvar HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\nfunction normalizeHeaderName(name) {\n  if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === \"\") {\n    throw new TypeError(\"Invalid character in header field name\");\n  }\n  return name.trim().toLowerCase();\n}\n\n// src/utils/normalizeHeaderValue.ts\nvar charCodesToRemove = [\n  String.fromCharCode(10),\n  String.fromCharCode(13),\n  String.fromCharCode(9),\n  String.fromCharCode(32)\n];\nvar HEADER_VALUE_REMOVE_REGEXP = new RegExp(\n  `(^[${charCodesToRemove.join(\"\")}]|$[${charCodesToRemove.join(\"\")}])`,\n  \"g\"\n);\nfunction normalizeHeaderValue(value) {\n  const nextValue = value.replace(HEADER_VALUE_REMOVE_REGEXP, \"\");\n  return nextValue;\n}\n\n// src/utils/isValidHeaderName.ts\nfunction isValidHeaderName(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i);\n    if (character > 127 || !isToken(character)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isToken(value) {\n  return ![\n    127,\n    32,\n    \"(\",\n    \")\",\n    \"<\",\n    \">\",\n    \"@\",\n    \",\",\n    \";\",\n    \":\",\n    \"\\\\\",\n    '\"',\n    \"/\",\n    \"[\",\n    \"]\",\n    \"?\",\n    \"=\",\n    \"{\",\n    \"}\"\n  ].includes(value);\n}\n\n// src/utils/isValidHeaderValue.ts\nfunction isValidHeaderValue(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.trim() !== value) {\n    return false;\n  }\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i);\n    if (\n      // NUL.\n      character === 0 || // HTTP newline bytes.\n      character === 10 || character === 13\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// src/Headers.ts\nvar NORMALIZED_HEADERS = Symbol(\"normalizedHeaders\");\nvar RAW_HEADER_NAMES = Symbol(\"rawHeaderNames\");\nvar HEADER_VALUE_DELIMITER = \", \";\nvar _a, _b, _c;\nvar Headers = class _Headers {\n  constructor(init) {\n    // Normalized header {\"name\":\"a, b\"} storage.\n    this[_a] = {};\n    // Keeps the mapping between the raw header name\n    // and the normalized header name to ease the lookup.\n    this[_b] = /* @__PURE__ */ new Map();\n    this[_c] = \"Headers\";\n    if ([\"Headers\", \"HeadersPolyfill\"].includes(init?.constructor.name) || init instanceof _Headers || typeof globalThis.Headers !== \"undefined\" && init instanceof globalThis.Headers) {\n      const initialHeaders = init;\n      initialHeaders.forEach((value, name) => {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(init)) {\n      init.forEach(([name, value]) => {\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        );\n      });\n    } else if (init) {\n      Object.getOwnPropertyNames(init).forEach((name) => {\n        const value = init[name];\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        );\n      });\n    }\n  }\n  [(_a = NORMALIZED_HEADERS, _b = RAW_HEADER_NAMES, _c = Symbol.toStringTag, Symbol.iterator)]() {\n    return this.entries();\n  }\n  *keys() {\n    for (const [name] of this.entries()) {\n      yield name;\n    }\n  }\n  *values() {\n    for (const [, value] of this.entries()) {\n      yield value;\n    }\n  }\n  *entries() {\n    let sortedKeys = Object.keys(this[NORMALIZED_HEADERS]).sort(\n      (a, b) => a.localeCompare(b)\n    );\n    for (const name of sortedKeys) {\n      if (name === \"set-cookie\") {\n        for (const value of this.getSetCookie()) {\n          yield [name, value];\n        }\n      } else {\n        yield [name, this.get(name)];\n      }\n    }\n  }\n  /**\n   * Returns a boolean stating whether a `Headers` object contains a certain header.\n   */\n  has(name) {\n    if (!isValidHeaderName(name)) {\n      throw new TypeError(`Invalid header name \"${name}\"`);\n    }\n    return this[NORMALIZED_HEADERS].hasOwnProperty(normalizeHeaderName(name));\n  }\n  /**\n   * Returns a `ByteString` sequence of all the values of a header with a given name.\n   */\n  get(name) {\n    if (!isValidHeaderName(name)) {\n      throw TypeError(`Invalid header name \"${name}\"`);\n    }\n    return this[NORMALIZED_HEADERS][normalizeHeaderName(name)] ?? null;\n  }\n  /**\n   * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  set(name, value) {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    const normalizedValue = normalizeHeaderValue(value);\n    this[NORMALIZED_HEADERS][normalizedName] = normalizeHeaderValue(normalizedValue);\n    this[RAW_HEADER_NAMES].set(normalizedName, name);\n  }\n  /**\n   * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  append(name, value) {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    const normalizedValue = normalizeHeaderValue(value);\n    let resolvedValue = this.has(normalizedName) ? `${this.get(normalizedName)}, ${normalizedValue}` : normalizedValue;\n    this.set(name, resolvedValue);\n  }\n  /**\n   * Deletes a header from the `Headers` object.\n   */\n  delete(name) {\n    if (!isValidHeaderName(name)) {\n      return;\n    }\n    if (!this.has(name)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    delete this[NORMALIZED_HEADERS][normalizedName];\n    this[RAW_HEADER_NAMES].delete(normalizedName);\n  }\n  /**\n   * Traverses the `Headers` object,\n   * calling the given callback for each header.\n   */\n  forEach(callback, thisArg) {\n    for (const [name, value] of this.entries()) {\n      callback.call(thisArg, value, name, this);\n    }\n  }\n  /**\n   * Returns an array containing the values\n   * of all Set-Cookie headers associated\n   * with a response\n   */\n  getSetCookie() {\n    const setCookieHeader = this.get(\"set-cookie\");\n    if (setCookieHeader === null) {\n      return [];\n    }\n    if (setCookieHeader === \"\") {\n      return [\"\"];\n    }\n    return (0, import_set_cookie_parser.splitCookiesString)(setCookieHeader);\n  }\n};\n\n// src/getRawHeaders.ts\nfunction getRawHeaders(headers) {\n  const rawHeaders = {};\n  for (const [name, value] of headers.entries()) {\n    rawHeaders[headers[RAW_HEADER_NAMES].get(name)] = value;\n  }\n  return rawHeaders;\n}\n\n// src/transformers/headersToList.ts\nfunction headersToList(headers) {\n  const headersList = [];\n  headers.forEach((value, name) => {\n    const resolvedValue = value.includes(\",\") ? value.split(\",\").map((value2) => value2.trim()) : value;\n    headersList.push([name, resolvedValue]);\n  });\n  return headersList;\n}\n\n// src/transformers/headersToString.ts\nfunction headersToString(headers) {\n  const list = headersToList(headers);\n  const lines = list.map(([name, value]) => {\n    const values = [].concat(value);\n    return `${name}: ${values.join(\", \")}`;\n  });\n  return lines.join(\"\\r\\n\");\n}\n\n// src/transformers/headersToObject.ts\nvar singleValueHeaders = [\"user-agent\"];\nfunction headersToObject(headers) {\n  const headersObject = {};\n  headers.forEach((value, name) => {\n    const isMultiValue = !singleValueHeaders.includes(name.toLowerCase()) && value.includes(\",\");\n    headersObject[name] = isMultiValue ? value.split(\",\").map((s) => s.trim()) : value;\n  });\n  return headersObject;\n}\n\n// src/transformers/stringToHeaders.ts\nfunction stringToHeaders(str) {\n  const lines = str.trim().split(/[\\r\\n]+/);\n  return lines.reduce((headers, line) => {\n    if (line.trim() === \"\") {\n      return headers;\n    }\n    const parts = line.split(\": \");\n    const name = parts.shift();\n    const value = parts.join(\": \");\n    headers.append(name, value);\n    return headers;\n  }, new Headers());\n}\n\n// src/transformers/listToHeaders.ts\nfunction listToHeaders(list) {\n  const headers = new Headers();\n  list.forEach(([name, value]) => {\n    const values = [].concat(value);\n    values.forEach((value2) => {\n      headers.append(name, value2);\n    });\n  });\n  return headers;\n}\n\n// src/transformers/reduceHeadersObject.ts\nfunction reduceHeadersObject(headers, reducer, initialState) {\n  return Object.keys(headers).reduce((nextHeaders, name) => {\n    return reducer(nextHeaders, name, headers[name]);\n  }, initialState);\n}\n\n// src/transformers/objectToHeaders.ts\nfunction objectToHeaders(headersObject) {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      const values = [].concat(value).filter(Boolean);\n      values.forEach((value2) => {\n        headers.append(name, value2);\n      });\n      return headers;\n    },\n    new Headers()\n  );\n}\n\n// src/transformers/flattenHeadersList.ts\nfunction flattenHeadersList(list) {\n  return list.map(([name, values]) => {\n    return [name, [].concat(values).join(\", \")];\n  });\n}\n\n// src/transformers/flattenHeadersObject.ts\nfunction flattenHeadersObject(headersObject) {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      headers[name] = [].concat(value).join(\", \");\n      return headers;\n    },\n    {}\n  );\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/headers-polyfill/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/is-node-process/lib/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/is-node-process/lib/index.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeProcess: function() { return /* binding */ isNodeProcess; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/index.ts\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pcy1ub2RlLXByb2Nlc3MvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEIsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPLGFBQWEsT0FBTztBQUN6QztBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9pcy1ub2RlLXByb2Nlc3MvbGliL2luZGV4Lm1qcz8wMjY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC50c1xuZnVuY3Rpb24gaXNOb2RlUHJvY2VzcygpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09IFwiUmVhY3ROYXRpdmVcIikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNvbnN0IHR5cGUgPSBwcm9jZXNzLnR5cGU7XG4gICAgaWYgKHR5cGUgPT09IFwicmVuZGVyZXJcIiB8fCB0eXBlID09PSBcIndvcmtlclwiKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiAhIShwcm9jZXNzLnZlcnNpb25zICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZSk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IHtcbiAgaXNOb2RlUHJvY2Vzc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/is-node-process/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/browser/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/msw/lib/browser/index.mjs ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetupWorkerApi: function() { return /* binding */ SetupWorkerApi; },\n/* harmony export */   setupWorker: function() { return /* binding */ setupWorker; }\n/* harmony export */ });\n/* harmony import */ var _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _core_handlers_RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/handlers/RequestHandler.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/handlers/RequestHandler.mjs\");\n/* harmony import */ var _core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/handleRequest.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/handleRequest.mjs\");\n/* harmony import */ var _core_utils_toResponseInit_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utils/toResponseInit.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/toResponseInit.mjs\");\n/* harmony import */ var _core_utils_internal_isHandlerKind_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/internal/isHandlerKind.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isHandlerKind.mjs\");\n/* harmony import */ var _core_SetupApi_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/SetupApi.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/SetupApi.mjs\");\n/* harmony import */ var _core_utils_internal_mergeRight_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/internal/mergeRight.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/mergeRight.mjs\");\n/* harmony import */ var _core_ws_webSocketInterceptor_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/ws/webSocketInterceptor.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/webSocketInterceptor.mjs\");\n/* harmony import */ var _core_ws_handleWebSocketEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/ws/handleWebSocketEvent.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/handleWebSocketEvent.mjs\");\n/* harmony import */ var _core_ws_utils_attachWebSocketLogger_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/ws/utils/attachWebSocketLogger.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/attachWebSocketLogger.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// node_modules/.pnpm/outvariant@1.4.3/node_modules/outvariant/lib/index.mjs\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error2) {\n  if (!error2.stack) {\n    return;\n  }\n  const nextStack = error2.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error2.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, ...positionals);\n    let error2;\n    try {\n      error2 = Reflect.construct(ErrorConstructor, [\n        formatMessage\n      ]);\n    } catch (err) {\n      error2 = ErrorConstructor(formatMessage);\n    }\n    throw error2;\n  }\n};\n\n// node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\n\n\n// node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error2) => {\n      throw error2;\n    });\n    return { error: null, data };\n  } catch (error2) {\n    return { error: error2, data: null };\n  }\n};\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\n\n\n// src/browser/utils/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting\n  ];\n  const relevantStates = allStates.filter((state) => {\n    return state != null;\n  });\n  const worker = relevantStates.find((worker2) => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = async (url, options = {}, findWorker) => {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = await navigator.serviceWorker.getRegistrations().then(\n    (registrations) => registrations.filter(\n      (registration) => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)\n    )\n  );\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    existingRegistration.update();\n    return [\n      getWorkerByRegistration(\n        existingRegistration,\n        absoluteWorkerUrl,\n        findWorker\n      ),\n      existingRegistration\n    ];\n  }\n  const registrationResult = await until(\n    async () => {\n      const registration = await navigator.serviceWorker.register(url, options);\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration\n      ];\n    }\n  );\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL(options?.scope || \"/\", location.href);\n      throw new Error(\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`)\n      );\n    }\n    throw new Error(\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n        \"Failed to register the Service Worker:\\n\\n%s\",\n        registrationResult.error.message\n      )\n    );\n  }\n  return registrationResult.data;\n};\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\n\n\n// src/browser/setupWorker/start/utils/printStartMessage.ts\n\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(\n    `%c${_core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(message)}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n  console.log(\n    \"%cDocumentation: %chttps://mswjs.io/docs\",\n    \"font-weight:bold\",\n    \"font-weight:normal\"\n  );\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  if (args.client) {\n    console.log(\"Client ID: %s (%s)\", args.client.id, args.client.frameType);\n  }\n  console.groupEnd();\n}\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nasync function enableMocking(context, options) {\n  context.workerChannel.send(\"MOCK_ACTIVATE\");\n  const { payload } = await context.events.once(\"MOCKING_ENABLED\");\n  if (context.isMockingEnabled) {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`\n    );\n    return;\n  }\n  context.isMockingEnabled = true;\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: context.registration?.scope,\n    workerUrl: context.worker?.scriptURL,\n    client: payload.client\n  });\n}\n\n// src/browser/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest) {\n    const [data, transfer] = rest;\n    this.port.postMessage({ type: event, data }, { transfer });\n  }\n};\n\n// src/browser/utils/pruneGetRequestBody.ts\nfunction pruneGetRequestBody(request) {\n  if ([\"HEAD\", \"GET\"].includes(request.method)) {\n    return void 0;\n  }\n  return request.body;\n}\n\n// src/browser/utils/deserializeRequest.ts\nfunction deserializeRequest(serializedRequest) {\n  return new Request(serializedRequest.url, {\n    ...serializedRequest,\n    body: pruneGetRequestBody(serializedRequest)\n  });\n}\n\n// src/browser/setupWorker/start/createRequestListener.ts\n\n\n\n\n\nvar createRequestListener = (context, options) => {\n  return async (event, message) => {\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const requestId = message.payload.id;\n    const request = deserializeRequest(message.payload);\n    const requestCloneForLogs = request.clone();\n    const requestClone = request.clone();\n    _core_handlers_RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_1__.RequestHandler.cache.set(request, requestClone);\n    try {\n      await (0,_core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.handleRequest)(\n        request,\n        requestId,\n        context.getRequestHandlers().filter((0,_core_utils_internal_isHandlerKind_mjs__WEBPACK_IMPORTED_MODULE_3__.isHandlerKind)(\"RequestHandler\")),\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage(\"PASSTHROUGH\");\n          },\n          async onMockedResponse(response, { handler, parsedResult }) {\n            const responseClone = response.clone();\n            const responseCloneForLogs = response.clone();\n            const responseInit = (0,_core_utils_toResponseInit_mjs__WEBPACK_IMPORTED_MODULE_4__.toResponseInit)(response);\n            if (context.supports.readableStreamTransfer) {\n              const responseStreamOrNull = response.body;\n              messageChannel.postMessage(\n                \"MOCK_RESPONSE\",\n                {\n                  ...responseInit,\n                  body: responseStreamOrNull\n                },\n                responseStreamOrNull ? [responseStreamOrNull] : void 0\n              );\n            } else {\n              const responseBufferOrNull = response.body === null ? null : await responseClone.arrayBuffer();\n              messageChannel.postMessage(\"MOCK_RESPONSE\", {\n                ...responseInit,\n                body: responseBufferOrNull\n              });\n            }\n            if (!options.quiet) {\n              context.emitter.once(\"response:mocked\", () => {\n                handler.log({\n                  request: requestCloneForLogs,\n                  response: responseCloneForLogs,\n                  parsedResult\n                });\n              });\n            }\n          }\n        }\n      );\n    } catch (error2) {\n      if (error2 instanceof Error) {\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/http/mocking-responses/error-responses`,\n          request.method,\n          request.url,\n          error2.stack ?? error2\n        );\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error2.name,\n            message: error2.message,\n            stack: error2.stack\n          })\n        });\n      }\n    }\n  };\n};\n\n// src/browser/utils/checkWorkerIntegrity.ts\n\nasync function checkWorkerIntegrity(context) {\n  context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n  const { payload } = await context.events.once(\"INTEGRITY_CHECK_RESPONSE\");\n  if (payload.checksum !== \"f5825c521429caf22a4dd13b66e243af\") {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `The currently registered Service Worker has been generated by a different version of MSW (${payload.packageVersion}) and may not be fully compatible with the installed version.\n\nIt's recommended you update your worker script by running this command:\n\n  \\u2022 npx msw init <PUBLIC_DIR>\n\nYou can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`\n    );\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-3RXCRGL2.mjs\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\nfunction getValueBySymbol(symbolName, source) {\n  const ownSymbols = Object.getOwnPropertySymbols(source);\n  const symbol = ownSymbols.find((symbol2) => {\n    return symbol2.description === symbolName;\n  });\n  if (symbol) {\n    return Reflect.get(source, symbol);\n  }\n  return;\n}\nvar _FetchResponse = class extends Response {\n  static isConfigurableStatusCode(status) {\n    return status >= 200 && status <= 599;\n  }\n  static isRedirectResponse(status) {\n    return _FetchResponse.STATUS_CODES_WITH_REDIRECT.includes(status);\n  }\n  /**\n   * Returns a boolean indicating whether the given response status\n   * code represents a response that can have a body.\n   */\n  static isResponseWithBody(status) {\n    return !_FetchResponse.STATUS_CODES_WITHOUT_BODY.includes(status);\n  }\n  static setUrl(url, response) {\n    if (!url || url === \"about:\" || !canParseUrl(url)) {\n      return;\n    }\n    const state = getValueBySymbol(\"state\", response);\n    if (state) {\n      state.urlList.push(new URL(url));\n    } else {\n      Object.defineProperty(response, \"url\", {\n        value: url,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n    }\n  }\n  /**\n   * Parses the given raw HTTP headers into a Fetch API `Headers` instance.\n   */\n  static parseRawHeaders(rawHeaders) {\n    const headers = new Headers();\n    for (let line = 0; line < rawHeaders.length; line += 2) {\n      headers.append(rawHeaders[line], rawHeaders[line + 1]);\n    }\n    return headers;\n  }\n  constructor(body, init = {}) {\n    var _a;\n    const status = (_a = init.status) != null ? _a : 200;\n    const safeStatus = _FetchResponse.isConfigurableStatusCode(status) ? status : 200;\n    const finalBody = _FetchResponse.isResponseWithBody(status) ? body : null;\n    super(finalBody, {\n      status: safeStatus,\n      statusText: init.statusText,\n      headers: init.headers\n    });\n    if (status !== safeStatus) {\n      const state = getValueBySymbol(\"state\", this);\n      if (state) {\n        state.status = status;\n      } else {\n        Object.defineProperty(this, \"status\", {\n          value: status,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n      }\n    }\n    _FetchResponse.setUrl(init.url, this);\n  }\n};\nvar FetchResponse = _FetchResponse;\nFetchResponse.STATUS_CODES_WITHOUT_BODY = [101, 103, 204, 205, 304];\nFetchResponse.STATUS_CODES_WITH_REDIRECT = [301, 302, 303, 307, 308];\nvar kRawRequest = Symbol(\"kRawRequest\");\nfunction setRawRequest(request, rawRequest) {\n  Reflect.set(request, kRawRequest, rawRequest);\n}\n\n// node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\nvar IS_NODE = isNodeProcess();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n// node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\";\n    this.emitter = new Emitter();\n    this.subscriptions = [];\n    this.logger = new Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\") {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\";\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\";\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\";\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" || this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\";\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\";\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/index.mjs\nvar BatchInterceptor = class extends Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/browser/setupWorker/start/createResponseListener.ts\nfunction createResponseListener(context) {\n  return (_, message) => {\n    const { payload: responseJson } = message;\n    const request = deserializeRequest(responseJson.request);\n    if (responseJson.response.type?.includes(\"opaque\")) {\n      return;\n    }\n    const response = responseJson.response.status === 0 ? Response.error() : new FetchResponse(\n      /**\n       * Responses may be streams here, but when we create a response object\n       * with null-body status codes, like 204, 205, 304 Response will\n       * throw when passed a non-null body, so ensure it's null here\n       * for those codes\n       */\n      FetchResponse.isResponseWithBody(responseJson.response.status) ? responseJson.response.body : null,\n      {\n        ...responseJson,\n        /**\n         * Set response URL if it's not set already.\n         * @see https://github.com/mswjs/msw/issues/2030\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/Response/url\n         */\n        url: request.url\n      }\n    );\n    context.emitter.emit(\n      responseJson.isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n      {\n        requestId: responseJson.request.id,\n        request,\n        response\n      }\n    );\n  };\n}\n\n// src/browser/setupWorker/start/utils/validateWorkerScope.ts\n\nfunction validateWorkerScope(registration, options) {\n  if (!options?.quiet && !location.href.startsWith(registration.scope)) {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`\n    );\n  }\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nvar createStartHandler = (context) => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\n        \"REQUEST\",\n        createRequestListener(context, options)\n      );\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = await getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker\n      );\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = customOptions?.findWorker ? _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n          `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n          options.serviceWorker.url\n        ) : _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n          `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n          options.serviceWorker.url,\n          location.host\n        );\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n        window.postMessage({ type: \"msw/worker:stop\" });\n      });\n      await checkWorkerIntegrity(context).catch((error2) => {\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.error(\n          \"Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below.\"\n        );\n        console.error(error2);\n      });\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send(\"KEEPALIVE_REQUEST\"),\n        5e3\n      );\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    };\n    const workerRegistration = startWorkerInstance().then(\n      async (registration) => {\n        const pendingInstance = registration.installing || registration.waiting;\n        if (pendingInstance) {\n          await new Promise((resolve) => {\n            pendingInstance.addEventListener(\"statechange\", () => {\n              if (pendingInstance.state === \"activated\") {\n                return resolve();\n              }\n            });\n          });\n        }\n        await enableMocking(context, options).catch((error2) => {\n          throw new Error(`Failed to enable mocking: ${error2?.message}`);\n        });\n        return registration;\n      }\n    );\n    return workerRegistration;\n  };\n};\n\n// src/browser/setupWorker/stop/createStop.ts\n\n\n// src/browser/setupWorker/stop/utils/printStopMessage.ts\n\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(\n    `%c${_core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\"Mocking disabled.\")}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n}\n\n// src/browser/setupWorker/stop/createStop.ts\nvar createStop = (context) => {\n  return function stop() {\n    if (!context.isMockingEnabled) {\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.'\n      );\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    window.postMessage({ type: \"msw/worker:stop\" });\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n};\n\n// src/browser/setupWorker/start/utils/prepareStartHandler.ts\n\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/build/index.mjs\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-L37TY7LC.mjs\nvar InterceptorError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"InterceptorError\";\n    Object.setPrototypeOf(this, InterceptorError.prototype);\n  }\n};\nvar kRequestHandled = Symbol(\"kRequestHandled\");\nvar kResponsePromise = Symbol(\"kResponsePromise\");\nvar RequestController = class {\n  constructor(request) {\n    this.request = request;\n    this[kRequestHandled] = false;\n    this[kResponsePromise] = new DeferredPromise();\n  }\n  /**\n   * Respond to this request with the given `Response` instance.\n   * @example\n   * controller.respondWith(new Response())\n   * controller.respondWith(Response.json({ id }))\n   * controller.respondWith(Response.error())\n   */\n  respondWith(response) {\n    invariant.as(\n      InterceptorError,\n      !this[kRequestHandled],\n      'Failed to respond to the \"%s %s\" request: the \"request\" event has already been handled.',\n      this.request.method,\n      this.request.url\n    );\n    this[kRequestHandled] = true;\n    this[kResponsePromise].resolve(response);\n  }\n  /**\n   * Error this request with the given reason.\n   *\n   * @example\n   * controller.errorWith()\n   * controller.errorWith(new Error('Oops!'))\n   * controller.errorWith({ message: 'Oops!'})\n   */\n  errorWith(reason) {\n    invariant.as(\n      InterceptorError,\n      !this[kRequestHandled],\n      'Failed to error the \"%s %s\" request: the \"request\" event has already been handled.',\n      this.request.method,\n      this.request.url\n    );\n    this[kRequestHandled] = true;\n    this[kResponsePromise].resolve(reason);\n  }\n};\nasync function emitAsync(emitter, eventName, ...data) {\n  const listners = emitter.listeners(eventName);\n  if (listners.length === 0) {\n    return;\n  }\n  for (const listener of listners) {\n    await listener.apply(emitter, data);\n  }\n}\nfunction isObject(value, loose = false) {\n  return loose ? Object.prototype.toString.call(value).startsWith(\"[object \") : Object.prototype.toString.call(value) === \"[object Object]\";\n}\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction createServerErrorResponse(body) {\n  return new Response(\n    JSON.stringify(\n      body instanceof Error ? {\n        name: body.name,\n        message: body.message,\n        stack: body.stack\n      } : body\n    ),\n    {\n      status: 500,\n      statusText: \"Unhandled Exception\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n}\nfunction isResponseError(response) {\n  return response != null && response instanceof Response && isPropertyAccessible(response, \"type\") && response.type === \"error\";\n}\nfunction isResponseLike(value) {\n  return isObject(value, true) && isPropertyAccessible(value, \"status\") && isPropertyAccessible(value, \"statusText\") && isPropertyAccessible(value, \"bodyUsed\");\n}\nfunction isNodeLikeError(error2) {\n  if (error2 == null) {\n    return false;\n  }\n  if (!(error2 instanceof Error)) {\n    return false;\n  }\n  return \"code\" in error2 && \"errno\" in error2;\n}\nasync function handleRequest2(options) {\n  const handleResponse = async (response) => {\n    if (response instanceof Error) {\n      options.onError(response);\n      return true;\n    }\n    if (isResponseError(response)) {\n      options.onRequestError(response);\n      return true;\n    }\n    if (isResponseLike(response)) {\n      await options.onResponse(response);\n      return true;\n    }\n    if (isObject(response)) {\n      options.onError(response);\n      return true;\n    }\n    return false;\n  };\n  const handleResponseError = async (error2) => {\n    if (error2 instanceof InterceptorError) {\n      throw result.error;\n    }\n    if (isNodeLikeError(error2)) {\n      options.onError(error2);\n      return true;\n    }\n    if (error2 instanceof Response) {\n      return await handleResponse(error2);\n    }\n    return false;\n  };\n  options.emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n    if (pendingRequestId !== options.requestId) {\n      return;\n    }\n    if (options.controller[kResponsePromise].state === \"pending\") {\n      options.controller[kResponsePromise].resolve(void 0);\n    }\n  });\n  const requestAbortPromise = new DeferredPromise();\n  if (options.request.signal) {\n    if (options.request.signal.aborted) {\n      requestAbortPromise.reject(options.request.signal.reason);\n    } else {\n      options.request.signal.addEventListener(\n        \"abort\",\n        () => {\n          requestAbortPromise.reject(options.request.signal.reason);\n        },\n        { once: true }\n      );\n    }\n  }\n  const result = await until(async () => {\n    const requestListenersPromise = emitAsync(options.emitter, \"request\", {\n      requestId: options.requestId,\n      request: options.request,\n      controller: options.controller\n    });\n    await Promise.race([\n      // Short-circuit the request handling promise if the request gets aborted.\n      requestAbortPromise,\n      requestListenersPromise,\n      options.controller[kResponsePromise]\n    ]);\n    return await options.controller[kResponsePromise];\n  });\n  if (requestAbortPromise.state === \"rejected\") {\n    options.onError(requestAbortPromise.rejectionReason);\n    return true;\n  }\n  if (result.error) {\n    if (await handleResponseError(result.error)) {\n      return true;\n    }\n    if (options.emitter.listenerCount(\"unhandledException\") > 0) {\n      const unhandledExceptionController = new RequestController(\n        options.request\n      );\n      await emitAsync(options.emitter, \"unhandledException\", {\n        error: result.error,\n        request: options.request,\n        requestId: options.requestId,\n        controller: unhandledExceptionController\n      }).then(() => {\n        if (unhandledExceptionController[kResponsePromise].state === \"pending\") {\n          unhandledExceptionController[kResponsePromise].resolve(void 0);\n        }\n      });\n      const nextResult = await until(\n        () => unhandledExceptionController[kResponsePromise]\n      );\n      if (nextResult.error) {\n        return handleResponseError(nextResult.error);\n      }\n      if (nextResult.data) {\n        return handleResponse(nextResult.data);\n      }\n    }\n    options.onResponse(createServerErrorResponse(result.error));\n    return true;\n  }\n  if (result.data) {\n    return handleResponse(result.data);\n  }\n  return false;\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs\nfunction hasConfigurableGlobal(propertyName) {\n  const descriptor = Object.getOwnPropertyDescriptor(globalThis, propertyName);\n  if (typeof descriptor === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"function\" && typeof descriptor.get() === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"undefined\" && descriptor.value == null) {\n    return false;\n  }\n  if (typeof descriptor.set === \"undefined\" && !descriptor.configurable) {\n    console.error(\n      `[MSW] Failed to apply interceptor: the global \\`${propertyName}\\` property is non-configurable. This is likely an issue with your environment. If you are using a framework, please open an issue about this in their repository.`\n    );\n    return false;\n  }\n  return true;\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-ARPHZXGT.mjs\nfunction createNetworkError(cause) {\n  return Object.assign(new TypeError(\"Failed to fetch\"), {\n    cause\n  });\n}\nvar REQUEST_BODY_HEADERS = [\n  \"content-encoding\",\n  \"content-language\",\n  \"content-location\",\n  \"content-type\",\n  \"content-length\"\n];\nvar kRedirectCount = Symbol(\"kRedirectCount\");\nasync function followFetchRedirect(request, response) {\n  if (response.status !== 303 && request.body != null) {\n    return Promise.reject(createNetworkError());\n  }\n  const requestUrl = new URL(request.url);\n  let locationUrl;\n  try {\n    locationUrl = new URL(response.headers.get(\"location\"), request.url);\n  } catch (error2) {\n    return Promise.reject(createNetworkError(error2));\n  }\n  if (!(locationUrl.protocol === \"http:\" || locationUrl.protocol === \"https:\")) {\n    return Promise.reject(\n      createNetworkError(\"URL scheme must be a HTTP(S) scheme\")\n    );\n  }\n  if (Reflect.get(request, kRedirectCount) > 20) {\n    return Promise.reject(createNetworkError(\"redirect count exceeded\"));\n  }\n  Object.defineProperty(request, kRedirectCount, {\n    value: (Reflect.get(request, kRedirectCount) || 0) + 1\n  });\n  if (request.mode === \"cors\" && (locationUrl.username || locationUrl.password) && !sameOrigin(requestUrl, locationUrl)) {\n    return Promise.reject(\n      createNetworkError('cross origin not allowed for request mode \"cors\"')\n    );\n  }\n  const requestInit = {};\n  if ([301, 302].includes(response.status) && request.method === \"POST\" || response.status === 303 && ![\"HEAD\", \"GET\"].includes(request.method)) {\n    requestInit.method = \"GET\";\n    requestInit.body = null;\n    REQUEST_BODY_HEADERS.forEach((headerName) => {\n      request.headers.delete(headerName);\n    });\n  }\n  if (!sameOrigin(requestUrl, locationUrl)) {\n    request.headers.delete(\"authorization\");\n    request.headers.delete(\"proxy-authorization\");\n    request.headers.delete(\"cookie\");\n    request.headers.delete(\"host\");\n  }\n  requestInit.headers = request.headers;\n  return fetch(new Request(locationUrl, requestInit));\n}\nfunction sameOrigin(left, right) {\n  if (left.origin === right.origin && left.origin === \"null\") {\n    return true;\n  }\n  if (left.protocol === right.protocol && left.hostname === right.hostname && left.port === right.port) {\n    return true;\n  }\n  return false;\n}\nvar BrotliDecompressionStream = class extends TransformStream {\n  constructor() {\n    console.warn(\n      \"[Interceptors]: Brotli decompression of response streams is not supported in the browser\"\n    );\n    super({\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n      }\n    });\n  }\n};\nvar PipelineStream = class extends TransformStream {\n  constructor(transformStreams, ...strategies) {\n    super({}, ...strategies);\n    const readable = [super.readable, ...transformStreams].reduce(\n      (readable2, transform) => readable2.pipeThrough(transform)\n    );\n    Object.defineProperty(this, \"readable\", {\n      get() {\n        return readable;\n      }\n    });\n  }\n};\nfunction parseContentEncoding(contentEncoding) {\n  return contentEncoding.toLowerCase().split(\",\").map((coding) => coding.trim());\n}\nfunction createDecompressionStream(contentEncoding) {\n  if (contentEncoding === \"\") {\n    return null;\n  }\n  const codings = parseContentEncoding(contentEncoding);\n  if (codings.length === 0) {\n    return null;\n  }\n  const transformers = codings.reduceRight(\n    (transformers2, coding) => {\n      if (coding === \"gzip\" || coding === \"x-gzip\") {\n        return transformers2.concat(new DecompressionStream(\"gzip\"));\n      } else if (coding === \"deflate\") {\n        return transformers2.concat(new DecompressionStream(\"deflate\"));\n      } else if (coding === \"br\") {\n        return transformers2.concat(new BrotliDecompressionStream());\n      } else {\n        transformers2.length = 0;\n      }\n      return transformers2;\n    },\n    []\n  );\n  return new PipelineStream(transformers);\n}\nfunction decompressResponse(response) {\n  if (response.body === null) {\n    return null;\n  }\n  const decompressionStream = createDecompressionStream(\n    response.headers.get(\"content-encoding\") || \"\"\n  );\n  if (!decompressionStream) {\n    return null;\n  }\n  response.body.pipeTo(decompressionStream.writable);\n  return decompressionStream.readable;\n}\nvar _FetchInterceptor = class extends Interceptor {\n  constructor() {\n    super(_FetchInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return hasConfigurableGlobal(\"fetch\");\n  }\n  async setup() {\n    const pureFetch = globalThis.fetch;\n    invariant(\n      !pureFetch[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    );\n    globalThis.fetch = async (input, init) => {\n      const requestId = createRequestId();\n      const resolvedInput = typeof input === \"string\" && typeof location !== \"undefined\" && !canParseUrl(input) ? new URL(input, location.href) : input;\n      const request = new Request(resolvedInput, init);\n      if (input instanceof Request) {\n        setRawRequest(request, input);\n      }\n      const responsePromise = new DeferredPromise();\n      const controller = new RequestController(request);\n      this.logger.info(\"[%s] %s\", request.method, request.url);\n      this.logger.info(\"awaiting for the mocked response...\");\n      this.logger.info(\n        'emitting the \"request\" event for %s listener(s)...',\n        this.emitter.listenerCount(\"request\")\n      );\n      const isRequestHandled = await handleRequest2({\n        request,\n        requestId,\n        emitter: this.emitter,\n        controller,\n        onResponse: async (rawResponse) => {\n          this.logger.info(\"received mocked response!\", {\n            rawResponse\n          });\n          const decompressedStream = decompressResponse(rawResponse);\n          const response = decompressedStream === null ? rawResponse : new FetchResponse(decompressedStream, rawResponse);\n          FetchResponse.setUrl(request.url, response);\n          if (FetchResponse.isRedirectResponse(response.status)) {\n            if (request.redirect === \"error\") {\n              responsePromise.reject(createNetworkError(\"unexpected redirect\"));\n              return;\n            }\n            if (request.redirect === \"follow\") {\n              followFetchRedirect(request, response).then(\n                (response2) => {\n                  responsePromise.resolve(response2);\n                },\n                (reason) => {\n                  responsePromise.reject(reason);\n                }\n              );\n              return;\n            }\n          }\n          if (this.emitter.listenerCount(\"response\") > 0) {\n            this.logger.info('emitting the \"response\" event...');\n            await emitAsync(this.emitter, \"response\", {\n              // Clone the mocked response for the \"response\" event listener.\n              // This way, the listener can read the response and not lock its body\n              // for the actual fetch consumer.\n              response: response.clone(),\n              isMockedResponse: true,\n              request,\n              requestId\n            });\n          }\n          responsePromise.resolve(response);\n        },\n        onRequestError: (response) => {\n          this.logger.info(\"request has errored!\", { response });\n          responsePromise.reject(createNetworkError(response));\n        },\n        onError: (error2) => {\n          this.logger.info(\"request has been aborted!\", { error: error2 });\n          responsePromise.reject(error2);\n        }\n      });\n      if (isRequestHandled) {\n        this.logger.info(\"request has been handled, returning mock promise...\");\n        return responsePromise;\n      }\n      this.logger.info(\n        \"no mocked response received, performing request as-is...\"\n      );\n      const requestCloneForResponseEvent = request.clone();\n      return pureFetch(request).then(async (response) => {\n        this.logger.info(\"original fetch performed\", response);\n        if (this.emitter.listenerCount(\"response\") > 0) {\n          this.logger.info('emitting the \"response\" event...');\n          const responseClone = response.clone();\n          await emitAsync(this.emitter, \"response\", {\n            response: responseClone,\n            isMockedResponse: false,\n            request: requestCloneForResponseEvent,\n            requestId\n          });\n        }\n        return response;\n      });\n    };\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.fetch = pureFetch;\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      );\n    });\n  }\n};\nvar FetchInterceptor = _FetchInterceptor;\nFetchInterceptor.symbol = Symbol(\"fetch\");\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QKSBFQDK.mjs\nfunction concatArrayBuffer(left, right) {\n  const result = new Uint8Array(left.byteLength + right.byteLength);\n  result.set(left, 0);\n  result.set(right, left.byteLength);\n  return result;\n}\nvar EventPolyfill = class {\n  constructor(type, options) {\n    this.NONE = 0;\n    this.CAPTURING_PHASE = 1;\n    this.AT_TARGET = 2;\n    this.BUBBLING_PHASE = 3;\n    this.type = \"\";\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options == null ? void 0 : options.target) || null;\n    this.currentTarget = (options == null ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  composedPath() {\n    return [];\n  }\n  initEvent(type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n  }\n  stopImmediatePropagation() {\n  }\n};\nvar ProgressEventPolyfill = class extends EventPolyfill {\n  constructor(type, init) {\n    super(type);\n    this.lengthComputable = (init == null ? void 0 : init.lengthComputable) || false;\n    this.composed = (init == null ? void 0 : init.composed) || false;\n    this.loaded = (init == null ? void 0 : init.loaded) || 0;\n    this.total = (init == null ? void 0 : init.total) || 0;\n  }\n};\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== \"undefined\";\nfunction createEvent(target, type, init) {\n  const progressEvents = [\n    \"error\",\n    \"progress\",\n    \"loadstart\",\n    \"loadend\",\n    \"load\",\n    \"timeout\",\n    \"abort\"\n  ];\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill;\n  const event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init == null ? void 0 : init.loaded) || 0,\n    total: (init == null ? void 0 : init.total) || 0\n  }) : new EventPolyfill(type, {\n    target,\n    currentTarget: target\n  });\n  return event;\n}\nfunction findPropertySource(target, propertyName) {\n  if (!(propertyName in target)) {\n    return null;\n  }\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName);\n  if (hasProperty) {\n    return target;\n  }\n  const prototype = Reflect.getPrototypeOf(target);\n  return prototype ? findPropertySource(prototype, propertyName) : null;\n}\nfunction createProxy(target, options) {\n  const proxy = new Proxy(target, optionsToProxyHandler(options));\n  return proxy;\n}\nfunction optionsToProxyHandler(options) {\n  const { constructorCall, methodCall, getProperty, setProperty } = options;\n  const handler = {};\n  if (typeof constructorCall !== \"undefined\") {\n    handler.construct = function(target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target, args, newTarget);\n      return constructorCall.call(newTarget, args, next);\n    };\n  }\n  handler.set = function(target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target;\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      );\n      if (typeof (ownDescriptors == null ? void 0 : ownDescriptors.set) !== \"undefined\") {\n        ownDescriptors.set.apply(target, [nextValue]);\n        return true;\n      }\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue\n      });\n    };\n    if (typeof setProperty !== \"undefined\") {\n      return setProperty.call(target, [propertyName, nextValue], next);\n    }\n    return next();\n  };\n  handler.get = function(target, propertyName, receiver) {\n    const next = () => target[propertyName];\n    const value = typeof getProperty !== \"undefined\" ? getProperty.call(target, [propertyName, receiver], next) : next();\n    if (typeof value === \"function\") {\n      return (...args) => {\n        const next2 = value.bind(target, ...args);\n        if (typeof methodCall !== \"undefined\") {\n          return methodCall.call(target, [propertyName, args], next2);\n        }\n        return next2();\n      };\n    }\n    return value;\n  };\n  return handler;\n}\nfunction isDomParserSupportedType(type) {\n  const supportedTypes = [\n    \"application/xhtml+xml\",\n    \"application/xml\",\n    \"image/svg+xml\",\n    \"text/html\",\n    \"text/xml\"\n  ];\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType);\n  });\n}\nfunction parseJson(data) {\n  try {\n    const json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\nfunction createResponse(request, body) {\n  const responseBodyOrNull = FetchResponse.isResponseWithBody(request.status) ? body : null;\n  return new FetchResponse(responseBodyOrNull, {\n    url: request.responseURL,\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    )\n  });\n}\nfunction createHeadersFromXMLHttpReqestHeaders(headersString) {\n  const headers = new Headers();\n  const lines = headersString.split(/[\\r\\n]+/);\n  for (const line of lines) {\n    if (line.trim() === \"\") {\n      continue;\n    }\n    const [name, ...parts] = line.split(\": \");\n    const value = parts.join(\": \");\n    headers.append(name, value);\n  }\n  return headers;\n}\nasync function getBodyByteLength(input) {\n  const explicitContentLength = input.headers.get(\"content-length\");\n  if (explicitContentLength != null && explicitContentLength !== \"\") {\n    return Number(explicitContentLength);\n  }\n  const buffer = await input.arrayBuffer();\n  return buffer.byteLength;\n}\nvar kIsRequestHandled = Symbol(\"kIsRequestHandled\");\nvar IS_NODE2 = isNodeProcess();\nvar kFetchRequest = Symbol(\"kFetchRequest\");\nvar XMLHttpRequestController = class {\n  constructor(initialRequest, logger) {\n    this.initialRequest = initialRequest;\n    this.logger = logger;\n    this.method = \"GET\";\n    this.url = null;\n    this[kIsRequestHandled] = false;\n    this.events = /* @__PURE__ */ new Map();\n    this.uploadEvents = /* @__PURE__ */ new Map();\n    this.requestId = createRequestId();\n    this.requestHeaders = new Headers();\n    this.responseBuffer = new Uint8Array();\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case \"ontimeout\": {\n            const eventName = propertyName.slice(\n              2\n            );\n            this.request.addEventListener(eventName, nextValue);\n            return invoke();\n          }\n          default: {\n            return invoke();\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        var _a;\n        switch (methodName) {\n          case \"open\": {\n            const [method, url] = args;\n            if (typeof url === \"undefined\") {\n              this.method = \"GET\";\n              this.url = toAbsoluteUrl(method);\n            } else {\n              this.method = method;\n              this.url = toAbsoluteUrl(url);\n            }\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`);\n            this.logger.info(\"open\", this.method, this.url.href);\n            return invoke();\n          }\n          case \"addEventListener\": {\n            const [eventName, listener] = args;\n            this.registerEvent(eventName, listener);\n            this.logger.info(\"addEventListener\", eventName, listener);\n            return invoke();\n          }\n          case \"setRequestHeader\": {\n            const [name, value] = args;\n            this.requestHeaders.set(name, value);\n            this.logger.info(\"setRequestHeader\", name, value);\n            return invoke();\n          }\n          case \"send\": {\n            const [body] = args;\n            this.request.addEventListener(\"load\", () => {\n              if (typeof this.onResponse !== \"undefined\") {\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                );\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: this[kIsRequestHandled],\n                  request: fetchRequest,\n                  requestId: this.requestId\n                });\n              }\n            });\n            const requestBody = typeof body === \"string\" ? encodeBuffer(body) : body;\n            const fetchRequest = this.toFetchApiRequest(requestBody);\n            this[kFetchRequest] = fetchRequest.clone();\n            const onceRequestSettled = ((_a = this.onRequest) == null ? void 0 : _a.call(this, {\n              request: fetchRequest,\n              requestId: this.requestId\n            })) || Promise.resolve();\n            onceRequestSettled.finally(() => {\n              if (!this[kIsRequestHandled]) {\n                this.logger.info(\n                  \"request callback settled but request has not been handled (readystate %d), performing as-is...\",\n                  this.request.readyState\n                );\n                if (IS_NODE2) {\n                  this.request.setRequestHeader(\n                    INTERNAL_REQUEST_ID_HEADER_NAME,\n                    this.requestId\n                  );\n                }\n                return invoke();\n              }\n            });\n            break;\n          }\n          default: {\n            return invoke();\n          }\n        }\n      }\n    });\n    define(\n      this.request,\n      \"upload\",\n      createProxy(this.request.upload, {\n        setProperty: ([propertyName, nextValue], invoke) => {\n          switch (propertyName) {\n            case \"onloadstart\":\n            case \"onprogress\":\n            case \"onaboart\":\n            case \"onerror\":\n            case \"onload\":\n            case \"ontimeout\":\n            case \"onloadend\": {\n              const eventName = propertyName.slice(\n                2\n              );\n              this.registerUploadEvent(eventName, nextValue);\n            }\n          }\n          return invoke();\n        },\n        methodCall: ([methodName, args], invoke) => {\n          switch (methodName) {\n            case \"addEventListener\": {\n              const [eventName, listener] = args;\n              this.registerUploadEvent(eventName, listener);\n              this.logger.info(\"upload.addEventListener\", eventName, listener);\n              return invoke();\n            }\n          }\n        }\n      })\n    );\n  }\n  registerEvent(eventName, listener) {\n    const prevEvents = this.events.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.events.set(eventName, nextEvents);\n    this.logger.info('registered event \"%s\"', eventName, listener);\n  }\n  registerUploadEvent(eventName, listener) {\n    const prevEvents = this.uploadEvents.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.uploadEvents.set(eventName, nextEvents);\n    this.logger.info('registered upload event \"%s\"', eventName, listener);\n  }\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  async respondWith(response) {\n    this[kIsRequestHandled] = true;\n    if (this[kFetchRequest]) {\n      const totalRequestBodyLength = await getBodyByteLength(\n        this[kFetchRequest]\n      );\n      this.trigger(\"loadstart\", this.request.upload, {\n        loaded: 0,\n        total: totalRequestBodyLength\n      });\n      this.trigger(\"progress\", this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength\n      });\n      this.trigger(\"load\", this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength\n      });\n      this.trigger(\"loadend\", this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength\n      });\n    }\n    this.logger.info(\n      \"responding with a mocked response: %d %s\",\n      response.status,\n      response.statusText\n    );\n    define(this.request, \"status\", response.status);\n    define(this.request, \"statusText\", response.statusText);\n    define(this.request, \"responseURL\", this.url.href);\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args) => {\n        this.logger.info(\"getResponseHeader\", args[0]);\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info(\"headers not received yet, returning null\");\n          return null;\n        }\n        const headerValue = response.headers.get(args[0]);\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        );\n        return headerValue;\n      }\n    });\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info(\"getAllResponseHeaders\");\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info(\"headers not received yet, returning empty string\");\n            return \"\";\n          }\n          const headersList = Array.from(response.headers.entries());\n          const allHeaders = headersList.map(([headerName, headerValue]) => {\n            return `${headerName}: ${headerValue}`;\n          }).join(\"\\r\\n\");\n          this.logger.info(\"resolved all response headers to\", allHeaders);\n          return allHeaders;\n        }\n      }\n    );\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML\n      }\n    });\n    const totalResponseBodyLength = await getBodyByteLength(response.clone());\n    this.logger.info(\"calculated response body length\", totalResponseBodyLength);\n    this.trigger(\"loadstart\", this.request, {\n      loaded: 0,\n      total: totalResponseBodyLength\n    });\n    this.setReadyState(this.request.HEADERS_RECEIVED);\n    this.setReadyState(this.request.LOADING);\n    const finalizeResponse = () => {\n      this.logger.info(\"finalizing the mocked response...\");\n      this.setReadyState(this.request.DONE);\n      this.trigger(\"load\", this.request, {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n      this.trigger(\"loadend\", this.request, {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n    };\n    if (response.body) {\n      this.logger.info(\"mocked response has body, streaming...\");\n      const reader = response.body.getReader();\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read();\n        if (done) {\n          this.logger.info(\"response body stream done!\");\n          finalizeResponse();\n          return;\n        }\n        if (value) {\n          this.logger.info(\"read response body chunk:\", value);\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value);\n          this.trigger(\"progress\", this.request, {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength\n          });\n        }\n        readNextResponseBodyChunk();\n      };\n      readNextResponseBodyChunk();\n    } else {\n      finalizeResponse();\n    }\n  }\n  responseBufferToText() {\n    return decodeBuffer(this.responseBuffer);\n  }\n  get response() {\n    this.logger.info(\n      \"getResponse (responseType: %s)\",\n      this.request.responseType\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    switch (this.request.responseType) {\n      case \"json\": {\n        const responseJson = parseJson(this.responseBufferToText());\n        this.logger.info(\"resolved response JSON\", responseJson);\n        return responseJson;\n      }\n      case \"arraybuffer\": {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer);\n        this.logger.info(\"resolved response ArrayBuffer\", arrayBuffer);\n        return arrayBuffer;\n      }\n      case \"blob\": {\n        const mimeType = this.request.getResponseHeader(\"Content-Type\") || \"text/plain\";\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType\n        });\n        this.logger.info(\n          \"resolved response Blob (mime type: %s)\",\n          responseBlob,\n          mimeType\n        );\n        return responseBlob;\n      }\n      default: {\n        const responseText = this.responseBufferToText();\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        );\n        return responseText;\n      }\n    }\n  }\n  get responseText() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"text\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.LOADING && this.request.readyState !== this.request.DONE) {\n      return \"\";\n    }\n    const responseText = this.responseBufferToText();\n    this.logger.info('getResponseText: \"%s\"', responseText);\n    return responseText;\n  }\n  get responseXML() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"document\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    const contentType = this.request.getResponseHeader(\"Content-Type\") || \"\";\n    if (typeof DOMParser === \"undefined\") {\n      console.warn(\n        \"Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.\"\n      );\n      return null;\n    }\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      );\n    }\n    return null;\n  }\n  errorWith(error2) {\n    this[kIsRequestHandled] = true;\n    this.logger.info(\"responding with an error\");\n    this.setReadyState(this.request.DONE);\n    this.trigger(\"error\", this.request);\n    this.trigger(\"loadend\", this.request);\n  }\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  setReadyState(nextReadyState) {\n    this.logger.info(\n      \"setReadyState: %d -> %d\",\n      this.request.readyState,\n      nextReadyState\n    );\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info(\"ready state identical, skipping transition...\");\n      return;\n    }\n    define(this.request, \"readyState\", nextReadyState);\n    this.logger.info(\"set readyState to: %d\", nextReadyState);\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...');\n      this.trigger(\"readystatechange\", this.request);\n    }\n  }\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  trigger(eventName, target, options) {\n    const callback = target[`on${eventName}`];\n    const event = createEvent(target, eventName, options);\n    this.logger.info('trigger \"%s\"', eventName, options || \"\");\n    if (typeof callback === \"function\") {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName);\n      callback.call(target, event);\n    }\n    const events = target instanceof XMLHttpRequestUpload ? this.uploadEvents : this.events;\n    for (const [registeredEventName, listeners] of events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        );\n        listeners.forEach((listener) => listener.call(target, event));\n      }\n    }\n  }\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  toFetchApiRequest(body) {\n    this.logger.info(\"converting request to a Fetch API Request...\");\n    const resolvedBody = body instanceof Document ? body.documentElement.innerText : body;\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? \"include\" : \"same-origin\",\n      body: [\"GET\", \"HEAD\"].includes(this.method.toUpperCase()) ? null : resolvedBody\n    });\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case \"append\":\n          case \"set\": {\n            const [headerName, headerValue] = args;\n            this.request.setRequestHeader(headerName, headerValue);\n            break;\n          }\n          case \"delete\": {\n            const [headerName] = args;\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            );\n            break;\n          }\n        }\n        return invoke();\n      }\n    });\n    define(fetchRequest, \"headers\", proxyHeaders);\n    setRawRequest(fetchRequest, this.request);\n    this.logger.info(\"converted request to a Fetch API Request!\", fetchRequest);\n    return fetchRequest;\n  }\n};\nfunction toAbsoluteUrl(url) {\n  if (typeof location === \"undefined\") {\n    return new URL(url);\n  }\n  return new URL(url.toString(), location.href);\n}\nfunction define(target, property, value) {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value\n  });\n}\nfunction createXMLHttpRequestProxy({\n  emitter,\n  logger\n}) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info(\"constructed new XMLHttpRequest\");\n      const originalRequest = Reflect.construct(\n        target,\n        args,\n        newTarget\n      );\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      );\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        );\n      }\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      );\n      xhrRequestController.onRequest = async function({ request, requestId }) {\n        const controller = new RequestController(request);\n        this.logger.info(\"awaiting mocked response...\");\n        this.logger.info(\n          'emitting the \"request\" event for %s listener(s)...',\n          emitter.listenerCount(\"request\")\n        );\n        const isRequestHandled = await handleRequest2({\n          request,\n          requestId,\n          controller,\n          emitter,\n          onResponse: async (response) => {\n            await this.respondWith(response);\n          },\n          onRequestError: () => {\n            this.errorWith(new TypeError(\"Network error\"));\n          },\n          onError: (error2) => {\n            this.logger.info(\"request errored!\", { error: error2 });\n            if (error2 instanceof Error) {\n              this.errorWith(error2);\n            }\n          }\n        });\n        if (!isRequestHandled) {\n          this.logger.info(\n            \"no mocked response received, performing request as-is...\"\n          );\n        }\n      };\n      xhrRequestController.onResponse = async function({\n        response,\n        isMockedResponse,\n        request,\n        requestId\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount(\"response\")\n        );\n        emitter.emit(\"response\", {\n          response,\n          isMockedResponse,\n          request,\n          requestId\n        });\n      };\n      return xhrRequestController.request;\n    }\n  });\n  return XMLHttpRequestProxy;\n}\nvar _XMLHttpRequestInterceptor = class extends Interceptor {\n  constructor() {\n    super(_XMLHttpRequestInterceptor.interceptorSymbol);\n  }\n  checkEnvironment() {\n    return hasConfigurableGlobal(\"XMLHttpRequest\");\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info('patching \"XMLHttpRequest\" module...');\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest;\n    invariant(\n      !PureXMLHttpRequest[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    );\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger\n    });\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    );\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.XMLHttpRequest = PureXMLHttpRequest;\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      );\n    });\n  }\n};\nvar XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;\nXMLHttpRequestInterceptor.interceptorSymbol = Symbol(\"xhr\");\n\n// src/browser/setupWorker/start/createFallbackRequestListener.ts\n\n\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", async ({ request, requestId, controller }) => {\n    const requestCloneForLogs = request.clone();\n    const response = await (0,_core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.handleRequest)(\n      request,\n      requestId,\n      context.getRequestHandlers().filter((0,_core_utils_internal_isHandlerKind_mjs__WEBPACK_IMPORTED_MODULE_3__.isHandlerKind)(\"RequestHandler\")),\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", ({ response: response2 }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response: response2,\n                parsedResult\n              });\n            });\n          }\n        }\n      }\n    );\n    if (response) {\n      controller.respondWith(response);\n    }\n  });\n  interceptor.on(\n    \"response\",\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n        {\n          response,\n          request,\n          requestId\n        }\n      );\n    }\n  );\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/browser/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(\n      context,\n      options\n    );\n    printStartMessage({\n      message: \"Mocking enabled (fallback mode).\",\n      quiet: options.quiet\n    });\n    return void 0;\n  };\n}\n\n// src/browser/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    context.fallbackInterceptor?.dispose();\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n}\n\n// src/browser/setupWorker/setupWorker.ts\n\n\n\n\n// src/browser/utils/supportsReadableStreamTransfer.ts\nfunction supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close()\n    });\n    const message = new MessageChannel();\n    message.port1.postMessage(stream, [stream]);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n// src/browser/setupWorker/setupWorker.ts\n\n\n\nvar SetupWorkerApi = class extends _core_SetupApi_mjs__WEBPACK_IMPORTED_MODULE_5__.SetupApi {\n  context;\n  startHandler = null;\n  stopHandler = null;\n  listeners;\n  constructor(...handlers) {\n    super(...handlers);\n    invariant(\n      !isNodeProcess(),\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n        \"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"\n      )\n    );\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      getRequestHandlers: () => {\n        return this.handlersController.currentHandlers();\n      },\n      registration: null,\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", (event) => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: (type) => {\n          this.context.worker?.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: (eventType) => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = (event) => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error2) {\n                reject(error2);\n              }\n            };\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"message\",\n                handleIncomingMessage\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"messageerror\",\n                reject\n              )\n            );\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind());\n          });\n        }\n      },\n      supports: {\n        serviceWorkerApi: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\",\n        readableStreamTransfer: supportsReadableStreamTransfer()\n      }\n    };\n    this.startHandler = context.supports.serviceWorkerApi ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.supports.serviceWorkerApi ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  async start(options = {}) {\n    if (options.waitUntilReady === true) {\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n        'The \"waitUntilReady\" option has been deprecated. Please remove it from this \"worker.start()\" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'\n      );\n    }\n    this.context.startOptions = (0,_core_utils_internal_mergeRight_mjs__WEBPACK_IMPORTED_MODULE_6__.mergeRight)(\n      DEFAULT_START_OPTIONS,\n      options\n    );\n    (0,_core_ws_handleWebSocketEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.handleWebSocketEvent)({\n      getUnhandledRequestStrategy: () => {\n        return this.context.startOptions.onUnhandledRequest;\n      },\n      getHandlers: () => {\n        return this.handlersController.currentHandlers();\n      },\n      onMockedConnection: (connection) => {\n        if (!this.context.startOptions.quiet) {\n          (0,_core_ws_utils_attachWebSocketLogger_mjs__WEBPACK_IMPORTED_MODULE_8__.attachWebSocketLogger)(connection);\n        }\n      },\n      onPassthroughConnection() {\n      }\n    });\n    _core_ws_webSocketInterceptor_mjs__WEBPACK_IMPORTED_MODULE_9__.webSocketInterceptor.apply();\n    this.subscriptions.push(() => {\n      _core_ws_webSocketInterceptor_mjs__WEBPACK_IMPORTED_MODULE_9__.webSocketInterceptor.dispose();\n    });\n    return await this.startHandler(this.context.startOptions, options);\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/browser/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/HttpResponse.mjs":
/*!****************************************************!*\
  !*** ./node_modules/msw/lib/core/HttpResponse.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpResponse: function() { return /* binding */ HttpResponse; },\n/* harmony export */   bodyType: function() { return /* binding */ bodyType; }\n/* harmony export */ });\n/* harmony import */ var _mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/interceptors */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/index.mjs\");\n/* harmony import */ var _utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/HttpResponse/decorators.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs\");\n\n\nconst bodyType = Symbol(\"bodyType\");\nclass HttpResponse extends _mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__.FetchResponse {\n  [bodyType] = null;\n  constructor(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init);\n    super(body, responseInit);\n    (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.decorateResponse)(this, responseInit);\n  }\n  static error() {\n    return super.error();\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/plain\");\n    }\n    if (!responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\n        \"Content-Length\",\n        body ? new Blob([body]).size.toString() : \"0\"\n      );\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"application/json\");\n    }\n    const responseText = JSON.stringify(body);\n    if (!responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\n        \"Content-Length\",\n        responseText ? new Blob([responseText]).size.toString() : \"0\"\n      );\n    }\n    return new HttpResponse(responseText, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/xml\");\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/html\"` body.\n   * @example\n   * HttpResponse.html(`<p class=\"author\">Jane Doe</p>`)\n   * HttpResponse.html(`<main id=\"abc-123\">Main text</main>`, { status: 201 })\n   */\n  static html(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/html\");\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"application/octet-stream\");\n    }\n    if (body && !responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\"Content-Length\", body.byteLength.toString());\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body, init) {\n    return new HttpResponse(body, (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizeResponseInit)(init));\n  }\n}\n\n//# sourceMappingURL=HttpResponse.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvSHR0cFJlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBSVA7QUFDN0M7QUFDQSwyQkFBMkIsOERBQWE7QUFDeEM7QUFDQTtBQUNBLHlCQUF5Qix5RkFBcUI7QUFDOUM7QUFDQSxJQUFJLG9GQUFnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGFBQWE7QUFDL0M7QUFDQTtBQUNBLHlCQUF5Qix5RkFBcUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixtQkFBbUI7QUFDNUMseUJBQXlCLHlCQUF5QixJQUFJLGFBQWE7QUFDbkU7QUFDQTtBQUNBLHlCQUF5Qix5RkFBcUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsYUFBYTtBQUNqRTtBQUNBO0FBQ0EseUJBQXlCLHlGQUFxQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsYUFBYTtBQUM3RTtBQUNBO0FBQ0EseUJBQXlCLHlGQUFxQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIseUZBQXFCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseUZBQXFCO0FBQ3ZEO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvSHR0cFJlc3BvbnNlLm1qcz84ZGE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZldGNoUmVzcG9uc2UgfSBmcm9tIFwiQG1zd2pzL2ludGVyY2VwdG9yc1wiO1xuaW1wb3J0IHtcbiAgZGVjb3JhdGVSZXNwb25zZSxcbiAgbm9ybWFsaXplUmVzcG9uc2VJbml0XG59IGZyb20gJy4vdXRpbHMvSHR0cFJlc3BvbnNlL2RlY29yYXRvcnMubWpzJztcbmNvbnN0IGJvZHlUeXBlID0gU3ltYm9sKFwiYm9keVR5cGVcIik7XG5jbGFzcyBIdHRwUmVzcG9uc2UgZXh0ZW5kcyBGZXRjaFJlc3BvbnNlIHtcbiAgW2JvZHlUeXBlXSA9IG51bGw7XG4gIGNvbnN0cnVjdG9yKGJvZHksIGluaXQpIHtcbiAgICBjb25zdCByZXNwb25zZUluaXQgPSBub3JtYWxpemVSZXNwb25zZUluaXQoaW5pdCk7XG4gICAgc3VwZXIoYm9keSwgcmVzcG9uc2VJbml0KTtcbiAgICBkZWNvcmF0ZVJlc3BvbnNlKHRoaXMsIHJlc3BvbnNlSW5pdCk7XG4gIH1cbiAgc3RhdGljIGVycm9yKCkge1xuICAgIHJldHVybiBzdXBlci5lcnJvcigpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBgUmVzcG9uc2VgIHdpdGggYSBgQ29udGVudC1UeXBlOiBcInRleHQvcGxhaW5cImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLnRleHQoJ2hlbGxvIHdvcmxkJylcbiAgICogSHR0cFJlc3BvbnNlLnRleHQoJ0Vycm9yJywgeyBzdGF0dXM6IDUwMCB9KVxuICAgKi9cbiAgc3RhdGljIHRleHQoYm9keSwgaW5pdCkge1xuICAgIGNvbnN0IHJlc3BvbnNlSW5pdCA9IG5vcm1hbGl6ZVJlc3BvbnNlSW5pdChpbml0KTtcbiAgICBpZiAoIXJlc3BvbnNlSW5pdC5oZWFkZXJzLmhhcyhcIkNvbnRlbnQtVHlwZVwiKSkge1xuICAgICAgcmVzcG9uc2VJbml0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIFwidGV4dC9wbGFpblwiKTtcbiAgICB9XG4gICAgaWYgKCFyZXNwb25zZUluaXQuaGVhZGVycy5oYXMoXCJDb250ZW50LUxlbmd0aFwiKSkge1xuICAgICAgcmVzcG9uc2VJbml0LmhlYWRlcnMuc2V0KFxuICAgICAgICBcIkNvbnRlbnQtTGVuZ3RoXCIsXG4gICAgICAgIGJvZHkgPyBuZXcgQmxvYihbYm9keV0pLnNpemUudG9TdHJpbmcoKSA6IFwiMFwiXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEh0dHBSZXNwb25zZShib2R5LCByZXNwb25zZUluaXQpO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBgUmVzcG9uc2VgIHdpdGggYSBgQ29udGVudC1UeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLmpzb24oeyBmaXJzdE5hbWU6ICdKb2huJyB9KVxuICAgKiBIdHRwUmVzcG9uc2UuanNvbih7IGVycm9yOiAnTm90IEF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSlcbiAgICovXG4gIHN0YXRpYyBqc29uKGJvZHksIGluaXQpIHtcbiAgICBjb25zdCByZXNwb25zZUluaXQgPSBub3JtYWxpemVSZXNwb25zZUluaXQoaW5pdCk7XG4gICAgaWYgKCFyZXNwb25zZUluaXQuaGVhZGVycy5oYXMoXCJDb250ZW50LVR5cGVcIikpIHtcbiAgICAgIHJlc3BvbnNlSW5pdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IEpTT04uc3RyaW5naWZ5KGJvZHkpO1xuICAgIGlmICghcmVzcG9uc2VJbml0LmhlYWRlcnMuaGFzKFwiQ29udGVudC1MZW5ndGhcIikpIHtcbiAgICAgIHJlc3BvbnNlSW5pdC5oZWFkZXJzLnNldChcbiAgICAgICAgXCJDb250ZW50LUxlbmd0aFwiLFxuICAgICAgICByZXNwb25zZVRleHQgPyBuZXcgQmxvYihbcmVzcG9uc2VUZXh0XSkuc2l6ZS50b1N0cmluZygpIDogXCIwXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgSHR0cFJlc3BvbnNlKHJlc3BvbnNlVGV4dCwgcmVzcG9uc2VJbml0KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgYFJlc3BvbnNlYCB3aXRoIGEgYENvbnRlbnQtVHlwZTogXCJhcHBsaWNhdGlvbi94bWxcImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLnhtbChgPHVzZXIgbmFtZT1cIkpvaG5cIiAvPmApXG4gICAqIEh0dHBSZXNwb25zZS54bWwoYDxhcnRpY2xlIGlkPVwiYWJjLTEyM1wiIC8+YCwgeyBzdGF0dXM6IDIwMSB9KVxuICAgKi9cbiAgc3RhdGljIHhtbChib2R5LCBpbml0KSB7XG4gICAgY29uc3QgcmVzcG9uc2VJbml0ID0gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQpO1xuICAgIGlmICghcmVzcG9uc2VJbml0LmhlYWRlcnMuaGFzKFwiQ29udGVudC1UeXBlXCIpKSB7XG4gICAgICByZXNwb25zZUluaXQuaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJ0ZXh0L3htbFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBIdHRwUmVzcG9uc2UoYm9keSwgcmVzcG9uc2VJbml0KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgYFJlc3BvbnNlYCB3aXRoIGEgYENvbnRlbnQtVHlwZTogXCJ0ZXh0L2h0bWxcImAgYm9keS5cbiAgICogQGV4YW1wbGVcbiAgICogSHR0cFJlc3BvbnNlLmh0bWwoYDxwIGNsYXNzPVwiYXV0aG9yXCI+SmFuZSBEb2U8L3A+YClcbiAgICogSHR0cFJlc3BvbnNlLmh0bWwoYDxtYWluIGlkPVwiYWJjLTEyM1wiPk1haW4gdGV4dDwvbWFpbj5gLCB7IHN0YXR1czogMjAxIH0pXG4gICAqL1xuICBzdGF0aWMgaHRtbChib2R5LCBpbml0KSB7XG4gICAgY29uc3QgcmVzcG9uc2VJbml0ID0gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQpO1xuICAgIGlmICghcmVzcG9uc2VJbml0LmhlYWRlcnMuaGFzKFwiQ29udGVudC1UeXBlXCIpKSB7XG4gICAgICByZXNwb25zZUluaXQuaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJ0ZXh0L2h0bWxcIik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgSHR0cFJlc3BvbnNlKGJvZHksIHJlc3BvbnNlSW5pdCk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIGBSZXNwb25zZWAgd2l0aCBhbiBgQXJyYXlCdWZmZXJgIGJvZHkuXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcigzKVxuICAgKiBjb25zdCB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKVxuICAgKiB2aWV3LnNldChbMSwgMiwgM10pXG4gICAqXG4gICAqIEh0dHBSZXNwb25zZS5hcnJheUJ1ZmZlcihidWZmZXIpXG4gICAqL1xuICBzdGF0aWMgYXJyYXlCdWZmZXIoYm9keSwgaW5pdCkge1xuICAgIGNvbnN0IHJlc3BvbnNlSW5pdCA9IG5vcm1hbGl6ZVJlc3BvbnNlSW5pdChpbml0KTtcbiAgICBpZiAoIXJlc3BvbnNlSW5pdC5oZWFkZXJzLmhhcyhcIkNvbnRlbnQtVHlwZVwiKSkge1xuICAgICAgcmVzcG9uc2VJbml0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCIpO1xuICAgIH1cbiAgICBpZiAoYm9keSAmJiAhcmVzcG9uc2VJbml0LmhlYWRlcnMuaGFzKFwiQ29udGVudC1MZW5ndGhcIikpIHtcbiAgICAgIHJlc3BvbnNlSW5pdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtTGVuZ3RoXCIsIGJvZHkuYnl0ZUxlbmd0aC50b1N0cmluZygpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBIdHRwUmVzcG9uc2UoYm9keSwgcmVzcG9uc2VJbml0KTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgYFJlc3BvbnNlYCB3aXRoIGEgYEZvcm1EYXRhYCBib2R5LlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCBkYXRhID0gbmV3IEZvcm1EYXRhKClcbiAgICogZGF0YS5zZXQoJ25hbWUnLCAnQWxpY2UnKVxuICAgKlxuICAgKiBIdHRwUmVzcG9uc2UuZm9ybURhdGEoZGF0YSlcbiAgICovXG4gIHN0YXRpYyBmb3JtRGF0YShib2R5LCBpbml0KSB7XG4gICAgcmV0dXJuIG5ldyBIdHRwUmVzcG9uc2UoYm9keSwgbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQpKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSHR0cFJlc3BvbnNlLFxuICBib2R5VHlwZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0dHBSZXNwb25zZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/HttpResponse.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/SetupApi.mjs":
/*!************************************************!*\
  !*** ./node_modules/msw/lib/core/SetupApi.mjs ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HandlersController: function() { return /* binding */ HandlersController; },\n/* harmony export */   InMemoryHandlersController: function() { return /* binding */ InMemoryHandlersController; },\n/* harmony export */   SetupApi: function() { return /* binding */ SetupApi; }\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"(app-pages-browser)/./node_modules/strict-event-emitter/lib/index.mjs\");\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_internal_pipeEvents_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/internal/pipeEvents.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs\");\n/* harmony import */ var _utils_internal_toReadonlyArray_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/internal/toReadonlyArray.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs\");\n/* harmony import */ var _utils_internal_Disposable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/internal/Disposable.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/Disposable.mjs\");\n\n\n\n\n\n\nclass HandlersController {\n}\nclass InMemoryHandlersController {\n  constructor(initialHandlers) {\n    this.initialHandlers = initialHandlers;\n    this.handlers = [...initialHandlers];\n  }\n  handlers;\n  prepend(runtimeHandles) {\n    this.handlers.unshift(...runtimeHandles);\n  }\n  reset(nextHandlers) {\n    this.handlers = nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers];\n  }\n  currentHandlers() {\n    return this.handlers;\n  }\n}\nclass SetupApi extends _utils_internal_Disposable_mjs__WEBPACK_IMPORTED_MODULE_2__.Disposable {\n  handlersController;\n  emitter;\n  publicEmitter;\n  events;\n  constructor(...initialHandlers) {\n    super();\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n      this.validateHandlers(initialHandlers),\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.devUtils.formatMessage(\n        `Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?`\n      )\n    );\n    this.handlersController = new InMemoryHandlersController(initialHandlers);\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.publicEmitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    (0,_utils_internal_pipeEvents_mjs__WEBPACK_IMPORTED_MODULE_4__.pipeEvents)(this.emitter, this.publicEmitter);\n    this.events = this.createLifeCycleEvents();\n    this.subscriptions.push(() => {\n      this.emitter.removeAllListeners();\n      this.publicEmitter.removeAllListeners();\n    });\n  }\n  validateHandlers(handlers) {\n    return handlers.every((handler) => !Array.isArray(handler));\n  }\n  use(...runtimeHandlers) {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n      this.validateHandlers(runtimeHandlers),\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.devUtils.formatMessage(\n        `Failed to call \"use()\" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?`\n      )\n    );\n    this.handlersController.prepend(runtimeHandlers);\n  }\n  restoreHandlers() {\n    this.handlersController.currentHandlers().forEach((handler) => {\n      if (\"isUsed\" in handler) {\n        handler.isUsed = false;\n      }\n    });\n  }\n  resetHandlers(...nextHandlers) {\n    this.handlersController.reset(nextHandlers);\n  }\n  listHandlers() {\n    return (0,_utils_internal_toReadonlyArray_mjs__WEBPACK_IMPORTED_MODULE_5__.toReadonlyArray)(this.handlersController.currentHandlers());\n  }\n  createLifeCycleEvents() {\n    return {\n      on: (...args) => {\n        return this.publicEmitter.on(...args);\n      },\n      removeListener: (...args) => {\n        return this.publicEmitter.removeListener(...args);\n      },\n      removeAllListeners: (...args) => {\n        return this.publicEmitter.removeAllListeners(...args);\n      }\n    };\n  }\n}\n\n//# sourceMappingURL=SetupApi.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvU2V0dXBBcGkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF1QztBQUNRO0FBQ1U7QUFDSTtBQUNVO0FBQ1Y7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNFQUFVO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkscURBQVM7QUFDYjtBQUNBLE1BQU0sa0VBQVE7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix5REFBTztBQUM5Qiw2QkFBNkIseURBQU87QUFDcEMsSUFBSSwwRUFBVTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFEQUFTO0FBQ2I7QUFDQSxNQUFNLGtFQUFRO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0ZBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS9TZXR1cEFwaS5tanM/OGU2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnZhcmlhbnQgfSBmcm9tIFwib3V0dmFyaWFudFwiO1xuaW1wb3J0IHsgRW1pdHRlciB9IGZyb20gXCJzdHJpY3QtZXZlbnQtZW1pdHRlclwiO1xuaW1wb3J0IHsgZGV2VXRpbHMgfSBmcm9tICcuL3V0aWxzL2ludGVybmFsL2RldlV0aWxzLm1qcyc7XG5pbXBvcnQgeyBwaXBlRXZlbnRzIH0gZnJvbSAnLi91dGlscy9pbnRlcm5hbC9waXBlRXZlbnRzLm1qcyc7XG5pbXBvcnQgeyB0b1JlYWRvbmx5QXJyYXkgfSBmcm9tICcuL3V0aWxzL2ludGVybmFsL3RvUmVhZG9ubHlBcnJheS5tanMnO1xuaW1wb3J0IHsgRGlzcG9zYWJsZSB9IGZyb20gJy4vdXRpbHMvaW50ZXJuYWwvRGlzcG9zYWJsZS5tanMnO1xuY2xhc3MgSGFuZGxlcnNDb250cm9sbGVyIHtcbn1cbmNsYXNzIEluTWVtb3J5SGFuZGxlcnNDb250cm9sbGVyIHtcbiAgY29uc3RydWN0b3IoaW5pdGlhbEhhbmRsZXJzKSB7XG4gICAgdGhpcy5pbml0aWFsSGFuZGxlcnMgPSBpbml0aWFsSGFuZGxlcnM7XG4gICAgdGhpcy5oYW5kbGVycyA9IFsuLi5pbml0aWFsSGFuZGxlcnNdO1xuICB9XG4gIGhhbmRsZXJzO1xuICBwcmVwZW5kKHJ1bnRpbWVIYW5kbGVzKSB7XG4gICAgdGhpcy5oYW5kbGVycy51bnNoaWZ0KC4uLnJ1bnRpbWVIYW5kbGVzKTtcbiAgfVxuICByZXNldChuZXh0SGFuZGxlcnMpIHtcbiAgICB0aGlzLmhhbmRsZXJzID0gbmV4dEhhbmRsZXJzLmxlbmd0aCA+IDAgPyBbLi4ubmV4dEhhbmRsZXJzXSA6IFsuLi50aGlzLmluaXRpYWxIYW5kbGVyc107XG4gIH1cbiAgY3VycmVudEhhbmRsZXJzKCkge1xuICAgIHJldHVybiB0aGlzLmhhbmRsZXJzO1xuICB9XG59XG5jbGFzcyBTZXR1cEFwaSBleHRlbmRzIERpc3Bvc2FibGUge1xuICBoYW5kbGVyc0NvbnRyb2xsZXI7XG4gIGVtaXR0ZXI7XG4gIHB1YmxpY0VtaXR0ZXI7XG4gIGV2ZW50cztcbiAgY29uc3RydWN0b3IoLi4uaW5pdGlhbEhhbmRsZXJzKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0aGlzLnZhbGlkYXRlSGFuZGxlcnMoaW5pdGlhbEhhbmRsZXJzKSxcbiAgICAgIGRldlV0aWxzLmZvcm1hdE1lc3NhZ2UoXG4gICAgICAgIGBGYWlsZWQgdG8gYXBwbHkgZ2l2ZW4gcmVxdWVzdCBoYW5kbGVyczogaW52YWxpZCBpbnB1dC4gRGlkIHlvdSBmb3JnZXQgdG8gc3ByZWFkIHRoZSByZXF1ZXN0IGhhbmRsZXJzIEFycmF5P2BcbiAgICAgIClcbiAgICApO1xuICAgIHRoaXMuaGFuZGxlcnNDb250cm9sbGVyID0gbmV3IEluTWVtb3J5SGFuZGxlcnNDb250cm9sbGVyKGluaXRpYWxIYW5kbGVycyk7XG4gICAgdGhpcy5lbWl0dGVyID0gbmV3IEVtaXR0ZXIoKTtcbiAgICB0aGlzLnB1YmxpY0VtaXR0ZXIgPSBuZXcgRW1pdHRlcigpO1xuICAgIHBpcGVFdmVudHModGhpcy5lbWl0dGVyLCB0aGlzLnB1YmxpY0VtaXR0ZXIpO1xuICAgIHRoaXMuZXZlbnRzID0gdGhpcy5jcmVhdGVMaWZlQ3ljbGVFdmVudHMoKTtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMucHVzaCgoKSA9PiB7XG4gICAgICB0aGlzLmVtaXR0ZXIucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgICB0aGlzLnB1YmxpY0VtaXR0ZXIucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgfSk7XG4gIH1cbiAgdmFsaWRhdGVIYW5kbGVycyhoYW5kbGVycykge1xuICAgIHJldHVybiBoYW5kbGVycy5ldmVyeSgoaGFuZGxlcikgPT4gIUFycmF5LmlzQXJyYXkoaGFuZGxlcikpO1xuICB9XG4gIHVzZSguLi5ydW50aW1lSGFuZGxlcnMpIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0aGlzLnZhbGlkYXRlSGFuZGxlcnMocnVudGltZUhhbmRsZXJzKSxcbiAgICAgIGRldlV0aWxzLmZvcm1hdE1lc3NhZ2UoXG4gICAgICAgIGBGYWlsZWQgdG8gY2FsbCBcInVzZSgpXCIgd2l0aCB0aGUgZ2l2ZW4gcmVxdWVzdCBoYW5kbGVyczogaW52YWxpZCBpbnB1dC4gRGlkIHlvdSBmb3JnZXQgdG8gc3ByZWFkIHRoZSBhcnJheSBvZiByZXF1ZXN0IGhhbmRsZXJzP2BcbiAgICAgIClcbiAgICApO1xuICAgIHRoaXMuaGFuZGxlcnNDb250cm9sbGVyLnByZXBlbmQocnVudGltZUhhbmRsZXJzKTtcbiAgfVxuICByZXN0b3JlSGFuZGxlcnMoKSB7XG4gICAgdGhpcy5oYW5kbGVyc0NvbnRyb2xsZXIuY3VycmVudEhhbmRsZXJzKCkuZm9yRWFjaCgoaGFuZGxlcikgPT4ge1xuICAgICAgaWYgKFwiaXNVc2VkXCIgaW4gaGFuZGxlcikge1xuICAgICAgICBoYW5kbGVyLmlzVXNlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHJlc2V0SGFuZGxlcnMoLi4ubmV4dEhhbmRsZXJzKSB7XG4gICAgdGhpcy5oYW5kbGVyc0NvbnRyb2xsZXIucmVzZXQobmV4dEhhbmRsZXJzKTtcbiAgfVxuICBsaXN0SGFuZGxlcnMoKSB7XG4gICAgcmV0dXJuIHRvUmVhZG9ubHlBcnJheSh0aGlzLmhhbmRsZXJzQ29udHJvbGxlci5jdXJyZW50SGFuZGxlcnMoKSk7XG4gIH1cbiAgY3JlYXRlTGlmZUN5Y2xlRXZlbnRzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBvbjogKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHVibGljRW1pdHRlci5vbiguLi5hcmdzKTtcbiAgICAgIH0sXG4gICAgICByZW1vdmVMaXN0ZW5lcjogKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHVibGljRW1pdHRlci5yZW1vdmVMaXN0ZW5lciguLi5hcmdzKTtcbiAgICAgIH0sXG4gICAgICByZW1vdmVBbGxMaXN0ZW5lcnM6ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0VtaXR0ZXIucmVtb3ZlQWxsTGlzdGVuZXJzKC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH07XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEhhbmRsZXJzQ29udHJvbGxlcixcbiAgSW5NZW1vcnlIYW5kbGVyc0NvbnRyb2xsZXIsXG4gIFNldHVwQXBpXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2V0dXBBcGkubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/SetupApi.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/handlers/HttpHandler.mjs":
/*!************************************************************!*\
  !*** ./node_modules/msw/lib/core/handlers/HttpHandler.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpHandler: function() { return /* binding */ HttpHandler; },\n/* harmony export */   HttpMethods: function() { return /* binding */ HttpMethods; }\n/* harmony export */ });\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_internal_isStringEqual_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/internal/isStringEqual.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs\");\n/* harmony import */ var _utils_logging_getStatusCodeColor_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/logging/getStatusCodeColor.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs\");\n/* harmony import */ var _utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/logging/getTimestamp.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs\");\n/* harmony import */ var _utils_logging_serializeRequest_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/logging/serializeRequest.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs\");\n/* harmony import */ var _utils_logging_serializeResponse_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/logging/serializeResponse.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs\");\n/* harmony import */ var _utils_matching_matchRequestUrl_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/matching/matchRequestUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs\");\n/* harmony import */ var _utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/request/toPublicUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _utils_request_getRequestCookies_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/request/getRequestCookies.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs\");\n/* harmony import */ var _utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/url/cleanUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/url/cleanUrl.mjs\");\n/* harmony import */ var _RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestHandler.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/handlers/RequestHandler.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nvar HttpMethods = /* @__PURE__ */ ((HttpMethods2) => {\n  HttpMethods2[\"HEAD\"] = \"HEAD\";\n  HttpMethods2[\"GET\"] = \"GET\";\n  HttpMethods2[\"POST\"] = \"POST\";\n  HttpMethods2[\"PUT\"] = \"PUT\";\n  HttpMethods2[\"PATCH\"] = \"PATCH\";\n  HttpMethods2[\"OPTIONS\"] = \"OPTIONS\";\n  HttpMethods2[\"DELETE\"] = \"DELETE\";\n  return HttpMethods2;\n})(HttpMethods || {});\nclass HttpHandler extends _RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.RequestHandler {\n  constructor(method, predicate, resolver, options) {\n    const displayPath = typeof predicate === \"function\" ? \"[custom predicate]\" : predicate;\n    super({\n      info: {\n        header: `${method}${displayPath ? ` ${displayPath}` : \"\"}`,\n        path: predicate,\n        method\n      },\n      resolver,\n      options\n    });\n    this.checkRedundantQueryParameters();\n  }\n  checkRedundantQueryParameters() {\n    const { method, path } = this.info;\n    if (!path || path instanceof RegExp || typeof path === \"function\") {\n      return;\n    }\n    const url = (0,_utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.cleanUrl)(path);\n    if (url === path) {\n      return;\n    }\n    const searchParams = (0,_utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.getSearchParams)(path);\n    const queryParams = [];\n    searchParams.forEach((_, paramName) => {\n      queryParams.push(paramName);\n    });\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.devUtils.warn(\n      `Found a redundant usage of query parameters in the request handler URL for \"${method} ${path}\". Please match against a path instead and access query parameters using \"new URL(request.url).searchParams\" instead. Learn more: https://mswjs.io/docs/http/intercepting-requests#querysearch-parameters`\n    );\n  }\n  async parse(args) {\n    const url = new URL(args.request.url);\n    const cookies = (0,_utils_request_getRequestCookies_mjs__WEBPACK_IMPORTED_MODULE_3__.getAllRequestCookies)(args.request);\n    if (typeof this.info.path === \"function\") {\n      const customPredicateResult = await this.info.path({\n        request: args.request,\n        cookies\n      });\n      const match2 = typeof customPredicateResult === \"boolean\" ? {\n        matches: customPredicateResult,\n        params: {}\n      } : customPredicateResult;\n      return {\n        match: match2,\n        cookies\n      };\n    }\n    const match = this.info.path ? (0,_utils_matching_matchRequestUrl_mjs__WEBPACK_IMPORTED_MODULE_4__.matchRequestUrl)(url, this.info.path, args.resolutionContext?.baseUrl) : { matches: false, params: {} };\n    return {\n      match,\n      cookies\n    };\n  }\n  async predicate(args) {\n    const hasMatchingMethod = this.matchMethod(args.request.method);\n    const hasMatchingUrl = args.parsedResult.match.matches;\n    return hasMatchingMethod && hasMatchingUrl;\n  }\n  matchMethod(actualMethod) {\n    return this.info.method instanceof RegExp ? this.info.method.test(actualMethod) : (0,_utils_internal_isStringEqual_mjs__WEBPACK_IMPORTED_MODULE_5__.isStringEqual)(this.info.method, actualMethod);\n  }\n  extendResolverArgs(args) {\n    return {\n      params: args.parsedResult.match?.params || {},\n      cookies: args.parsedResult.cookies\n    };\n  }\n  async log(args) {\n    const publicUrl = (0,_utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_6__.toPublicUrl)(args.request.url);\n    const loggedRequest = await (0,_utils_logging_serializeRequest_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeRequest)(args.request);\n    const loggedResponse = await (0,_utils_logging_serializeResponse_mjs__WEBPACK_IMPORTED_MODULE_8__.serializeResponse)(args.response);\n    const statusColor = (0,_utils_logging_getStatusCodeColor_mjs__WEBPACK_IMPORTED_MODULE_9__.getStatusCodeColor)(loggedResponse.status);\n    console.groupCollapsed(\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.devUtils.formatMessage(\n        `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_10__.getTimestamp)()} ${args.request.method} ${publicUrl} (%c${loggedResponse.status} ${loggedResponse.statusText}%c)`\n      ),\n      `color:${statusColor}`,\n      \"color:inherit\"\n    );\n    console.log(\"Request\", loggedRequest);\n    console.log(\"Handler:\", this);\n    console.log(\"Response\", loggedResponse);\n    console.groupEnd();\n  }\n}\n\n//# sourceMappingURL=HttpHandler.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvaGFuZGxlcnMvSHR0cEhhbmRsZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEQ7QUFDVTtBQUNTO0FBQ1o7QUFDUTtBQUNFO0FBRzVCO0FBQ2dCO0FBQ2U7QUFDUjtBQUd4QztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG1CQUFtQjtBQUNwQiwwQkFBMEIsK0RBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTyxFQUFFLGtCQUFrQixZQUFZLE9BQU87QUFDakU7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUVBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdFQUFlO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLGtFQUFRO0FBQ1oscUZBQXFGLFFBQVEsRUFBRSxLQUFLO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBGQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvRkFBZSwyREFBMkQ7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixnRkFBYTtBQUNuRztBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkVBQVc7QUFDakMsZ0NBQWdDLHFGQUFnQjtBQUNoRCxpQ0FBaUMsdUZBQWlCO0FBQ2xELHdCQUF3Qix5RkFBa0I7QUFDMUM7QUFDQSxNQUFNLGtFQUFRO0FBQ2QsV0FBVyw4RUFBWSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsV0FBVyxLQUFLLHVCQUF1QixFQUFFLDBCQUEwQjtBQUN2SDtBQUNBLGVBQWUsWUFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL2hhbmRsZXJzL0h0dHBIYW5kbGVyLm1qcz8wODIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRldlV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvaW50ZXJuYWwvZGV2VXRpbHMubWpzJztcbmltcG9ydCB7IGlzU3RyaW5nRXF1YWwgfSBmcm9tICcuLi91dGlscy9pbnRlcm5hbC9pc1N0cmluZ0VxdWFsLm1qcyc7XG5pbXBvcnQgeyBnZXRTdGF0dXNDb2RlQ29sb3IgfSBmcm9tICcuLi91dGlscy9sb2dnaW5nL2dldFN0YXR1c0NvZGVDb2xvci5tanMnO1xuaW1wb3J0IHsgZ2V0VGltZXN0YW1wIH0gZnJvbSAnLi4vdXRpbHMvbG9nZ2luZy9nZXRUaW1lc3RhbXAubWpzJztcbmltcG9ydCB7IHNlcmlhbGl6ZVJlcXVlc3QgfSBmcm9tICcuLi91dGlscy9sb2dnaW5nL3NlcmlhbGl6ZVJlcXVlc3QubWpzJztcbmltcG9ydCB7IHNlcmlhbGl6ZVJlc3BvbnNlIH0gZnJvbSAnLi4vdXRpbHMvbG9nZ2luZy9zZXJpYWxpemVSZXNwb25zZS5tanMnO1xuaW1wb3J0IHtcbiAgbWF0Y2hSZXF1ZXN0VXJsXG59IGZyb20gJy4uL3V0aWxzL21hdGNoaW5nL21hdGNoUmVxdWVzdFVybC5tanMnO1xuaW1wb3J0IHsgdG9QdWJsaWNVcmwgfSBmcm9tICcuLi91dGlscy9yZXF1ZXN0L3RvUHVibGljVXJsLm1qcyc7XG5pbXBvcnQgeyBnZXRBbGxSZXF1ZXN0Q29va2llcyB9IGZyb20gJy4uL3V0aWxzL3JlcXVlc3QvZ2V0UmVxdWVzdENvb2tpZXMubWpzJztcbmltcG9ydCB7IGNsZWFuVXJsLCBnZXRTZWFyY2hQYXJhbXMgfSBmcm9tICcuLi91dGlscy91cmwvY2xlYW5VcmwubWpzJztcbmltcG9ydCB7XG4gIFJlcXVlc3RIYW5kbGVyXG59IGZyb20gJy4vUmVxdWVzdEhhbmRsZXIubWpzJztcbnZhciBIdHRwTWV0aG9kcyA9IC8qIEBfX1BVUkVfXyAqLyAoKEh0dHBNZXRob2RzMikgPT4ge1xuICBIdHRwTWV0aG9kczJbXCJIRUFEXCJdID0gXCJIRUFEXCI7XG4gIEh0dHBNZXRob2RzMltcIkdFVFwiXSA9IFwiR0VUXCI7XG4gIEh0dHBNZXRob2RzMltcIlBPU1RcIl0gPSBcIlBPU1RcIjtcbiAgSHR0cE1ldGhvZHMyW1wiUFVUXCJdID0gXCJQVVRcIjtcbiAgSHR0cE1ldGhvZHMyW1wiUEFUQ0hcIl0gPSBcIlBBVENIXCI7XG4gIEh0dHBNZXRob2RzMltcIk9QVElPTlNcIl0gPSBcIk9QVElPTlNcIjtcbiAgSHR0cE1ldGhvZHMyW1wiREVMRVRFXCJdID0gXCJERUxFVEVcIjtcbiAgcmV0dXJuIEh0dHBNZXRob2RzMjtcbn0pKEh0dHBNZXRob2RzIHx8IHt9KTtcbmNsYXNzIEh0dHBIYW5kbGVyIGV4dGVuZHMgUmVxdWVzdEhhbmRsZXIge1xuICBjb25zdHJ1Y3RvcihtZXRob2QsIHByZWRpY2F0ZSwgcmVzb2x2ZXIsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBkaXNwbGF5UGF0aCA9IHR5cGVvZiBwcmVkaWNhdGUgPT09IFwiZnVuY3Rpb25cIiA/IFwiW2N1c3RvbSBwcmVkaWNhdGVdXCIgOiBwcmVkaWNhdGU7XG4gICAgc3VwZXIoe1xuICAgICAgaW5mbzoge1xuICAgICAgICBoZWFkZXI6IGAke21ldGhvZH0ke2Rpc3BsYXlQYXRoID8gYCAke2Rpc3BsYXlQYXRofWAgOiBcIlwifWAsXG4gICAgICAgIHBhdGg6IHByZWRpY2F0ZSxcbiAgICAgICAgbWV0aG9kXG4gICAgICB9LFxuICAgICAgcmVzb2x2ZXIsXG4gICAgICBvcHRpb25zXG4gICAgfSk7XG4gICAgdGhpcy5jaGVja1JlZHVuZGFudFF1ZXJ5UGFyYW1ldGVycygpO1xuICB9XG4gIGNoZWNrUmVkdW5kYW50UXVlcnlQYXJhbWV0ZXJzKCkge1xuICAgIGNvbnN0IHsgbWV0aG9kLCBwYXRoIH0gPSB0aGlzLmluZm87XG4gICAgaWYgKCFwYXRoIHx8IHBhdGggaW5zdGFuY2VvZiBSZWdFeHAgfHwgdHlwZW9mIHBhdGggPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB1cmwgPSBjbGVhblVybChwYXRoKTtcbiAgICBpZiAodXJsID09PSBwYXRoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IGdldFNlYXJjaFBhcmFtcyhwYXRoKTtcbiAgICBjb25zdCBxdWVyeVBhcmFtcyA9IFtdO1xuICAgIHNlYXJjaFBhcmFtcy5mb3JFYWNoKChfLCBwYXJhbU5hbWUpID0+IHtcbiAgICAgIHF1ZXJ5UGFyYW1zLnB1c2gocGFyYW1OYW1lKTtcbiAgICB9KTtcbiAgICBkZXZVdGlscy53YXJuKFxuICAgICAgYEZvdW5kIGEgcmVkdW5kYW50IHVzYWdlIG9mIHF1ZXJ5IHBhcmFtZXRlcnMgaW4gdGhlIHJlcXVlc3QgaGFuZGxlciBVUkwgZm9yIFwiJHttZXRob2R9ICR7cGF0aH1cIi4gUGxlYXNlIG1hdGNoIGFnYWluc3QgYSBwYXRoIGluc3RlYWQgYW5kIGFjY2VzcyBxdWVyeSBwYXJhbWV0ZXJzIHVzaW5nIFwibmV3IFVSTChyZXF1ZXN0LnVybCkuc2VhcmNoUGFyYW1zXCIgaW5zdGVhZC4gTGVhcm4gbW9yZTogaHR0cHM6Ly9tc3dqcy5pby9kb2NzL2h0dHAvaW50ZXJjZXB0aW5nLXJlcXVlc3RzI3F1ZXJ5c2VhcmNoLXBhcmFtZXRlcnNgXG4gICAgKTtcbiAgfVxuICBhc3luYyBwYXJzZShhcmdzKSB7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTChhcmdzLnJlcXVlc3QudXJsKTtcbiAgICBjb25zdCBjb29raWVzID0gZ2V0QWxsUmVxdWVzdENvb2tpZXMoYXJncy5yZXF1ZXN0KTtcbiAgICBpZiAodHlwZW9mIHRoaXMuaW5mby5wYXRoID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIGNvbnN0IGN1c3RvbVByZWRpY2F0ZVJlc3VsdCA9IGF3YWl0IHRoaXMuaW5mby5wYXRoKHtcbiAgICAgICAgcmVxdWVzdDogYXJncy5yZXF1ZXN0LFxuICAgICAgICBjb29raWVzXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IG1hdGNoMiA9IHR5cGVvZiBjdXN0b21QcmVkaWNhdGVSZXN1bHQgPT09IFwiYm9vbGVhblwiID8ge1xuICAgICAgICBtYXRjaGVzOiBjdXN0b21QcmVkaWNhdGVSZXN1bHQsXG4gICAgICAgIHBhcmFtczoge31cbiAgICAgIH0gOiBjdXN0b21QcmVkaWNhdGVSZXN1bHQ7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRjaDogbWF0Y2gyLFxuICAgICAgICBjb29raWVzXG4gICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBtYXRjaCA9IHRoaXMuaW5mby5wYXRoID8gbWF0Y2hSZXF1ZXN0VXJsKHVybCwgdGhpcy5pbmZvLnBhdGgsIGFyZ3MucmVzb2x1dGlvbkNvbnRleHQ/LmJhc2VVcmwpIDogeyBtYXRjaGVzOiBmYWxzZSwgcGFyYW1zOiB7fSB9O1xuICAgIHJldHVybiB7XG4gICAgICBtYXRjaCxcbiAgICAgIGNvb2tpZXNcbiAgICB9O1xuICB9XG4gIGFzeW5jIHByZWRpY2F0ZShhcmdzKSB7XG4gICAgY29uc3QgaGFzTWF0Y2hpbmdNZXRob2QgPSB0aGlzLm1hdGNoTWV0aG9kKGFyZ3MucmVxdWVzdC5tZXRob2QpO1xuICAgIGNvbnN0IGhhc01hdGNoaW5nVXJsID0gYXJncy5wYXJzZWRSZXN1bHQubWF0Y2gubWF0Y2hlcztcbiAgICByZXR1cm4gaGFzTWF0Y2hpbmdNZXRob2QgJiYgaGFzTWF0Y2hpbmdVcmw7XG4gIH1cbiAgbWF0Y2hNZXRob2QoYWN0dWFsTWV0aG9kKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5mby5tZXRob2QgaW5zdGFuY2VvZiBSZWdFeHAgPyB0aGlzLmluZm8ubWV0aG9kLnRlc3QoYWN0dWFsTWV0aG9kKSA6IGlzU3RyaW5nRXF1YWwodGhpcy5pbmZvLm1ldGhvZCwgYWN0dWFsTWV0aG9kKTtcbiAgfVxuICBleHRlbmRSZXNvbHZlckFyZ3MoYXJncykge1xuICAgIHJldHVybiB7XG4gICAgICBwYXJhbXM6IGFyZ3MucGFyc2VkUmVzdWx0Lm1hdGNoPy5wYXJhbXMgfHwge30sXG4gICAgICBjb29raWVzOiBhcmdzLnBhcnNlZFJlc3VsdC5jb29raWVzXG4gICAgfTtcbiAgfVxuICBhc3luYyBsb2coYXJncykge1xuICAgIGNvbnN0IHB1YmxpY1VybCA9IHRvUHVibGljVXJsKGFyZ3MucmVxdWVzdC51cmwpO1xuICAgIGNvbnN0IGxvZ2dlZFJlcXVlc3QgPSBhd2FpdCBzZXJpYWxpemVSZXF1ZXN0KGFyZ3MucmVxdWVzdCk7XG4gICAgY29uc3QgbG9nZ2VkUmVzcG9uc2UgPSBhd2FpdCBzZXJpYWxpemVSZXNwb25zZShhcmdzLnJlc3BvbnNlKTtcbiAgICBjb25zdCBzdGF0dXNDb2xvciA9IGdldFN0YXR1c0NvZGVDb2xvcihsb2dnZWRSZXNwb25zZS5zdGF0dXMpO1xuICAgIGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQoXG4gICAgICBkZXZVdGlscy5mb3JtYXRNZXNzYWdlKFxuICAgICAgICBgJHtnZXRUaW1lc3RhbXAoKX0gJHthcmdzLnJlcXVlc3QubWV0aG9kfSAke3B1YmxpY1VybH0gKCVjJHtsb2dnZWRSZXNwb25zZS5zdGF0dXN9ICR7bG9nZ2VkUmVzcG9uc2Uuc3RhdHVzVGV4dH0lYylgXG4gICAgICApLFxuICAgICAgYGNvbG9yOiR7c3RhdHVzQ29sb3J9YCxcbiAgICAgIFwiY29sb3I6aW5oZXJpdFwiXG4gICAgKTtcbiAgICBjb25zb2xlLmxvZyhcIlJlcXVlc3RcIiwgbG9nZ2VkUmVxdWVzdCk7XG4gICAgY29uc29sZS5sb2coXCJIYW5kbGVyOlwiLCB0aGlzKTtcbiAgICBjb25zb2xlLmxvZyhcIlJlc3BvbnNlXCIsIGxvZ2dlZFJlc3BvbnNlKTtcbiAgICBjb25zb2xlLmdyb3VwRW5kKCk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEh0dHBIYW5kbGVyLFxuICBIdHRwTWV0aG9kc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0dHBIYW5kbGVyLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/handlers/HttpHandler.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/handlers/RequestHandler.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/handlers/RequestHandler.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestHandler: function() { return /* binding */ RequestHandler; }\n/* harmony export */ });\n/* harmony import */ var _utils_internal_getCallFrame_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/internal/getCallFrame.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs\");\n/* harmony import */ var _utils_internal_isIterable_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/internal/isIterable.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isIterable.mjs\");\n\n\nclass RequestHandler {\n  static cache = /* @__PURE__ */ new WeakMap();\n  __kind;\n  info;\n  /**\n   * Indicates whether this request handler has been used\n   * (its resolver has successfully executed).\n   */\n  isUsed;\n  resolver;\n  resolverIterator;\n  resolverIteratorResult;\n  options;\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = (0,_utils_internal_getCallFrame_mjs__WEBPACK_IMPORTED_MODULE_0__.getCallFrame)(new Error());\n    this.info = {\n      ...args.info,\n      callFrame\n    };\n    this.isUsed = false;\n    this.__kind = \"RequestHandler\";\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  async parse(_args) {\n    return {};\n  }\n  /**\n   * Test if this handler matches the given request.\n   *\n   * This method is not used internally but is exposed\n   * as a convenience method for consumers writing custom\n   * handlers.\n   */\n  async test(args) {\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    return this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  // Clone the request instance before it's passed to the handler phases\n  // and the response resolver so we can always read it for logging.\n  // We only clone it once per request to avoid unnecessary overhead.\n  cloneRequestOrGetFromCache(request) {\n    const existingClone = RequestHandler.cache.get(request);\n    if (typeof existingClone !== \"undefined\") {\n      return existingClone;\n    }\n    const clonedRequest = request.clone();\n    RequestHandler.cache.set(request, clonedRequest);\n    return clonedRequest;\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  async run(args) {\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    const requestClone = this.cloneRequestOrGetFromCache(args.request);\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    const shouldInterceptRequest = await this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n    if (!shouldInterceptRequest) {\n      return null;\n    }\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    this.isUsed = true;\n    const executeResolver = this.wrapResolver(this.resolver);\n    const resolverExtras = this.extendResolverArgs({\n      request: args.request,\n      parsedResult\n    });\n    const mockedResponsePromise = executeResolver({\n      ...resolverExtras,\n      requestId: args.requestId,\n      request: args.request\n    }).catch((errorOrResponse) => {\n      if (errorOrResponse instanceof Response) {\n        return errorOrResponse;\n      }\n      throw errorOrResponse;\n    });\n    const mockedResponse = await mockedResponsePromise;\n    const executionResult = this.createExecutionResult({\n      // Pass the cloned request to the result so that logging\n      // and other consumers could read its body once more.\n      request: requestClone,\n      requestId: args.requestId,\n      response: mockedResponse,\n      parsedResult\n    });\n    return executionResult;\n  }\n  wrapResolver(resolver) {\n    return async (info) => {\n      if (!this.resolverIterator) {\n        const result = await resolver(info);\n        if (!(0,_utils_internal_isIterable_mjs__WEBPACK_IMPORTED_MODULE_1__.isIterable)(result)) {\n          return result;\n        }\n        this.resolverIterator = Symbol.iterator in result ? result[Symbol.iterator]() : result[Symbol.asyncIterator]();\n      }\n      this.isUsed = false;\n      const { done, value } = await this.resolverIterator.next();\n      const nextResponse = await value;\n      if (nextResponse) {\n        this.resolverIteratorResult = nextResponse.clone();\n      }\n      if (done) {\n        this.isUsed = true;\n        return this.resolverIteratorResult?.clone();\n      }\n      return nextResponse;\n    };\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      requestId: args.requestId,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\n\n//# sourceMappingURL=RequestHandler.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvaGFuZGxlcnMvUmVxdWVzdEhhbmRsZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRTtBQUd4QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4RUFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwRUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxjQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS9oYW5kbGVycy9SZXF1ZXN0SGFuZGxlci5tanM/ZTkwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDYWxsRnJhbWUgfSBmcm9tICcuLi91dGlscy9pbnRlcm5hbC9nZXRDYWxsRnJhbWUubWpzJztcbmltcG9ydCB7XG4gIGlzSXRlcmFibGVcbn0gZnJvbSAnLi4vdXRpbHMvaW50ZXJuYWwvaXNJdGVyYWJsZS5tanMnO1xuY2xhc3MgUmVxdWVzdEhhbmRsZXIge1xuICBzdGF0aWMgY2FjaGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbiAgX19raW5kO1xuICBpbmZvO1xuICAvKipcbiAgICogSW5kaWNhdGVzIHdoZXRoZXIgdGhpcyByZXF1ZXN0IGhhbmRsZXIgaGFzIGJlZW4gdXNlZFxuICAgKiAoaXRzIHJlc29sdmVyIGhhcyBzdWNjZXNzZnVsbHkgZXhlY3V0ZWQpLlxuICAgKi9cbiAgaXNVc2VkO1xuICByZXNvbHZlcjtcbiAgcmVzb2x2ZXJJdGVyYXRvcjtcbiAgcmVzb2x2ZXJJdGVyYXRvclJlc3VsdDtcbiAgb3B0aW9ucztcbiAgY29uc3RydWN0b3IoYXJncykge1xuICAgIHRoaXMucmVzb2x2ZXIgPSBhcmdzLnJlc29sdmVyO1xuICAgIHRoaXMub3B0aW9ucyA9IGFyZ3Mub3B0aW9ucztcbiAgICBjb25zdCBjYWxsRnJhbWUgPSBnZXRDYWxsRnJhbWUobmV3IEVycm9yKCkpO1xuICAgIHRoaXMuaW5mbyA9IHtcbiAgICAgIC4uLmFyZ3MuaW5mbyxcbiAgICAgIGNhbGxGcmFtZVxuICAgIH07XG4gICAgdGhpcy5pc1VzZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9fa2luZCA9IFwiUmVxdWVzdEhhbmRsZXJcIjtcbiAgfVxuICAvKipcbiAgICogUGFyc2UgdGhlIGludGVyY2VwdGVkIHJlcXVlc3QgdG8gZXh0cmFjdCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGZyb20gaXQuXG4gICAqIFBhcnNlZCByZXN1bHQgaXMgdGhlbiBleHBvc2VkIHRvIG90aGVyIG1ldGhvZHMgb2YgdGhpcyByZXF1ZXN0IGhhbmRsZXIuXG4gICAqL1xuICBhc3luYyBwYXJzZShfYXJncykge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICAvKipcbiAgICogVGVzdCBpZiB0aGlzIGhhbmRsZXIgbWF0Y2hlcyB0aGUgZ2l2ZW4gcmVxdWVzdC5cbiAgICpcbiAgICogVGhpcyBtZXRob2QgaXMgbm90IHVzZWQgaW50ZXJuYWxseSBidXQgaXMgZXhwb3NlZFxuICAgKiBhcyBhIGNvbnZlbmllbmNlIG1ldGhvZCBmb3IgY29uc3VtZXJzIHdyaXRpbmcgY3VzdG9tXG4gICAqIGhhbmRsZXJzLlxuICAgKi9cbiAgYXN5bmMgdGVzdChhcmdzKSB7XG4gICAgY29uc3QgcGFyc2VkUmVzdWx0ID0gYXdhaXQgdGhpcy5wYXJzZSh7XG4gICAgICByZXF1ZXN0OiBhcmdzLnJlcXVlc3QsXG4gICAgICByZXNvbHV0aW9uQ29udGV4dDogYXJncy5yZXNvbHV0aW9uQ29udGV4dFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLnByZWRpY2F0ZSh7XG4gICAgICByZXF1ZXN0OiBhcmdzLnJlcXVlc3QsXG4gICAgICBwYXJzZWRSZXN1bHQsXG4gICAgICByZXNvbHV0aW9uQ29udGV4dDogYXJncy5yZXNvbHV0aW9uQ29udGV4dFxuICAgIH0pO1xuICB9XG4gIGV4dGVuZFJlc29sdmVyQXJncyhfYXJncykge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICAvLyBDbG9uZSB0aGUgcmVxdWVzdCBpbnN0YW5jZSBiZWZvcmUgaXQncyBwYXNzZWQgdG8gdGhlIGhhbmRsZXIgcGhhc2VzXG4gIC8vIGFuZCB0aGUgcmVzcG9uc2UgcmVzb2x2ZXIgc28gd2UgY2FuIGFsd2F5cyByZWFkIGl0IGZvciBsb2dnaW5nLlxuICAvLyBXZSBvbmx5IGNsb25lIGl0IG9uY2UgcGVyIHJlcXVlc3QgdG8gYXZvaWQgdW5uZWNlc3Nhcnkgb3ZlcmhlYWQuXG4gIGNsb25lUmVxdWVzdE9yR2V0RnJvbUNhY2hlKHJlcXVlc3QpIHtcbiAgICBjb25zdCBleGlzdGluZ0Nsb25lID0gUmVxdWVzdEhhbmRsZXIuY2FjaGUuZ2V0KHJlcXVlc3QpO1xuICAgIGlmICh0eXBlb2YgZXhpc3RpbmdDbG9uZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcmV0dXJuIGV4aXN0aW5nQ2xvbmU7XG4gICAgfVxuICAgIGNvbnN0IGNsb25lZFJlcXVlc3QgPSByZXF1ZXN0LmNsb25lKCk7XG4gICAgUmVxdWVzdEhhbmRsZXIuY2FjaGUuc2V0KHJlcXVlc3QsIGNsb25lZFJlcXVlc3QpO1xuICAgIHJldHVybiBjbG9uZWRSZXF1ZXN0O1xuICB9XG4gIC8qKlxuICAgKiBFeGVjdXRlIHRoaXMgcmVxdWVzdCBoYW5kbGVyIGFuZCBwcm9kdWNlIGEgbW9ja2VkIHJlc3BvbnNlXG4gICAqIHVzaW5nIHRoZSBnaXZlbiByZXNvbHZlciBmdW5jdGlvbi5cbiAgICovXG4gIGFzeW5jIHJ1bihhcmdzKSB7XG4gICAgaWYgKHRoaXMuaXNVc2VkICYmIHRoaXMub3B0aW9ucz8ub25jZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3RDbG9uZSA9IHRoaXMuY2xvbmVSZXF1ZXN0T3JHZXRGcm9tQ2FjaGUoYXJncy5yZXF1ZXN0KTtcbiAgICBjb25zdCBwYXJzZWRSZXN1bHQgPSBhd2FpdCB0aGlzLnBhcnNlKHtcbiAgICAgIHJlcXVlc3Q6IGFyZ3MucmVxdWVzdCxcbiAgICAgIHJlc29sdXRpb25Db250ZXh0OiBhcmdzLnJlc29sdXRpb25Db250ZXh0XG4gICAgfSk7XG4gICAgY29uc3Qgc2hvdWxkSW50ZXJjZXB0UmVxdWVzdCA9IGF3YWl0IHRoaXMucHJlZGljYXRlKHtcbiAgICAgIHJlcXVlc3Q6IGFyZ3MucmVxdWVzdCxcbiAgICAgIHBhcnNlZFJlc3VsdCxcbiAgICAgIHJlc29sdXRpb25Db250ZXh0OiBhcmdzLnJlc29sdXRpb25Db250ZXh0XG4gICAgfSk7XG4gICAgaWYgKCFzaG91bGRJbnRlcmNlcHRSZXF1ZXN0KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKHRoaXMuaXNVc2VkICYmIHRoaXMub3B0aW9ucz8ub25jZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHRoaXMuaXNVc2VkID0gdHJ1ZTtcbiAgICBjb25zdCBleGVjdXRlUmVzb2x2ZXIgPSB0aGlzLndyYXBSZXNvbHZlcih0aGlzLnJlc29sdmVyKTtcbiAgICBjb25zdCByZXNvbHZlckV4dHJhcyA9IHRoaXMuZXh0ZW5kUmVzb2x2ZXJBcmdzKHtcbiAgICAgIHJlcXVlc3Q6IGFyZ3MucmVxdWVzdCxcbiAgICAgIHBhcnNlZFJlc3VsdFxuICAgIH0pO1xuICAgIGNvbnN0IG1vY2tlZFJlc3BvbnNlUHJvbWlzZSA9IGV4ZWN1dGVSZXNvbHZlcih7XG4gICAgICAuLi5yZXNvbHZlckV4dHJhcyxcbiAgICAgIHJlcXVlc3RJZDogYXJncy5yZXF1ZXN0SWQsXG4gICAgICByZXF1ZXN0OiBhcmdzLnJlcXVlc3RcbiAgICB9KS5jYXRjaCgoZXJyb3JPclJlc3BvbnNlKSA9PiB7XG4gICAgICBpZiAoZXJyb3JPclJlc3BvbnNlIGluc3RhbmNlb2YgUmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yT3JSZXNwb25zZTtcbiAgICAgIH1cbiAgICAgIHRocm93IGVycm9yT3JSZXNwb25zZTtcbiAgICB9KTtcbiAgICBjb25zdCBtb2NrZWRSZXNwb25zZSA9IGF3YWl0IG1vY2tlZFJlc3BvbnNlUHJvbWlzZTtcbiAgICBjb25zdCBleGVjdXRpb25SZXN1bHQgPSB0aGlzLmNyZWF0ZUV4ZWN1dGlvblJlc3VsdCh7XG4gICAgICAvLyBQYXNzIHRoZSBjbG9uZWQgcmVxdWVzdCB0byB0aGUgcmVzdWx0IHNvIHRoYXQgbG9nZ2luZ1xuICAgICAgLy8gYW5kIG90aGVyIGNvbnN1bWVycyBjb3VsZCByZWFkIGl0cyBib2R5IG9uY2UgbW9yZS5cbiAgICAgIHJlcXVlc3Q6IHJlcXVlc3RDbG9uZSxcbiAgICAgIHJlcXVlc3RJZDogYXJncy5yZXF1ZXN0SWQsXG4gICAgICByZXNwb25zZTogbW9ja2VkUmVzcG9uc2UsXG4gICAgICBwYXJzZWRSZXN1bHRcbiAgICB9KTtcbiAgICByZXR1cm4gZXhlY3V0aW9uUmVzdWx0O1xuICB9XG4gIHdyYXBSZXNvbHZlcihyZXNvbHZlcikge1xuICAgIHJldHVybiBhc3luYyAoaW5mbykgPT4ge1xuICAgICAgaWYgKCF0aGlzLnJlc29sdmVySXRlcmF0b3IpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzb2x2ZXIoaW5mbyk7XG4gICAgICAgIGlmICghaXNJdGVyYWJsZShyZXN1bHQpKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlc29sdmVySXRlcmF0b3IgPSBTeW1ib2wuaXRlcmF0b3IgaW4gcmVzdWx0ID8gcmVzdWx0W1N5bWJvbC5pdGVyYXRvcl0oKSA6IHJlc3VsdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaXNVc2VkID0gZmFsc2U7XG4gICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCB0aGlzLnJlc29sdmVySXRlcmF0b3IubmV4dCgpO1xuICAgICAgY29uc3QgbmV4dFJlc3BvbnNlID0gYXdhaXQgdmFsdWU7XG4gICAgICBpZiAobmV4dFJlc3BvbnNlKSB7XG4gICAgICAgIHRoaXMucmVzb2x2ZXJJdGVyYXRvclJlc3VsdCA9IG5leHRSZXNwb25zZS5jbG9uZSgpO1xuICAgICAgfVxuICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgdGhpcy5pc1VzZWQgPSB0cnVlO1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNvbHZlckl0ZXJhdG9yUmVzdWx0Py5jbG9uZSgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5leHRSZXNwb25zZTtcbiAgICB9O1xuICB9XG4gIGNyZWF0ZUV4ZWN1dGlvblJlc3VsdChhcmdzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhhbmRsZXI6IHRoaXMsXG4gICAgICByZXF1ZXN0OiBhcmdzLnJlcXVlc3QsXG4gICAgICByZXF1ZXN0SWQ6IGFyZ3MucmVxdWVzdElkLFxuICAgICAgcmVzcG9uc2U6IGFyZ3MucmVzcG9uc2UsXG4gICAgICBwYXJzZWRSZXN1bHQ6IGFyZ3MucGFyc2VkUmVzdWx0XG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgUmVxdWVzdEhhbmRsZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXF1ZXN0SGFuZGxlci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/handlers/RequestHandler.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/http.mjs":
/*!********************************************!*\
  !*** ./node_modules/msw/lib/core/http.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   http: function() { return /* binding */ http; }\n/* harmony export */ });\n/* harmony import */ var _handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers/HttpHandler.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/handlers/HttpHandler.mjs\");\n\nfunction createHttpHandler(method) {\n  return (predicate, resolver, options = {}) => {\n    return new _handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpHandler(method, predicate, resolver, options);\n  };\n}\nconst http = {\n  all: createHttpHandler(/.+/),\n  head: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.HEAD),\n  get: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.GET),\n  post: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.POST),\n  put: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.PUT),\n  delete: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.DELETE),\n  patch: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.PATCH),\n  options: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.OPTIONS)\n};\n\n//# sourceMappingURL=http.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvaHR0cC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHb0M7QUFDcEM7QUFDQSwyQ0FBMkM7QUFDM0MsZUFBZSxrRUFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrRUFBVztBQUNyQyx5QkFBeUIsa0VBQVc7QUFDcEMsMEJBQTBCLGtFQUFXO0FBQ3JDLHlCQUF5QixrRUFBVztBQUNwQyw0QkFBNEIsa0VBQVc7QUFDdkMsMkJBQTJCLGtFQUFXO0FBQ3RDLDZCQUE2QixrRUFBVztBQUN4QztBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS9odHRwLm1qcz83YTllIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEh0dHBNZXRob2RzLFxuICBIdHRwSGFuZGxlclxufSBmcm9tICcuL2hhbmRsZXJzL0h0dHBIYW5kbGVyLm1qcyc7XG5mdW5jdGlvbiBjcmVhdGVIdHRwSGFuZGxlcihtZXRob2QpIHtcbiAgcmV0dXJuIChwcmVkaWNhdGUsIHJlc29sdmVyLCBvcHRpb25zID0ge30pID0+IHtcbiAgICByZXR1cm4gbmV3IEh0dHBIYW5kbGVyKG1ldGhvZCwgcHJlZGljYXRlLCByZXNvbHZlciwgb3B0aW9ucyk7XG4gIH07XG59XG5jb25zdCBodHRwID0ge1xuICBhbGw6IGNyZWF0ZUh0dHBIYW5kbGVyKC8uKy8pLFxuICBoZWFkOiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5IRUFEKSxcbiAgZ2V0OiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5HRVQpLFxuICBwb3N0OiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5QT1NUKSxcbiAgcHV0OiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5QVVQpLFxuICBkZWxldGU6IGNyZWF0ZUh0dHBIYW5kbGVyKEh0dHBNZXRob2RzLkRFTEVURSksXG4gIHBhdGNoOiBjcmVhdGVIdHRwSGFuZGxlcihIdHRwTWV0aG9kcy5QQVRDSCksXG4gIG9wdGlvbnM6IGNyZWF0ZUh0dHBIYW5kbGVyKEh0dHBNZXRob2RzLk9QVElPTlMpXG59O1xuZXhwb3J0IHtcbiAgaHR0cFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHAubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/http.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/isCommonAssetRequest.mjs":
/*!************************************************************!*\
  !*** ./node_modules/msw/lib/core/isCommonAssetRequest.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCommonAssetRequest: function() { return /* binding */ isCommonAssetRequest; }\n/* harmony export */ });\nfunction isCommonAssetRequest(request) {\n  const url = new URL(request.url);\n  if (url.protocol === \"file:\") {\n    return true;\n  }\n  if (/(fonts\\.googleapis\\.com)/.test(url.hostname)) {\n    return true;\n  }\n  if (/node_modules/.test(url.pathname)) {\n    return true;\n  }\n  if (url.pathname.includes(\"@vite\")) {\n    return true;\n  }\n  return /\\.(s?css|less|m?jsx?|m?tsx?|html|ttf|otf|woff|woff2|eot|gif|jpe?g|png|avif|webp|svg|mp4|webm|ogg|mov|mp3|wav|ogg|flac|aac|pdf|txt|csv|json|xml|md|zip|tar|gz|rar|7z)$/i.test(\n    url.pathname\n  );\n}\n\n//# sourceMappingURL=isCommonAssetRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvaXNDb21tb25Bc3NldFJlcXVlc3QubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvaXNDb21tb25Bc3NldFJlcXVlc3QubWpzPzI3ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNDb21tb25Bc3NldFJlcXVlc3QocmVxdWVzdCkge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgaWYgKHVybC5wcm90b2NvbCA9PT0gXCJmaWxlOlwiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKC8oZm9udHNcXC5nb29nbGVhcGlzXFwuY29tKS8udGVzdCh1cmwuaG9zdG5hbWUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKC9ub2RlX21vZHVsZXMvLnRlc3QodXJsLnBhdGhuYW1lKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh1cmwucGF0aG5hbWUuaW5jbHVkZXMoXCJAdml0ZVwiKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiAvXFwuKHM/Y3NzfGxlc3N8bT9qc3g/fG0/dHN4P3xodG1sfHR0ZnxvdGZ8d29mZnx3b2ZmMnxlb3R8Z2lmfGpwZT9nfHBuZ3xhdmlmfHdlYnB8c3ZnfG1wNHx3ZWJtfG9nZ3xtb3Z8bXAzfHdhdnxvZ2d8ZmxhY3xhYWN8cGRmfHR4dHxjc3Z8anNvbnx4bWx8bWR8emlwfHRhcnxnenxyYXJ8N3opJC9pLnRlc3QoXG4gICAgdXJsLnBhdGhuYW1lXG4gICk7XG59XG5leHBvcnQge1xuICBpc0NvbW1vbkFzc2V0UmVxdWVzdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzQ29tbW9uQXNzZXRSZXF1ZXN0Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/isCommonAssetRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decorateResponse: function() { return /* binding */ decorateResponse; },\n/* harmony export */   kSetCookie: function() { return /* binding */ kSetCookie; },\n/* harmony export */   normalizeResponseInit: function() { return /* binding */ normalizeResponseInit; }\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/statuses */ \"(app-pages-browser)/./node_modules/@bundled-es-modules/statuses/index-esm.js\");\n/* harmony import */ var headers_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! headers-polyfill */ \"(app-pages-browser)/./node_modules/headers-polyfill/lib/index.mjs\");\n\n\nconst { message } = _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nconst kSetCookie = Symbol(\"kSetCookie\");\nfunction normalizeResponseInit(init = {}) {\n  const status = init?.status || 200;\n  const statusText = init?.statusText || message[status] || \"\";\n  const headers = new Headers(init?.headers);\n  return {\n    ...init,\n    headers,\n    status,\n    statusText\n  };\n}\nfunction decorateResponse(response, init) {\n  if (init.type) {\n    Object.defineProperty(response, \"type\", {\n      value: init.type,\n      enumerable: true,\n      writable: false\n    });\n  }\n  const responseCookies = init.headers.get(\"set-cookie\");\n  if (responseCookies) {\n    Object.defineProperty(response, kSetCookie, {\n      value: responseCookies,\n      enumerable: false,\n      writable: false\n    });\n    if (typeof document !== \"undefined\") {\n      const responseCookiePairs = headers_polyfill__WEBPACK_IMPORTED_MODULE_1__.Headers.prototype.getSetCookie.call(\n        init.headers\n      );\n      for (const cookieString of responseCookiePairs) {\n        document.cookie = cookieString;\n      }\n    }\n  }\n  return response;\n}\n\n//# sourceMappingURL=decorators.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvSHR0cFJlc3BvbnNlL2RlY29yYXRvcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9EO0FBQ1U7QUFDOUQsUUFBUSxVQUFVLEVBQUUsb0VBQVE7QUFDNUI7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxrQ0FBa0MscURBQWU7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL0h0dHBSZXNwb25zZS9kZWNvcmF0b3JzLm1qcz9lNDFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdGF0dXNlcyBmcm9tIFwiQGJ1bmRsZWQtZXMtbW9kdWxlcy9zdGF0dXNlc1wiO1xuaW1wb3J0IHsgSGVhZGVycyBhcyBIZWFkZXJzUG9seWZpbGwgfSBmcm9tIFwiaGVhZGVycy1wb2x5ZmlsbFwiO1xuY29uc3QgeyBtZXNzYWdlIH0gPSBzdGF0dXNlcztcbmNvbnN0IGtTZXRDb29raWUgPSBTeW1ib2woXCJrU2V0Q29va2llXCIpO1xuZnVuY3Rpb24gbm9ybWFsaXplUmVzcG9uc2VJbml0KGluaXQgPSB7fSkge1xuICBjb25zdCBzdGF0dXMgPSBpbml0Py5zdGF0dXMgfHwgMjAwO1xuICBjb25zdCBzdGF0dXNUZXh0ID0gaW5pdD8uc3RhdHVzVGV4dCB8fCBtZXNzYWdlW3N0YXR1c10gfHwgXCJcIjtcbiAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICByZXR1cm4ge1xuICAgIC4uLmluaXQsXG4gICAgaGVhZGVycyxcbiAgICBzdGF0dXMsXG4gICAgc3RhdHVzVGV4dFxuICB9O1xufVxuZnVuY3Rpb24gZGVjb3JhdGVSZXNwb25zZShyZXNwb25zZSwgaW5pdCkge1xuICBpZiAoaW5pdC50eXBlKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3BvbnNlLCBcInR5cGVcIiwge1xuICAgICAgdmFsdWU6IGluaXQudHlwZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogZmFsc2VcbiAgICB9KTtcbiAgfVxuICBjb25zdCByZXNwb25zZUNvb2tpZXMgPSBpbml0LmhlYWRlcnMuZ2V0KFwic2V0LWNvb2tpZVwiKTtcbiAgaWYgKHJlc3BvbnNlQ29va2llcykge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXNwb25zZSwga1NldENvb2tpZSwge1xuICAgICAgdmFsdWU6IHJlc3BvbnNlQ29va2llcyxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IGZhbHNlXG4gICAgfSk7XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgY29uc3QgcmVzcG9uc2VDb29raWVQYWlycyA9IEhlYWRlcnNQb2x5ZmlsbC5wcm90b3R5cGUuZ2V0U2V0Q29va2llLmNhbGwoXG4gICAgICAgIGluaXQuaGVhZGVyc1xuICAgICAgKTtcbiAgICAgIGZvciAoY29uc3QgY29va2llU3RyaW5nIG9mIHJlc3BvbnNlQ29va2llUGFpcnMpIHtcbiAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llU3RyaW5nO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzcG9uc2U7XG59XG5leHBvcnQge1xuICBkZWNvcmF0ZVJlc3BvbnNlLFxuICBrU2V0Q29va2llLFxuICBub3JtYWxpemVSZXNwb25zZUluaXRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvcmF0b3JzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/cookieStore.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/cookieStore.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookieStore: function() { return /* binding */ cookieStore; }\n/* harmony export */ });\n/* harmony import */ var is_node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-node-process */ \"(app-pages-browser)/./node_modules/is-node-process/lib/index.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var tough_cookie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tough-cookie */ \"(app-pages-browser)/./node_modules/tough-cookie/dist/index.js\");\n/* harmony import */ var _internal_jsonParse_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/jsonParse.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/jsonParse.mjs\");\n\n\n\n\nclass CookieStore {\n  #storageKey = \"__msw-cookie-store__\";\n  #jar;\n  #memoryStore;\n  constructor() {\n    if (!(0,is_node_process__WEBPACK_IMPORTED_MODULE_0__.isNodeProcess)()) {\n      (0,outvariant__WEBPACK_IMPORTED_MODULE_1__.invariant)(\n        typeof localStorage !== \"undefined\",\n        \"Failed to create a CookieStore: `localStorage` is not available in this environment. This is likely an issue with your environment, which has been detected as browser (or browser-like) environment and must implement global browser APIs correctly.\"\n      );\n    }\n    this.#memoryStore = new tough_cookie__WEBPACK_IMPORTED_MODULE_2__.MemoryCookieStore();\n    this.#memoryStore.idx = this.getCookieStoreIndex();\n    this.#jar = new tough_cookie__WEBPACK_IMPORTED_MODULE_2__.CookieJar(this.#memoryStore);\n  }\n  getCookies(url) {\n    return this.#jar.getCookiesSync(url);\n  }\n  async setCookie(cookieName, url) {\n    await this.#jar.setCookie(cookieName, url);\n    this.persist();\n  }\n  getCookieStoreIndex() {\n    if (typeof localStorage === \"undefined\") {\n      return {};\n    }\n    const cookiesString = localStorage.getItem(this.#storageKey);\n    if (cookiesString == null) {\n      return {};\n    }\n    const rawCookies = (0,_internal_jsonParse_mjs__WEBPACK_IMPORTED_MODULE_3__.jsonParse)(cookiesString);\n    if (rawCookies == null) {\n      return {};\n    }\n    const cookies = {};\n    for (const rawCookie of rawCookies) {\n      const cookie = tough_cookie__WEBPACK_IMPORTED_MODULE_2__.Cookie.fromJSON(rawCookie);\n      if (cookie != null && cookie.domain != null && cookie.path != null) {\n        cookies[cookie.domain] ||= {};\n        cookies[cookie.domain][cookie.path] ||= {};\n        cookies[cookie.domain][cookie.path][cookie.key] = cookie;\n      }\n    }\n    return cookies;\n  }\n  persist() {\n    if (typeof localStorage === \"undefined\") {\n      return;\n    }\n    const data = [];\n    const { idx } = this.#memoryStore;\n    for (const domain in idx) {\n      for (const path in idx[domain]) {\n        for (const key in idx[domain][path]) {\n          data.push(idx[domain][path][key].toJSON());\n        }\n      }\n    }\n    localStorage.setItem(this.#storageKey, JSON.stringify(data));\n  }\n}\nconst cookieStore = new CookieStore();\n\n//# sourceMappingURL=cookieStore.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvY29va2llU3RvcmUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ1Q7QUFLakI7QUFDK0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOERBQWE7QUFDdEIsTUFBTSxxREFBUztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDJEQUFpQjtBQUM3QztBQUNBLG9CQUFvQixtREFBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrRUFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdEQUFNO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvY29va2llU3RvcmUubWpzPzg2MmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb2RlUHJvY2VzcyB9IGZyb20gXCJpcy1ub2RlLXByb2Nlc3NcIjtcbmltcG9ydCB7IGludmFyaWFudCB9IGZyb20gXCJvdXR2YXJpYW50XCI7XG5pbXBvcnQge1xuICBDb29raWUsXG4gIENvb2tpZUphcixcbiAgTWVtb3J5Q29va2llU3RvcmVcbn0gZnJvbSBcInRvdWdoLWNvb2tpZVwiO1xuaW1wb3J0IHsganNvblBhcnNlIH0gZnJvbSAnLi9pbnRlcm5hbC9qc29uUGFyc2UubWpzJztcbmNsYXNzIENvb2tpZVN0b3JlIHtcbiAgI3N0b3JhZ2VLZXkgPSBcIl9fbXN3LWNvb2tpZS1zdG9yZV9fXCI7XG4gICNqYXI7XG4gICNtZW1vcnlTdG9yZTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFpc05vZGVQcm9jZXNzKCkpIHtcbiAgICAgIGludmFyaWFudChcbiAgICAgICAgdHlwZW9mIGxvY2FsU3RvcmFnZSAhPT0gXCJ1bmRlZmluZWRcIixcbiAgICAgICAgXCJGYWlsZWQgdG8gY3JlYXRlIGEgQ29va2llU3RvcmU6IGBsb2NhbFN0b3JhZ2VgIGlzIG5vdCBhdmFpbGFibGUgaW4gdGhpcyBlbnZpcm9ubWVudC4gVGhpcyBpcyBsaWtlbHkgYW4gaXNzdWUgd2l0aCB5b3VyIGVudmlyb25tZW50LCB3aGljaCBoYXMgYmVlbiBkZXRlY3RlZCBhcyBicm93c2VyIChvciBicm93c2VyLWxpa2UpIGVudmlyb25tZW50IGFuZCBtdXN0IGltcGxlbWVudCBnbG9iYWwgYnJvd3NlciBBUElzIGNvcnJlY3RseS5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy4jbWVtb3J5U3RvcmUgPSBuZXcgTWVtb3J5Q29va2llU3RvcmUoKTtcbiAgICB0aGlzLiNtZW1vcnlTdG9yZS5pZHggPSB0aGlzLmdldENvb2tpZVN0b3JlSW5kZXgoKTtcbiAgICB0aGlzLiNqYXIgPSBuZXcgQ29va2llSmFyKHRoaXMuI21lbW9yeVN0b3JlKTtcbiAgfVxuICBnZXRDb29raWVzKHVybCkge1xuICAgIHJldHVybiB0aGlzLiNqYXIuZ2V0Q29va2llc1N5bmModXJsKTtcbiAgfVxuICBhc3luYyBzZXRDb29raWUoY29va2llTmFtZSwgdXJsKSB7XG4gICAgYXdhaXQgdGhpcy4jamFyLnNldENvb2tpZShjb29raWVOYW1lLCB1cmwpO1xuICAgIHRoaXMucGVyc2lzdCgpO1xuICB9XG4gIGdldENvb2tpZVN0b3JlSW5kZXgoKSB7XG4gICAgaWYgKHR5cGVvZiBsb2NhbFN0b3JhZ2UgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgY29uc3QgY29va2llc1N0cmluZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuI3N0b3JhZ2VLZXkpO1xuICAgIGlmIChjb29raWVzU3RyaW5nID09IG51bGwpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgY29uc3QgcmF3Q29va2llcyA9IGpzb25QYXJzZShjb29raWVzU3RyaW5nKTtcbiAgICBpZiAocmF3Q29va2llcyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IGNvb2tpZXMgPSB7fTtcbiAgICBmb3IgKGNvbnN0IHJhd0Nvb2tpZSBvZiByYXdDb29raWVzKSB7XG4gICAgICBjb25zdCBjb29raWUgPSBDb29raWUuZnJvbUpTT04ocmF3Q29va2llKTtcbiAgICAgIGlmIChjb29raWUgIT0gbnVsbCAmJiBjb29raWUuZG9tYWluICE9IG51bGwgJiYgY29va2llLnBhdGggIT0gbnVsbCkge1xuICAgICAgICBjb29raWVzW2Nvb2tpZS5kb21haW5dIHx8PSB7fTtcbiAgICAgICAgY29va2llc1tjb29raWUuZG9tYWluXVtjb29raWUucGF0aF0gfHw9IHt9O1xuICAgICAgICBjb29raWVzW2Nvb2tpZS5kb21haW5dW2Nvb2tpZS5wYXRoXVtjb29raWUua2V5XSA9IGNvb2tpZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvb2tpZXM7XG4gIH1cbiAgcGVyc2lzdCgpIHtcbiAgICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gW107XG4gICAgY29uc3QgeyBpZHggfSA9IHRoaXMuI21lbW9yeVN0b3JlO1xuICAgIGZvciAoY29uc3QgZG9tYWluIGluIGlkeCkge1xuICAgICAgZm9yIChjb25zdCBwYXRoIGluIGlkeFtkb21haW5dKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGlkeFtkb21haW5dW3BhdGhdKSB7XG4gICAgICAgICAgZGF0YS5wdXNoKGlkeFtkb21haW5dW3BhdGhdW2tleV0udG9KU09OKCkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuI3N0b3JhZ2VLZXksIEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgfVxufVxuY29uc3QgY29va2llU3RvcmUgPSBuZXcgQ29va2llU3RvcmUoKTtcbmV4cG9ydCB7XG4gIGNvb2tpZVN0b3JlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29va2llU3RvcmUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/cookieStore.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/executeHandlers.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/executeHandlers.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executeHandlers: function() { return /* binding */ executeHandlers; }\n/* harmony export */ });\nconst executeHandlers = async ({\n  request,\n  requestId,\n  handlers,\n  resolutionContext\n}) => {\n  let matchingHandler = null;\n  let result = null;\n  for (const handler of handlers) {\n    result = await handler.run({ request, requestId, resolutionContext });\n    if (result !== null) {\n      matchingHandler = handler;\n    }\n    if (result?.response) {\n      break;\n    }\n  }\n  if (matchingHandler) {\n    return {\n      handler: matchingHandler,\n      parsedResult: result?.parsedResult,\n      response: result?.response\n    };\n  }\n  return null;\n};\n\n//# sourceMappingURL=executeHandlers.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvZXhlY3V0ZUhhbmRsZXJzLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdUNBQXVDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2V4ZWN1dGVIYW5kbGVycy5tanM/MGIxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleGVjdXRlSGFuZGxlcnMgPSBhc3luYyAoe1xuICByZXF1ZXN0LFxuICByZXF1ZXN0SWQsXG4gIGhhbmRsZXJzLFxuICByZXNvbHV0aW9uQ29udGV4dFxufSkgPT4ge1xuICBsZXQgbWF0Y2hpbmdIYW5kbGVyID0gbnVsbDtcbiAgbGV0IHJlc3VsdCA9IG51bGw7XG4gIGZvciAoY29uc3QgaGFuZGxlciBvZiBoYW5kbGVycykge1xuICAgIHJlc3VsdCA9IGF3YWl0IGhhbmRsZXIucnVuKHsgcmVxdWVzdCwgcmVxdWVzdElkLCByZXNvbHV0aW9uQ29udGV4dCB9KTtcbiAgICBpZiAocmVzdWx0ICE9PSBudWxsKSB7XG4gICAgICBtYXRjaGluZ0hhbmRsZXIgPSBoYW5kbGVyO1xuICAgIH1cbiAgICBpZiAocmVzdWx0Py5yZXNwb25zZSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIGlmIChtYXRjaGluZ0hhbmRsZXIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGFuZGxlcjogbWF0Y2hpbmdIYW5kbGVyLFxuICAgICAgcGFyc2VkUmVzdWx0OiByZXN1bHQ/LnBhcnNlZFJlc3VsdCxcbiAgICAgIHJlc3BvbnNlOiByZXN1bHQ/LnJlc3BvbnNlXG4gICAgfTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5leHBvcnQge1xuICBleGVjdXRlSGFuZGxlcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leGVjdXRlSGFuZGxlcnMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/executeHandlers.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/handleRequest.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/handleRequest.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleRequest: function() { return /* binding */ handleRequest; }\n/* harmony export */ });\n/* harmony import */ var _open_draft_until__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/until */ \"(app-pages-browser)/./node_modules/@open-draft/until/lib/index.mjs\");\n/* harmony import */ var _executeHandlers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./executeHandlers.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/executeHandlers.mjs\");\n/* harmony import */ var _request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request/onUnhandledRequest.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs\");\n/* harmony import */ var _request_storeResponseCookies_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request/storeResponseCookies.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/storeResponseCookies.mjs\");\n\n\n\n\nasync function handleRequest(request, requestId, handlers, options, emitter, handleRequestOptions) {\n  emitter.emit(\"request:start\", { request, requestId });\n  if (request.headers.get(\"accept\")?.includes(\"msw/passthrough\")) {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const lookupResult = await (0,_open_draft_until__WEBPACK_IMPORTED_MODULE_0__.until)(() => {\n    return (0,_executeHandlers_mjs__WEBPACK_IMPORTED_MODULE_1__.executeHandlers)({\n      request,\n      requestId,\n      handlers,\n      resolutionContext: handleRequestOptions?.resolutionContext\n    });\n  });\n  if (lookupResult.error) {\n    emitter.emit(\"unhandledException\", {\n      error: lookupResult.error,\n      request,\n      requestId\n    });\n    throw lookupResult.error;\n  }\n  if (!lookupResult.data) {\n    await (0,_request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.onUnhandledRequest)(request, options.onUnhandledRequest);\n    emitter.emit(\"request:unhandled\", { request, requestId });\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const { response } = lookupResult.data;\n  if (!response) {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  if (response.status === 302 && response.headers.get(\"x-msw-intention\") === \"passthrough\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  await (0,_request_storeResponseCookies_mjs__WEBPACK_IMPORTED_MODULE_3__.storeResponseCookies)(request, response);\n  emitter.emit(\"request:match\", { request, requestId });\n  const requiredLookupResult = lookupResult.data;\n  handleRequestOptions?.onMockedResponse?.(response, requiredLookupResult);\n  emitter.emit(\"request:end\", { request, requestId });\n  return response;\n}\n\n//# sourceMappingURL=handleRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaGFuZGxlUmVxdWVzdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEM7QUFDYztBQUNjO0FBQ0k7QUFDMUU7QUFDQSxrQ0FBa0Msb0JBQW9CO0FBQ3REO0FBQ0Esa0NBQWtDLG9CQUFvQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsd0RBQUs7QUFDbEMsV0FBVyxxRUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxVQUFVLG1GQUFrQjtBQUM1Qix3Q0FBd0Msb0JBQW9CO0FBQzVELGtDQUFrQyxvQkFBb0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsVUFBVSxXQUFXO0FBQ3JCO0FBQ0Esa0NBQWtDLG9CQUFvQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQkFBb0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1RkFBb0I7QUFDNUIsa0NBQWtDLG9CQUFvQjtBQUN0RDtBQUNBO0FBQ0EsZ0NBQWdDLG9CQUFvQjtBQUNwRDtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2hhbmRsZVJlcXVlc3QubWpzPzRmMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW50aWwgfSBmcm9tIFwiQG9wZW4tZHJhZnQvdW50aWxcIjtcbmltcG9ydCB7IGV4ZWN1dGVIYW5kbGVycyB9IGZyb20gJy4vZXhlY3V0ZUhhbmRsZXJzLm1qcyc7XG5pbXBvcnQgeyBvblVuaGFuZGxlZFJlcXVlc3QgfSBmcm9tICcuL3JlcXVlc3Qvb25VbmhhbmRsZWRSZXF1ZXN0Lm1qcyc7XG5pbXBvcnQgeyBzdG9yZVJlc3BvbnNlQ29va2llcyB9IGZyb20gJy4vcmVxdWVzdC9zdG9yZVJlc3BvbnNlQ29va2llcy5tanMnO1xuYXN5bmMgZnVuY3Rpb24gaGFuZGxlUmVxdWVzdChyZXF1ZXN0LCByZXF1ZXN0SWQsIGhhbmRsZXJzLCBvcHRpb25zLCBlbWl0dGVyLCBoYW5kbGVSZXF1ZXN0T3B0aW9ucykge1xuICBlbWl0dGVyLmVtaXQoXCJyZXF1ZXN0OnN0YXJ0XCIsIHsgcmVxdWVzdCwgcmVxdWVzdElkIH0pO1xuICBpZiAocmVxdWVzdC5oZWFkZXJzLmdldChcImFjY2VwdFwiKT8uaW5jbHVkZXMoXCJtc3cvcGFzc3Rocm91Z2hcIikpIHtcbiAgICBlbWl0dGVyLmVtaXQoXCJyZXF1ZXN0OmVuZFwiLCB7IHJlcXVlc3QsIHJlcXVlc3RJZCB9KTtcbiAgICBoYW5kbGVSZXF1ZXN0T3B0aW9ucz8ub25QYXNzdGhyb3VnaFJlc3BvbnNlPy4ocmVxdWVzdCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGxvb2t1cFJlc3VsdCA9IGF3YWl0IHVudGlsKCgpID0+IHtcbiAgICByZXR1cm4gZXhlY3V0ZUhhbmRsZXJzKHtcbiAgICAgIHJlcXVlc3QsXG4gICAgICByZXF1ZXN0SWQsXG4gICAgICBoYW5kbGVycyxcbiAgICAgIHJlc29sdXRpb25Db250ZXh0OiBoYW5kbGVSZXF1ZXN0T3B0aW9ucz8ucmVzb2x1dGlvbkNvbnRleHRcbiAgICB9KTtcbiAgfSk7XG4gIGlmIChsb29rdXBSZXN1bHQuZXJyb3IpIHtcbiAgICBlbWl0dGVyLmVtaXQoXCJ1bmhhbmRsZWRFeGNlcHRpb25cIiwge1xuICAgICAgZXJyb3I6IGxvb2t1cFJlc3VsdC5lcnJvcixcbiAgICAgIHJlcXVlc3QsXG4gICAgICByZXF1ZXN0SWRcbiAgICB9KTtcbiAgICB0aHJvdyBsb29rdXBSZXN1bHQuZXJyb3I7XG4gIH1cbiAgaWYgKCFsb29rdXBSZXN1bHQuZGF0YSkge1xuICAgIGF3YWl0IG9uVW5oYW5kbGVkUmVxdWVzdChyZXF1ZXN0LCBvcHRpb25zLm9uVW5oYW5kbGVkUmVxdWVzdCk7XG4gICAgZW1pdHRlci5lbWl0KFwicmVxdWVzdDp1bmhhbmRsZWRcIiwgeyByZXF1ZXN0LCByZXF1ZXN0SWQgfSk7XG4gICAgZW1pdHRlci5lbWl0KFwicmVxdWVzdDplbmRcIiwgeyByZXF1ZXN0LCByZXF1ZXN0SWQgfSk7XG4gICAgaGFuZGxlUmVxdWVzdE9wdGlvbnM/Lm9uUGFzc3Rocm91Z2hSZXNwb25zZT8uKHJlcXVlc3QpO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB7IHJlc3BvbnNlIH0gPSBsb29rdXBSZXN1bHQuZGF0YTtcbiAgaWYgKCFyZXNwb25zZSkge1xuICAgIGVtaXR0ZXIuZW1pdChcInJlcXVlc3Q6ZW5kXCIsIHsgcmVxdWVzdCwgcmVxdWVzdElkIH0pO1xuICAgIGhhbmRsZVJlcXVlc3RPcHRpb25zPy5vblBhc3N0aHJvdWdoUmVzcG9uc2U/LihyZXF1ZXN0KTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMzAyICYmIHJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwieC1tc3ctaW50ZW50aW9uXCIpID09PSBcInBhc3N0aHJvdWdoXCIpIHtcbiAgICBlbWl0dGVyLmVtaXQoXCJyZXF1ZXN0OmVuZFwiLCB7IHJlcXVlc3QsIHJlcXVlc3RJZCB9KTtcbiAgICBoYW5kbGVSZXF1ZXN0T3B0aW9ucz8ub25QYXNzdGhyb3VnaFJlc3BvbnNlPy4ocmVxdWVzdCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGF3YWl0IHN0b3JlUmVzcG9uc2VDb29raWVzKHJlcXVlc3QsIHJlc3BvbnNlKTtcbiAgZW1pdHRlci5lbWl0KFwicmVxdWVzdDptYXRjaFwiLCB7IHJlcXVlc3QsIHJlcXVlc3RJZCB9KTtcbiAgY29uc3QgcmVxdWlyZWRMb29rdXBSZXN1bHQgPSBsb29rdXBSZXN1bHQuZGF0YTtcbiAgaGFuZGxlUmVxdWVzdE9wdGlvbnM/Lm9uTW9ja2VkUmVzcG9uc2U/LihyZXNwb25zZSwgcmVxdWlyZWRMb29rdXBSZXN1bHQpO1xuICBlbWl0dGVyLmVtaXQoXCJyZXF1ZXN0OmVuZFwiLCB7IHJlcXVlc3QsIHJlcXVlc3RJZCB9KTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuZXhwb3J0IHtcbiAgaGFuZGxlUmVxdWVzdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhbmRsZVJlcXVlc3QubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/handleRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/Disposable.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/Disposable.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Disposable: function() { return /* binding */ Disposable; }\n/* harmony export */ });\nclass Disposable {\n  subscriptions = [];\n  dispose() {\n    let subscription;\n    while (subscription = this.subscriptions.shift()) {\n      subscription();\n    }\n  }\n}\n\n//# sourceMappingURL=Disposable.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvRGlzcG9zYWJsZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9EaXNwb3NhYmxlLm1qcz8xZDliIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIERpc3Bvc2FibGUge1xuICBzdWJzY3JpcHRpb25zID0gW107XG4gIGRpc3Bvc2UoKSB7XG4gICAgbGV0IHN1YnNjcmlwdGlvbjtcbiAgICB3aGlsZSAoc3Vic2NyaXB0aW9uID0gdGhpcy5zdWJzY3JpcHRpb25zLnNoaWZ0KCkpIHtcbiAgICAgIHN1YnNjcmlwdGlvbigpO1xuICAgIH1cbiAgfVxufVxuZXhwb3J0IHtcbiAgRGlzcG9zYWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURpc3Bvc2FibGUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/Disposable.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/devUtils.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InternalError: function() { return /* binding */ InternalError; },\n/* harmony export */   devUtils: function() { return /* binding */ devUtils; }\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"(app-pages-browser)/./node_modules/outvariant/lib/index.mjs\");\n\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.format)(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\nclass InternalError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"InternalError\";\n  }\n}\n\n//# sourceMappingURL=devUtils.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvZGV2VXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUNwQztBQUNBO0FBQ0EsOEJBQThCLGtEQUFNO0FBQ3BDLFlBQVksZ0JBQWdCLEVBQUUsb0JBQW9CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9kZXZVdGlscy5tanM/YmJhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXQgfSBmcm9tIFwib3V0dmFyaWFudFwiO1xuY29uc3QgTElCUkFSWV9QUkVGSVggPSBcIltNU1ddXCI7XG5mdW5jdGlvbiBmb3JtYXRNZXNzYWdlKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSB7XG4gIGNvbnN0IGludGVycG9sYXRlZE1lc3NhZ2UgPSBmb3JtYXQobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpO1xuICByZXR1cm4gYCR7TElCUkFSWV9QUkVGSVh9ICR7aW50ZXJwb2xhdGVkTWVzc2FnZX1gO1xufVxuZnVuY3Rpb24gd2FybihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykge1xuICBjb25zb2xlLndhcm4oZm9ybWF0TWVzc2FnZShtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykpO1xufVxuZnVuY3Rpb24gZXJyb3IobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgY29uc29sZS5lcnJvcihmb3JtYXRNZXNzYWdlKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSk7XG59XG5jb25zdCBkZXZVdGlscyA9IHtcbiAgZm9ybWF0TWVzc2FnZSxcbiAgd2FybixcbiAgZXJyb3Jcbn07XG5jbGFzcyBJbnRlcm5hbEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5uYW1lID0gXCJJbnRlcm5hbEVycm9yXCI7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEludGVybmFsRXJyb3IsXG4gIGRldlV0aWxzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV2VXRpbHMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCallFrame: function() { return /* binding */ getCallFrame; }\n/* harmony export */ });\nconst SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/;\nconst BUILD_FRAME = /(node_modules)?[\\/\\\\]lib[\\/\\\\](core|browser|node|native|iife)[\\/\\\\]|^[^\\/\\\\]*$/;\nfunction getCallFrame(error) {\n  const stack = error.stack;\n  if (!stack) {\n    return;\n  }\n  const frames = stack.split(\"\\n\").slice(1);\n  const declarationFrame = frames.find((frame) => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame));\n  });\n  if (!declarationFrame) {\n    return;\n  }\n  const declarationPath = declarationFrame.replace(/\\s*at [^()]*\\(([^)]+)\\)/, \"$1\").replace(/^@/, \"\");\n  return declarationPath;\n}\n\n//# sourceMappingURL=getCallFrame.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvZ2V0Q2FsbEZyYW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL2dldENhbGxGcmFtZS5tanM/OTc4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTT1VSQ0VfRlJBTUUgPSAvW1xcL1xcXFxdbXN3W1xcL1xcXFxdc3JjW1xcL1xcXFxdKC4rKS87XG5jb25zdCBCVUlMRF9GUkFNRSA9IC8obm9kZV9tb2R1bGVzKT9bXFwvXFxcXF1saWJbXFwvXFxcXF0oY29yZXxicm93c2VyfG5vZGV8bmF0aXZlfGlpZmUpW1xcL1xcXFxdfF5bXlxcL1xcXFxdKiQvO1xuZnVuY3Rpb24gZ2V0Q2FsbEZyYW1lKGVycm9yKSB7XG4gIGNvbnN0IHN0YWNrID0gZXJyb3Iuc3RhY2s7XG4gIGlmICghc3RhY2spIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgZnJhbWVzID0gc3RhY2suc3BsaXQoXCJcXG5cIikuc2xpY2UoMSk7XG4gIGNvbnN0IGRlY2xhcmF0aW9uRnJhbWUgPSBmcmFtZXMuZmluZCgoZnJhbWUpID0+IHtcbiAgICByZXR1cm4gIShTT1VSQ0VfRlJBTUUudGVzdChmcmFtZSkgfHwgQlVJTERfRlJBTUUudGVzdChmcmFtZSkpO1xuICB9KTtcbiAgaWYgKCFkZWNsYXJhdGlvbkZyYW1lKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGRlY2xhcmF0aW9uUGF0aCA9IGRlY2xhcmF0aW9uRnJhbWUucmVwbGFjZSgvXFxzKmF0IFteKCldKlxcKChbXildKylcXCkvLCBcIiQxXCIpLnJlcGxhY2UoL15ALywgXCJcIik7XG4gIHJldHVybiBkZWNsYXJhdGlvblBhdGg7XG59XG5leHBvcnQge1xuICBnZXRDYWxsRnJhbWVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDYWxsRnJhbWUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isHandlerKind.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isHandlerKind.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHandlerKind: function() { return /* binding */ isHandlerKind; }\n/* harmony export */ });\nfunction isHandlerKind(kind) {\n  return (input) => {\n    return input != null && typeof input === \"object\" && \"__kind\" in input && input.__kind === kind;\n  };\n}\n\n//# sourceMappingURL=isHandlerKind.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvaXNIYW5kbGVyS2luZC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvaXNIYW5kbGVyS2luZC5tanM/ODU1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc0hhbmRsZXJLaW5kKGtpbmQpIHtcbiAgcmV0dXJuIChpbnB1dCkgPT4ge1xuICAgIHJldHVybiBpbnB1dCAhPSBudWxsICYmIHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIiAmJiBcIl9fa2luZFwiIGluIGlucHV0ICYmIGlucHV0Ll9fa2luZCA9PT0ga2luZDtcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGlzSGFuZGxlcktpbmRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc0hhbmRsZXJLaW5kLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isHandlerKind.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isIterable.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isIterable.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIterable: function() { return /* binding */ isIterable; }\n/* harmony export */ });\nfunction isIterable(fn) {\n  if (!fn) {\n    return false;\n  }\n  return Reflect.has(fn, Symbol.iterator) || Reflect.has(fn, Symbol.asyncIterator);\n}\n\n//# sourceMappingURL=isIterable.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvaXNJdGVyYWJsZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9pc0l0ZXJhYmxlLm1qcz9hYTM1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzSXRlcmFibGUoZm4pIHtcbiAgaWYgKCFmbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gUmVmbGVjdC5oYXMoZm4sIFN5bWJvbC5pdGVyYXRvcikgfHwgUmVmbGVjdC5oYXMoZm4sIFN5bWJvbC5hc3luY0l0ZXJhdG9yKTtcbn1cbmV4cG9ydCB7XG4gIGlzSXRlcmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc0l0ZXJhYmxlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isIterable.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isObject.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isObject.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: function() { return /* binding */ isObject; }\n/* harmony export */ });\nfunction isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n//# sourceMappingURL=isObject.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvaXNPYmplY3QubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvaXNPYmplY3QubWpzPzA0MTMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KHZhbHVlKTtcbn1cbmV4cG9ydCB7XG4gIGlzT2JqZWN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNPYmplY3QubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isObject.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStringEqual: function() { return /* binding */ isStringEqual; }\n/* harmony export */ });\nfunction isStringEqual(actual, expected) {\n  return actual.toLowerCase() === expected.toLowerCase();\n}\n\n//# sourceMappingURL=isStringEqual.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvaXNTdHJpbmdFcXVhbC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9pc1N0cmluZ0VxdWFsLm1qcz8yM2Y1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzU3RyaW5nRXF1YWwoYWN0dWFsLCBleHBlY3RlZCkge1xuICByZXR1cm4gYWN0dWFsLnRvTG93ZXJDYXNlKCkgPT09IGV4cGVjdGVkLnRvTG93ZXJDYXNlKCk7XG59XG5leHBvcnQge1xuICBpc1N0cmluZ0VxdWFsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNTdHJpbmdFcXVhbC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/jsonParse.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/jsonParse.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonParse: function() { return /* binding */ jsonParse; }\n/* harmony export */ });\nfunction jsonParse(value) {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return void 0;\n  }\n}\n\n//# sourceMappingURL=jsonParse.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvanNvblBhcnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9qc29uUGFyc2UubWpzPzI4M2UiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24ganNvblBhcnNlKHZhbHVlKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gdm9pZCAwO1xuICB9XG59XG5leHBvcnQge1xuICBqc29uUGFyc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29uUGFyc2UubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/jsonParse.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/mergeRight.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/mergeRight.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeRight: function() { return /* binding */ mergeRight; }\n/* harmony export */ });\n/* harmony import */ var _isObject_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isObject.mjs\");\n\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce(\n    (result, [key, rightValue]) => {\n      const leftValue = result[key];\n      if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n        result[key] = leftValue.concat(rightValue);\n        return result;\n      }\n      if ((0,_isObject_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(leftValue) && (0,_isObject_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(rightValue)) {\n        result[key] = mergeRight(leftValue, rightValue);\n        return result;\n      }\n      result[key] = rightValue;\n      return result;\n    },\n    Object.assign({}, left)\n  );\n}\n\n//# sourceMappingURL=mergeRight.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvbWVyZ2VSaWdodC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdURBQVEsZUFBZSx1REFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLG9CQUFvQjtBQUNwQjtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2ludGVybmFsL21lcmdlUmlnaHQubWpzPzViODciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tICcuL2lzT2JqZWN0Lm1qcyc7XG5mdW5jdGlvbiBtZXJnZVJpZ2h0KGxlZnQsIHJpZ2h0KSB7XG4gIHJldHVybiBPYmplY3QuZW50cmllcyhyaWdodCkucmVkdWNlKFxuICAgIChyZXN1bHQsIFtrZXksIHJpZ2h0VmFsdWVdKSA9PiB7XG4gICAgICBjb25zdCBsZWZ0VmFsdWUgPSByZXN1bHRba2V5XTtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGxlZnRWYWx1ZSkgJiYgQXJyYXkuaXNBcnJheShyaWdodFZhbHVlKSkge1xuICAgICAgICByZXN1bHRba2V5XSA9IGxlZnRWYWx1ZS5jb25jYXQocmlnaHRWYWx1ZSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBpZiAoaXNPYmplY3QobGVmdFZhbHVlKSAmJiBpc09iamVjdChyaWdodFZhbHVlKSkge1xuICAgICAgICByZXN1bHRba2V5XSA9IG1lcmdlUmlnaHQobGVmdFZhbHVlLCByaWdodFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHJlc3VsdFtrZXldID0gcmlnaHRWYWx1ZTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBPYmplY3QuYXNzaWduKHt9LCBsZWZ0KVxuICApO1xufVxuZXhwb3J0IHtcbiAgbWVyZ2VSaWdodFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lcmdlUmlnaHQubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/mergeRight.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pipeEvents: function() { return /* binding */ pipeEvents; }\n/* harmony export */ });\nfunction pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  const sourceEmit = function sourceEmit2(event, ...data) {\n    destination.emit(event, ...data);\n    return rawEmit.call(this, event, ...data);\n  };\n  sourceEmit._isPiped = true;\n  source.emit = sourceEmit;\n}\n\n//# sourceMappingURL=pipeEvents.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvcGlwZUV2ZW50cy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC9waXBlRXZlbnRzLm1qcz9kMDVhIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHBpcGVFdmVudHMoc291cmNlLCBkZXN0aW5hdGlvbikge1xuICBjb25zdCByYXdFbWl0ID0gc291cmNlLmVtaXQ7XG4gIGlmIChyYXdFbWl0Ll9pc1BpcGVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHNvdXJjZUVtaXQgPSBmdW5jdGlvbiBzb3VyY2VFbWl0MihldmVudCwgLi4uZGF0YSkge1xuICAgIGRlc3RpbmF0aW9uLmVtaXQoZXZlbnQsIC4uLmRhdGEpO1xuICAgIHJldHVybiByYXdFbWl0LmNhbGwodGhpcywgZXZlbnQsIC4uLmRhdGEpO1xuICB9O1xuICBzb3VyY2VFbWl0Ll9pc1BpcGVkID0gdHJ1ZTtcbiAgc291cmNlLmVtaXQgPSBzb3VyY2VFbWl0O1xufVxuZXhwb3J0IHtcbiAgcGlwZUV2ZW50c1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcGVFdmVudHMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toReadonlyArray: function() { return /* binding */ toReadonlyArray; }\n/* harmony export */ });\nfunction toReadonlyArray(source) {\n  const clone = [...source];\n  Object.freeze(clone);\n  return clone;\n}\n\n//# sourceMappingURL=toReadonlyArray.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvaW50ZXJuYWwvdG9SZWFkb25seUFycmF5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9pbnRlcm5hbC90b1JlYWRvbmx5QXJyYXkubWpzPzVmNjMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdG9SZWFkb25seUFycmF5KHNvdXJjZSkge1xuICBjb25zdCBjbG9uZSA9IFsuLi5zb3VyY2VdO1xuICBPYmplY3QuZnJlZXplKGNsb25lKTtcbiAgcmV0dXJuIGNsb25lO1xufVxuZXhwb3J0IHtcbiAgdG9SZWFkb25seUFycmF5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9SZWFkb25seUFycmF5Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodeColor: function() { return /* binding */ StatusCodeColor; },\n/* harmony export */   getStatusCodeColor: function() { return /* binding */ getStatusCodeColor; }\n/* harmony export */ });\nvar StatusCodeColor = /* @__PURE__ */ ((StatusCodeColor2) => {\n  StatusCodeColor2[\"Success\"] = \"#69AB32\";\n  StatusCodeColor2[\"Warning\"] = \"#F0BB4B\";\n  StatusCodeColor2[\"Danger\"] = \"#E95F5D\";\n  return StatusCodeColor2;\n})(StatusCodeColor || {});\nfunction getStatusCodeColor(status) {\n  if (status < 300) {\n    return \"#69AB32\" /* Success */;\n  }\n  if (status < 400) {\n    return \"#F0BB4B\" /* Warning */;\n  }\n  return \"#E95F5D\" /* Danger */;\n}\n\n//# sourceMappingURL=getStatusCodeColor.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9nZXRTdGF0dXNDb2RlQ29sb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsdUJBQXVCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9sb2dnaW5nL2dldFN0YXR1c0NvZGVDb2xvci5tanM/MTQ5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3RhdHVzQ29kZUNvbG9yID0gLyogQF9fUFVSRV9fICovICgoU3RhdHVzQ29kZUNvbG9yMikgPT4ge1xuICBTdGF0dXNDb2RlQ29sb3IyW1wiU3VjY2Vzc1wiXSA9IFwiIzY5QUIzMlwiO1xuICBTdGF0dXNDb2RlQ29sb3IyW1wiV2FybmluZ1wiXSA9IFwiI0YwQkI0QlwiO1xuICBTdGF0dXNDb2RlQ29sb3IyW1wiRGFuZ2VyXCJdID0gXCIjRTk1RjVEXCI7XG4gIHJldHVybiBTdGF0dXNDb2RlQ29sb3IyO1xufSkoU3RhdHVzQ29kZUNvbG9yIHx8IHt9KTtcbmZ1bmN0aW9uIGdldFN0YXR1c0NvZGVDb2xvcihzdGF0dXMpIHtcbiAgaWYgKHN0YXR1cyA8IDMwMCkge1xuICAgIHJldHVybiBcIiM2OUFCMzJcIiAvKiBTdWNjZXNzICovO1xuICB9XG4gIGlmIChzdGF0dXMgPCA0MDApIHtcbiAgICByZXR1cm4gXCIjRjBCQjRCXCIgLyogV2FybmluZyAqLztcbiAgfVxuICByZXR1cm4gXCIjRTk1RjVEXCIgLyogRGFuZ2VyICovO1xufVxuZXhwb3J0IHtcbiAgU3RhdHVzQ29kZUNvbG9yLFxuICBnZXRTdGF0dXNDb2RlQ29sb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRTdGF0dXNDb2RlQ29sb3IubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTimestamp: function() { return /* binding */ getTimestamp; }\n/* harmony export */ });\nfunction getTimestamp(options) {\n  const now = /* @__PURE__ */ new Date();\n  const timestamp = `${now.getHours().toString().padStart(2, \"0\")}:${now.getMinutes().toString().padStart(2, \"0\")}:${now.getSeconds().toString().padStart(2, \"0\")}`;\n  if (options?.milliseconds) {\n    return `${timestamp}.${now.getMilliseconds().toString().padStart(3, \"0\")}`;\n  }\n  return timestamp;\n}\n\n//# sourceMappingURL=getTimestamp.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9nZXRUaW1lc3RhbXAubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsdUJBQXVCLDJDQUEyQyxHQUFHLDZDQUE2QyxHQUFHLDZDQUE2QztBQUNsSztBQUNBLGNBQWMsVUFBVSxHQUFHLGtEQUFrRDtBQUM3RTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9nZXRUaW1lc3RhbXAubWpzPzU0N2UiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0VGltZXN0YW1wKG9wdGlvbnMpIHtcbiAgY29uc3Qgbm93ID0gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCk7XG4gIGNvbnN0IHRpbWVzdGFtcCA9IGAke25vdy5nZXRIb3VycygpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpfToke25vdy5nZXRNaW51dGVzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIil9OiR7bm93LmdldFNlY29uZHMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKX1gO1xuICBpZiAob3B0aW9ucz8ubWlsbGlzZWNvbmRzKSB7XG4gICAgcmV0dXJuIGAke3RpbWVzdGFtcH0uJHtub3cuZ2V0TWlsbGlzZWNvbmRzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgzLCBcIjBcIil9YDtcbiAgfVxuICByZXR1cm4gdGltZXN0YW1wO1xufVxuZXhwb3J0IHtcbiAgZ2V0VGltZXN0YW1wXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0VGltZXN0YW1wLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeRequest: function() { return /* binding */ serializeRequest; }\n/* harmony export */ });\nasync function serializeRequest(request) {\n  const requestClone = request.clone();\n  const requestText = await requestClone.text();\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText\n  };\n}\n\n//# sourceMappingURL=serializeRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9zZXJpYWxpemVSZXF1ZXN0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9zZXJpYWxpemVSZXF1ZXN0Lm1qcz8wNDg3Il0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHNlcmlhbGl6ZVJlcXVlc3QocmVxdWVzdCkge1xuICBjb25zdCByZXF1ZXN0Q2xvbmUgPSByZXF1ZXN0LmNsb25lKCk7XG4gIGNvbnN0IHJlcXVlc3RUZXh0ID0gYXdhaXQgcmVxdWVzdENsb25lLnRleHQoKTtcbiAgcmV0dXJuIHtcbiAgICB1cmw6IG5ldyBVUkwocmVxdWVzdC51cmwpLFxuICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgaGVhZGVyczogT2JqZWN0LmZyb21FbnRyaWVzKHJlcXVlc3QuaGVhZGVycy5lbnRyaWVzKCkpLFxuICAgIGJvZHk6IHJlcXVlc3RUZXh0XG4gIH07XG59XG5leHBvcnQge1xuICBzZXJpYWxpemVSZXF1ZXN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplUmVxdWVzdC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeResponse: function() { return /* binding */ serializeResponse; }\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/statuses */ \"(app-pages-browser)/./node_modules/@bundled-es-modules/statuses/index-esm.js\");\n\nconst { message } = _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nasync function serializeResponse(response) {\n  const responseClone = response.clone();\n  const responseText = await responseClone.text();\n  const responseStatus = responseClone.status || 200;\n  const responseStatusText = responseClone.statusText || message[responseStatus] || \"OK\";\n  return {\n    status: responseStatus,\n    statusText: responseStatusText,\n    headers: Object.fromEntries(responseClone.headers.entries()),\n    body: responseText\n  };\n}\n\n//# sourceMappingURL=serializeResponse.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbG9nZ2luZy9zZXJpYWxpemVSZXNwb25zZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7QUFDcEQsUUFBUSxVQUFVLEVBQUUsb0VBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL2xvZ2dpbmcvc2VyaWFsaXplUmVzcG9uc2UubWpzPzliN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0YXR1c2VzIGZyb20gXCJAYnVuZGxlZC1lcy1tb2R1bGVzL3N0YXR1c2VzXCI7XG5jb25zdCB7IG1lc3NhZ2UgfSA9IHN0YXR1c2VzO1xuYXN5bmMgZnVuY3Rpb24gc2VyaWFsaXplUmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgY29uc3QgcmVzcG9uc2VDbG9uZSA9IHJlc3BvbnNlLmNsb25lKCk7XG4gIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGF3YWl0IHJlc3BvbnNlQ2xvbmUudGV4dCgpO1xuICBjb25zdCByZXNwb25zZVN0YXR1cyA9IHJlc3BvbnNlQ2xvbmUuc3RhdHVzIHx8IDIwMDtcbiAgY29uc3QgcmVzcG9uc2VTdGF0dXNUZXh0ID0gcmVzcG9uc2VDbG9uZS5zdGF0dXNUZXh0IHx8IG1lc3NhZ2VbcmVzcG9uc2VTdGF0dXNdIHx8IFwiT0tcIjtcbiAgcmV0dXJuIHtcbiAgICBzdGF0dXM6IHJlc3BvbnNlU3RhdHVzLFxuICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlU3RhdHVzVGV4dCxcbiAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXMocmVzcG9uc2VDbG9uZS5oZWFkZXJzLmVudHJpZXMoKSksXG4gICAgYm9keTogcmVzcG9uc2VUZXh0XG4gIH07XG59XG5leHBvcnQge1xuICBzZXJpYWxpemVSZXNwb25zZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZVJlc3BvbnNlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coercePath: function() { return /* binding */ coercePath; },\n/* harmony export */   isPath: function() { return /* binding */ isPath; },\n/* harmony export */   matchRequestUrl: function() { return /* binding */ matchRequestUrl; }\n/* harmony export */ });\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path-to-regexp */ \"(app-pages-browser)/./node_modules/path-to-regexp/dist.es2015/index.js\");\n/* harmony import */ var _mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/interceptors */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/index.mjs\");\n/* harmony import */ var _normalizePath_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalizePath.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/matching/normalizePath.mjs\");\n\n\n\nfunction coercePath(path) {\n  return path.replace(\n    /([:a-zA-Z_-]*)(\\*{1,2})+/g,\n    (_, parameterName, wildcard) => {\n      const expression = \"(.*)\";\n      if (!parameterName) {\n        return expression;\n      }\n      return parameterName.startsWith(\":\") ? `${parameterName}${wildcard}` : `${parameterName}${expression}`;\n    }\n  ).replace(/([^\\/])(:)(?=\\d+)/, \"$1\\\\$2\").replace(/^([^\\/]+)(:)(?=\\/\\/)/, \"$1\\\\$2\");\n}\nfunction matchRequestUrl(url, path, baseUrl) {\n  const normalizedPath = (0,_normalizePath_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(path, baseUrl);\n  const cleanPath = typeof normalizedPath === \"string\" ? coercePath(normalizedPath) : normalizedPath;\n  const cleanUrl = (0,_mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__.getCleanUrl)(url);\n  const result = (0,path_to_regexp__WEBPACK_IMPORTED_MODULE_2__.match)(cleanPath, { decode: decodeURIComponent })(cleanUrl);\n  const params = result && result.params || {};\n  return {\n    matches: result !== false,\n    params\n  };\n}\nfunction isPath(value) {\n  return typeof value === \"string\" || value instanceof RegExp;\n}\n\n//# sourceMappingURL=matchRequestUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbWF0Y2hpbmcvbWF0Y2hSZXF1ZXN0VXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBdUM7QUFDVztBQUNFO0FBQ3BEO0FBQ0E7QUFDQSx1QkFBdUIsSUFBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGNBQWMsRUFBRSxTQUFTLE9BQU8sY0FBYyxFQUFFLFdBQVc7QUFDM0c7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsaUVBQWE7QUFDdEM7QUFDQSxtQkFBbUIsZ0VBQVc7QUFDOUIsaUJBQWlCLHFEQUFLLGNBQWMsNEJBQTRCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9tYXRjaGluZy9tYXRjaFJlcXVlc3RVcmwubWpzPzM3ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0Y2ggfSBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcbmltcG9ydCB7IGdldENsZWFuVXJsIH0gZnJvbSBcIkBtc3dqcy9pbnRlcmNlcHRvcnNcIjtcbmltcG9ydCB7IG5vcm1hbGl6ZVBhdGggfSBmcm9tICcuL25vcm1hbGl6ZVBhdGgubWpzJztcbmZ1bmN0aW9uIGNvZXJjZVBhdGgocGF0aCkge1xuICByZXR1cm4gcGF0aC5yZXBsYWNlKFxuICAgIC8oWzphLXpBLVpfLV0qKShcXCp7MSwyfSkrL2csXG4gICAgKF8sIHBhcmFtZXRlck5hbWUsIHdpbGRjYXJkKSA9PiB7XG4gICAgICBjb25zdCBleHByZXNzaW9uID0gXCIoLiopXCI7XG4gICAgICBpZiAoIXBhcmFtZXRlck5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGV4cHJlc3Npb247XG4gICAgICB9XG4gICAgICByZXR1cm4gcGFyYW1ldGVyTmFtZS5zdGFydHNXaXRoKFwiOlwiKSA/IGAke3BhcmFtZXRlck5hbWV9JHt3aWxkY2FyZH1gIDogYCR7cGFyYW1ldGVyTmFtZX0ke2V4cHJlc3Npb259YDtcbiAgICB9XG4gICkucmVwbGFjZSgvKFteXFwvXSkoOikoPz1cXGQrKS8sIFwiJDFcXFxcJDJcIikucmVwbGFjZSgvXihbXlxcL10rKSg6KSg/PVxcL1xcLykvLCBcIiQxXFxcXCQyXCIpO1xufVxuZnVuY3Rpb24gbWF0Y2hSZXF1ZXN0VXJsKHVybCwgcGF0aCwgYmFzZVVybCkge1xuICBjb25zdCBub3JtYWxpemVkUGF0aCA9IG5vcm1hbGl6ZVBhdGgocGF0aCwgYmFzZVVybCk7XG4gIGNvbnN0IGNsZWFuUGF0aCA9IHR5cGVvZiBub3JtYWxpemVkUGF0aCA9PT0gXCJzdHJpbmdcIiA/IGNvZXJjZVBhdGgobm9ybWFsaXplZFBhdGgpIDogbm9ybWFsaXplZFBhdGg7XG4gIGNvbnN0IGNsZWFuVXJsID0gZ2V0Q2xlYW5VcmwodXJsKTtcbiAgY29uc3QgcmVzdWx0ID0gbWF0Y2goY2xlYW5QYXRoLCB7IGRlY29kZTogZGVjb2RlVVJJQ29tcG9uZW50IH0pKGNsZWFuVXJsKTtcbiAgY29uc3QgcGFyYW1zID0gcmVzdWx0ICYmIHJlc3VsdC5wYXJhbXMgfHwge307XG4gIHJldHVybiB7XG4gICAgbWF0Y2hlczogcmVzdWx0ICE9PSBmYWxzZSxcbiAgICBwYXJhbXNcbiAgfTtcbn1cbmZ1bmN0aW9uIGlzUGF0aCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiIHx8IHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwO1xufVxuZXhwb3J0IHtcbiAgY29lcmNlUGF0aCxcbiAgaXNQYXRoLFxuICBtYXRjaFJlcXVlc3RVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRjaFJlcXVlc3RVcmwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/matching/normalizePath.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/matching/normalizePath.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizePath: function() { return /* binding */ normalizePath; }\n/* harmony export */ });\n/* harmony import */ var _url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url/cleanUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/url/cleanUrl.mjs\");\n/* harmony import */ var _url_getAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url/getAbsoluteUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs\");\n\n\nfunction normalizePath(path, baseUrl) {\n  if (path instanceof RegExp) {\n    return path;\n  }\n  const maybeAbsoluteUrl = (0,_url_getAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.getAbsoluteUrl)(path, baseUrl);\n  return (0,_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.cleanUrl)(maybeAbsoluteUrl);\n}\n\n//# sourceMappingURL=normalizePath.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvbWF0Y2hpbmcvbm9ybWFsaXplUGF0aC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ1k7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsdUVBQWM7QUFDekMsU0FBUywyREFBUTtBQUNqQjtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy9tYXRjaGluZy9ub3JtYWxpemVQYXRoLm1qcz85YjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsZWFuVXJsIH0gZnJvbSAnLi4vdXJsL2NsZWFuVXJsLm1qcyc7XG5pbXBvcnQgeyBnZXRBYnNvbHV0ZVVybCB9IGZyb20gJy4uL3VybC9nZXRBYnNvbHV0ZVVybC5tanMnO1xuZnVuY3Rpb24gbm9ybWFsaXplUGF0aChwYXRoLCBiYXNlVXJsKSB7XG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cbiAgY29uc3QgbWF5YmVBYnNvbHV0ZVVybCA9IGdldEFic29sdXRlVXJsKHBhdGgsIGJhc2VVcmwpO1xuICByZXR1cm4gY2xlYW5VcmwobWF5YmVBYnNvbHV0ZVVybCk7XG59XG5leHBvcnQge1xuICBub3JtYWxpemVQYXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplUGF0aC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/matching/normalizePath.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllRequestCookies: function() { return /* binding */ getAllRequestCookies; }\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/cookie */ \"(app-pages-browser)/./node_modules/@bundled-es-modules/cookie/index-esm.js\");\n/* harmony import */ var _cookieStore_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cookieStore.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/cookieStore.mjs\");\n\n\nfunction parseCookies(input) {\n  const parsedCookies = _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(input);\n  const cookies = {};\n  for (const cookieName in parsedCookies) {\n    if (typeof parsedCookies[cookieName] !== \"undefined\") {\n      cookies[cookieName] = parsedCookies[cookieName];\n    }\n  }\n  return cookies;\n}\nfunction getAllDocumentCookies() {\n  return parseCookies(document.cookie);\n}\nfunction getDocumentCookies(request) {\n  if (typeof document === \"undefined\" || typeof location === \"undefined\") {\n    return {};\n  }\n  switch (request.credentials) {\n    case \"same-origin\": {\n      const requestUrl = new URL(request.url);\n      return location.origin === requestUrl.origin ? getAllDocumentCookies() : {};\n    }\n    case \"include\": {\n      return getAllDocumentCookies();\n    }\n    default: {\n      return {};\n    }\n  }\n}\nfunction getAllRequestCookies(request) {\n  const requestCookieHeader = request.headers.get(\"cookie\");\n  const cookiesFromHeaders = requestCookieHeader ? parseCookies(requestCookieHeader) : {};\n  const cookiesFromDocument = getDocumentCookies(request);\n  for (const name in cookiesFromDocument) {\n    request.headers.append(\n      \"cookie\",\n      _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serialize(name, cookiesFromDocument[name])\n    );\n  }\n  const cookiesFromStore = _cookieStore_mjs__WEBPACK_IMPORTED_MODULE_1__.cookieStore.getCookies(request.url);\n  const storedCookiesObject = Object.fromEntries(\n    cookiesFromStore.map((cookie) => [cookie.key, cookie.value])\n  );\n  for (const cookie of cookiesFromStore) {\n    request.headers.append(\"cookie\", cookie.toString());\n  }\n  return {\n    ...cookiesFromDocument,\n    ...storedCookiesObject,\n    ...cookiesFromHeaders\n  };\n}\n\n//# sourceMappingURL=getRequestCookies.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9nZXRSZXF1ZXN0Q29va2llcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFEO0FBQ0o7QUFDakQ7QUFDQSx3QkFBd0Isa0VBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sa0VBQVc7QUFDakI7QUFDQTtBQUNBLDJCQUEyQix5REFBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9nZXRSZXF1ZXN0Q29va2llcy5tanM/ZjlmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29va2llVXRpbHMgZnJvbSBcIkBidW5kbGVkLWVzLW1vZHVsZXMvY29va2llXCI7XG5pbXBvcnQgeyBjb29raWVTdG9yZSB9IGZyb20gJy4uL2Nvb2tpZVN0b3JlLm1qcyc7XG5mdW5jdGlvbiBwYXJzZUNvb2tpZXMoaW5wdXQpIHtcbiAgY29uc3QgcGFyc2VkQ29va2llcyA9IGNvb2tpZVV0aWxzLnBhcnNlKGlucHV0KTtcbiAgY29uc3QgY29va2llcyA9IHt9O1xuICBmb3IgKGNvbnN0IGNvb2tpZU5hbWUgaW4gcGFyc2VkQ29va2llcykge1xuICAgIGlmICh0eXBlb2YgcGFyc2VkQ29va2llc1tjb29raWVOYW1lXSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgY29va2llc1tjb29raWVOYW1lXSA9IHBhcnNlZENvb2tpZXNbY29va2llTmFtZV07XG4gICAgfVxuICB9XG4gIHJldHVybiBjb29raWVzO1xufVxuZnVuY3Rpb24gZ2V0QWxsRG9jdW1lbnRDb29raWVzKCkge1xuICByZXR1cm4gcGFyc2VDb29raWVzKGRvY3VtZW50LmNvb2tpZSk7XG59XG5mdW5jdGlvbiBnZXREb2N1bWVudENvb2tpZXMocmVxdWVzdCkge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiIHx8IHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICBzd2l0Y2ggKHJlcXVlc3QuY3JlZGVudGlhbHMpIHtcbiAgICBjYXNlIFwic2FtZS1vcmlnaW5cIjoge1xuICAgICAgY29uc3QgcmVxdWVzdFVybCA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgICAgcmV0dXJuIGxvY2F0aW9uLm9yaWdpbiA9PT0gcmVxdWVzdFVybC5vcmlnaW4gPyBnZXRBbGxEb2N1bWVudENvb2tpZXMoKSA6IHt9O1xuICAgIH1cbiAgICBjYXNlIFwiaW5jbHVkZVwiOiB7XG4gICAgICByZXR1cm4gZ2V0QWxsRG9jdW1lbnRDb29raWVzKCk7XG4gICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGdldEFsbFJlcXVlc3RDb29raWVzKHJlcXVlc3QpIHtcbiAgY29uc3QgcmVxdWVzdENvb2tpZUhlYWRlciA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJjb29raWVcIik7XG4gIGNvbnN0IGNvb2tpZXNGcm9tSGVhZGVycyA9IHJlcXVlc3RDb29raWVIZWFkZXIgPyBwYXJzZUNvb2tpZXMocmVxdWVzdENvb2tpZUhlYWRlcikgOiB7fTtcbiAgY29uc3QgY29va2llc0Zyb21Eb2N1bWVudCA9IGdldERvY3VtZW50Q29va2llcyhyZXF1ZXN0KTtcbiAgZm9yIChjb25zdCBuYW1lIGluIGNvb2tpZXNGcm9tRG9jdW1lbnQpIHtcbiAgICByZXF1ZXN0LmhlYWRlcnMuYXBwZW5kKFxuICAgICAgXCJjb29raWVcIixcbiAgICAgIGNvb2tpZVV0aWxzLnNlcmlhbGl6ZShuYW1lLCBjb29raWVzRnJvbURvY3VtZW50W25hbWVdKVxuICAgICk7XG4gIH1cbiAgY29uc3QgY29va2llc0Zyb21TdG9yZSA9IGNvb2tpZVN0b3JlLmdldENvb2tpZXMocmVxdWVzdC51cmwpO1xuICBjb25zdCBzdG9yZWRDb29raWVzT2JqZWN0ID0gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgIGNvb2tpZXNGcm9tU3RvcmUubWFwKChjb29raWUpID0+IFtjb29raWUua2V5LCBjb29raWUudmFsdWVdKVxuICApO1xuICBmb3IgKGNvbnN0IGNvb2tpZSBvZiBjb29raWVzRnJvbVN0b3JlKSB7XG4gICAgcmVxdWVzdC5oZWFkZXJzLmFwcGVuZChcImNvb2tpZVwiLCBjb29raWUudG9TdHJpbmcoKSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICAuLi5jb29raWVzRnJvbURvY3VtZW50LFxuICAgIC4uLnN0b3JlZENvb2tpZXNPYmplY3QsXG4gICAgLi4uY29va2llc0Zyb21IZWFkZXJzXG4gIH07XG59XG5leHBvcnQge1xuICBnZXRBbGxSZXF1ZXN0Q29va2llc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJlcXVlc3RDb29raWVzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onUnhandledRequest: function() { return /* binding */ onUnhandledRequest; }\n/* harmony export */ });\n/* harmony import */ var _toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPublicUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _isCommonAssetRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../isCommonAssetRequest.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/isCommonAssetRequest.mjs\");\n\n\n\nasync function onUnhandledRequest(request, strategy = \"warn\") {\n  const url = new URL(request.url);\n  const publicUrl = (0,_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.toPublicUrl)(url) + url.search;\n  const requestBody = request.method === \"HEAD\" || request.method === \"GET\" ? null : await request.clone().text();\n  const messageDetails = `\n\n  \\u2022 ${request.method} ${publicUrl}\n\n${requestBody ? `  \\u2022 Request body: ${requestBody}\n\n` : \"\"}`;\n  const unhandledRequestMessage = `intercepted a request without a matching request handler:${messageDetails}If you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/http/intercepting-requests`;\n  function applyStrategy(strategy2) {\n    switch (strategy2) {\n      case \"error\": {\n        _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.error(\"Error: %s\", unhandledRequestMessage);\n        throw new _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalError(\n          _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n            'Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.'\n          )\n        );\n      }\n      case \"warn\": {\n        _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.warn(\"Warning: %s\", unhandledRequestMessage);\n        break;\n      }\n      case \"bypass\":\n        break;\n      default:\n        throw new _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalError(\n          _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n            'Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.',\n            strategy2\n          )\n        );\n    }\n  }\n  if (typeof strategy === \"function\") {\n    strategy(request, {\n      warning: applyStrategy.bind(null, \"warn\"),\n      error: applyStrategy.bind(null, \"error\")\n    });\n    return;\n  }\n  if (!(0,_isCommonAssetRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.isCommonAssetRequest)(request)) {\n    applyStrategy(strategy);\n  }\n}\n\n//# sourceMappingURL=onUnhandledRequest.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9vblVuaGFuZGxlZFJlcXVlc3QubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0Q7QUFDbUI7QUFDRztBQUN0RTtBQUNBO0FBQ0Esb0JBQW9CLDZEQUFXO0FBQy9CO0FBQ0E7O0FBRUEsV0FBVyxnQkFBZ0IsRUFBRTs7QUFFN0IsRUFBRSx3Q0FBd0M7O0FBRTFDLE9BQU87QUFDUCw4RkFBOEYsZUFBZTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQVE7QUFDaEIsa0JBQWtCLGlFQUFhO0FBQy9CLFVBQVUsNERBQVE7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQVE7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRUFBYTtBQUMvQixVQUFVLDREQUFRO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxPQUFPLCtFQUFvQjtBQUMzQjtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9vblVuaGFuZGxlZFJlcXVlc3QubWpzPzQzOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9QdWJsaWNVcmwgfSBmcm9tICcuL3RvUHVibGljVXJsLm1qcyc7XG5pbXBvcnQgeyBJbnRlcm5hbEVycm9yLCBkZXZVdGlscyB9IGZyb20gJy4uL2ludGVybmFsL2RldlV0aWxzLm1qcyc7XG5pbXBvcnQgeyBpc0NvbW1vbkFzc2V0UmVxdWVzdCB9IGZyb20gJy4uLy4uL2lzQ29tbW9uQXNzZXRSZXF1ZXN0Lm1qcyc7XG5hc3luYyBmdW5jdGlvbiBvblVuaGFuZGxlZFJlcXVlc3QocmVxdWVzdCwgc3RyYXRlZ3kgPSBcIndhcm5cIikge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgY29uc3QgcHVibGljVXJsID0gdG9QdWJsaWNVcmwodXJsKSArIHVybC5zZWFyY2g7XG4gIGNvbnN0IHJlcXVlc3RCb2R5ID0gcmVxdWVzdC5tZXRob2QgPT09IFwiSEVBRFwiIHx8IHJlcXVlc3QubWV0aG9kID09PSBcIkdFVFwiID8gbnVsbCA6IGF3YWl0IHJlcXVlc3QuY2xvbmUoKS50ZXh0KCk7XG4gIGNvbnN0IG1lc3NhZ2VEZXRhaWxzID0gYFxuXG4gIFxcdTIwMjIgJHtyZXF1ZXN0Lm1ldGhvZH0gJHtwdWJsaWNVcmx9XG5cbiR7cmVxdWVzdEJvZHkgPyBgICBcXHUyMDIyIFJlcXVlc3QgYm9keTogJHtyZXF1ZXN0Qm9keX1cblxuYCA6IFwiXCJ9YDtcbiAgY29uc3QgdW5oYW5kbGVkUmVxdWVzdE1lc3NhZ2UgPSBgaW50ZXJjZXB0ZWQgYSByZXF1ZXN0IHdpdGhvdXQgYSBtYXRjaGluZyByZXF1ZXN0IGhhbmRsZXI6JHttZXNzYWdlRGV0YWlsc31JZiB5b3Ugc3RpbGwgd2lzaCB0byBpbnRlcmNlcHQgdGhpcyB1bmhhbmRsZWQgcmVxdWVzdCwgcGxlYXNlIGNyZWF0ZSBhIHJlcXVlc3QgaGFuZGxlciBmb3IgaXQuXG5SZWFkIG1vcmU6IGh0dHBzOi8vbXN3anMuaW8vZG9jcy9odHRwL2ludGVyY2VwdGluZy1yZXF1ZXN0c2A7XG4gIGZ1bmN0aW9uIGFwcGx5U3RyYXRlZ3koc3RyYXRlZ3kyKSB7XG4gICAgc3dpdGNoIChzdHJhdGVneTIpIHtcbiAgICAgIGNhc2UgXCJlcnJvclwiOiB7XG4gICAgICAgIGRldlV0aWxzLmVycm9yKFwiRXJyb3I6ICVzXCIsIHVuaGFuZGxlZFJlcXVlc3RNZXNzYWdlKTtcbiAgICAgICAgdGhyb3cgbmV3IEludGVybmFsRXJyb3IoXG4gICAgICAgICAgZGV2VXRpbHMuZm9ybWF0TWVzc2FnZShcbiAgICAgICAgICAgICdDYW5ub3QgYnlwYXNzIGEgcmVxdWVzdCB3aGVuIHVzaW5nIHRoZSBcImVycm9yXCIgc3RyYXRlZ3kgZm9yIHRoZSBcIm9uVW5oYW5kbGVkUmVxdWVzdFwiIG9wdGlvbi4nXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgY2FzZSBcIndhcm5cIjoge1xuICAgICAgICBkZXZVdGlscy53YXJuKFwiV2FybmluZzogJXNcIiwgdW5oYW5kbGVkUmVxdWVzdE1lc3NhZ2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgXCJieXBhc3NcIjpcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgSW50ZXJuYWxFcnJvcihcbiAgICAgICAgICBkZXZVdGlscy5mb3JtYXRNZXNzYWdlKFxuICAgICAgICAgICAgJ0ZhaWxlZCB0byByZWFjdCB0byBhbiB1bmhhbmRsZWQgcmVxdWVzdDogdW5rbm93biBzdHJhdGVneSBcIiVzXCIuIFBsZWFzZSBwcm92aWRlIG9uZSBvZiB0aGUgc3VwcG9ydGVkIHN0cmF0ZWdpZXMgKFwiYnlwYXNzXCIsIFwid2FyblwiLCBcImVycm9yXCIpIG9yIGEgY3VzdG9tIGNhbGxiYWNrIGZ1bmN0aW9uIGFzIHRoZSB2YWx1ZSBvZiB0aGUgXCJvblVuaGFuZGxlZFJlcXVlc3RcIiBvcHRpb24uJyxcbiAgICAgICAgICAgIHN0cmF0ZWd5MlxuICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICB9XG4gIH1cbiAgaWYgKHR5cGVvZiBzdHJhdGVneSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgc3RyYXRlZ3kocmVxdWVzdCwge1xuICAgICAgd2FybmluZzogYXBwbHlTdHJhdGVneS5iaW5kKG51bGwsIFwid2FyblwiKSxcbiAgICAgIGVycm9yOiBhcHBseVN0cmF0ZWd5LmJpbmQobnVsbCwgXCJlcnJvclwiKVxuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIWlzQ29tbW9uQXNzZXRSZXF1ZXN0KHJlcXVlc3QpKSB7XG4gICAgYXBwbHlTdHJhdGVneShzdHJhdGVneSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIG9uVW5oYW5kbGVkUmVxdWVzdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9uVW5oYW5kbGVkUmVxdWVzdC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/request/storeResponseCookies.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/storeResponseCookies.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   storeResponseCookies: function() { return /* binding */ storeResponseCookies; }\n/* harmony export */ });\n/* harmony import */ var _cookieStore_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cookieStore.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/cookieStore.mjs\");\n/* harmony import */ var _HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../HttpResponse/decorators.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs\");\n\n\nasync function storeResponseCookies(request, response) {\n  const responseCookies = Reflect.get(response, _HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.kSetCookie);\n  if (responseCookies) {\n    await _cookieStore_mjs__WEBPACK_IMPORTED_MODULE_1__.cookieStore.setCookie(responseCookies, request.url);\n  }\n}\n\n//# sourceMappingURL=storeResponseCookies.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9zdG9yZVJlc3BvbnNlQ29va2llcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ1c7QUFDNUQ7QUFDQSxnREFBZ0Qsb0VBQVU7QUFDMUQ7QUFDQSxVQUFVLHlEQUFXO0FBQ3JCO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC9zdG9yZVJlc3BvbnNlQ29va2llcy5tanM/ZDU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb29raWVTdG9yZSB9IGZyb20gJy4uL2Nvb2tpZVN0b3JlLm1qcyc7XG5pbXBvcnQgeyBrU2V0Q29va2llIH0gZnJvbSAnLi4vSHR0cFJlc3BvbnNlL2RlY29yYXRvcnMubWpzJztcbmFzeW5jIGZ1bmN0aW9uIHN0b3JlUmVzcG9uc2VDb29raWVzKHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIGNvbnN0IHJlc3BvbnNlQ29va2llcyA9IFJlZmxlY3QuZ2V0KHJlc3BvbnNlLCBrU2V0Q29va2llKTtcbiAgaWYgKHJlc3BvbnNlQ29va2llcykge1xuICAgIGF3YWl0IGNvb2tpZVN0b3JlLnNldENvb2tpZShyZXNwb25zZUNvb2tpZXMsIHJlcXVlc3QudXJsKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgc3RvcmVSZXNwb25zZUNvb2tpZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yZVJlc3BvbnNlQ29va2llcy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/request/storeResponseCookies.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toPublicUrl: function() { return /* binding */ toPublicUrl; }\n/* harmony export */ });\nfunction toPublicUrl(url) {\n  if (typeof location === \"undefined\") {\n    return url.toString();\n  }\n  const urlInstance = url instanceof URL ? url : new URL(url);\n  return urlInstance.origin === location.origin ? urlInstance.pathname : urlInstance.origin + urlInstance.pathname;\n}\n\n//# sourceMappingURL=toPublicUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvcmVxdWVzdC90b1B1YmxpY1VybC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3V0aWxzL3JlcXVlc3QvdG9QdWJsaWNVcmwubWpzPzQ1NmMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdG9QdWJsaWNVcmwodXJsKSB7XG4gIGlmICh0eXBlb2YgbG9jYXRpb24gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG4gIH1cbiAgY29uc3QgdXJsSW5zdGFuY2UgPSB1cmwgaW5zdGFuY2VvZiBVUkwgPyB1cmwgOiBuZXcgVVJMKHVybCk7XG4gIHJldHVybiB1cmxJbnN0YW5jZS5vcmlnaW4gPT09IGxvY2F0aW9uLm9yaWdpbiA/IHVybEluc3RhbmNlLnBhdGhuYW1lIDogdXJsSW5zdGFuY2Uub3JpZ2luICsgdXJsSW5zdGFuY2UucGF0aG5hbWU7XG59XG5leHBvcnQge1xuICB0b1B1YmxpY1VybFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRvUHVibGljVXJsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/toResponseInit.mjs":
/*!************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/toResponseInit.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toResponseInit: function() { return /* binding */ toResponseInit; }\n/* harmony export */ });\nfunction toResponseInit(response) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries())\n  };\n}\n\n//# sourceMappingURL=toResponseInit.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvdG9SZXNwb25zZUluaXQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy90b1Jlc3BvbnNlSW5pdC5tanM/MTE5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB0b1Jlc3BvbnNlSW5pdChyZXNwb25zZSkge1xuICByZXR1cm4ge1xuICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsXG4gICAgaGVhZGVyczogT2JqZWN0LmZyb21FbnRyaWVzKHJlc3BvbnNlLmhlYWRlcnMuZW50cmllcygpKVxuICB9O1xufVxuZXhwb3J0IHtcbiAgdG9SZXNwb25zZUluaXRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b1Jlc3BvbnNlSW5pdC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/toResponseInit.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/url/cleanUrl.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/url/cleanUrl.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanUrl: function() { return /* binding */ cleanUrl; },\n/* harmony export */   getSearchParams: function() { return /* binding */ getSearchParams; }\n/* harmony export */ });\nconst REDUNDANT_CHARACTERS_EXP = /[\\?|#].*$/g;\nfunction getSearchParams(path) {\n  return new URL(`/${path}`, \"http://localhost\").searchParams;\n}\nfunction cleanUrl(path) {\n  if (path.endsWith(\"?\")) {\n    return path;\n  }\n  return path.replace(REDUNDANT_CHARACTERS_EXP, \"\");\n}\n\n//# sourceMappingURL=cleanUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvdXJsL2NsZWFuVXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxxQkFBcUIsS0FBSztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy91cmwvY2xlYW5VcmwubWpzP2M3YmYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUkVEVU5EQU5UX0NIQVJBQ1RFUlNfRVhQID0gL1tcXD98I10uKiQvZztcbmZ1bmN0aW9uIGdldFNlYXJjaFBhcmFtcyhwYXRoKSB7XG4gIHJldHVybiBuZXcgVVJMKGAvJHtwYXRofWAsIFwiaHR0cDovL2xvY2FsaG9zdFwiKS5zZWFyY2hQYXJhbXM7XG59XG5mdW5jdGlvbiBjbGVhblVybChwYXRoKSB7XG4gIGlmIChwYXRoLmVuZHNXaXRoKFwiP1wiKSkge1xuICAgIHJldHVybiBwYXRoO1xuICB9XG4gIHJldHVybiBwYXRoLnJlcGxhY2UoUkVEVU5EQU5UX0NIQVJBQ1RFUlNfRVhQLCBcIlwiKTtcbn1cbmV4cG9ydCB7XG4gIGNsZWFuVXJsLFxuICBnZXRTZWFyY2hQYXJhbXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGVhblVybC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/url/cleanUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAbsoluteUrl: function() { return /* binding */ getAbsoluteUrl; }\n/* harmony export */ });\n/* harmony import */ var _isAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isAbsoluteUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs\");\n\nfunction getAbsoluteUrl(path, baseUrl) {\n  if ((0,_isAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl)(path)) {\n    return path;\n  }\n  if (path.startsWith(\"*\")) {\n    return path;\n  }\n  const origin = baseUrl || typeof location !== \"undefined\" && location.href;\n  return origin ? (\n    // Encode and decode the path to preserve escaped characters.\n    decodeURI(new URL(encodeURI(path), origin).href)\n  ) : path;\n}\n\n//# sourceMappingURL=getAbsoluteUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvdXJsL2dldEFic29sdXRlVXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDtBQUNwRDtBQUNBLE1BQU0saUVBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS91dGlscy91cmwvZ2V0QWJzb2x1dGVVcmwubWpzPzVmNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNBYnNvbHV0ZVVybCB9IGZyb20gJy4vaXNBYnNvbHV0ZVVybC5tanMnO1xuZnVuY3Rpb24gZ2V0QWJzb2x1dGVVcmwocGF0aCwgYmFzZVVybCkge1xuICBpZiAoaXNBYnNvbHV0ZVVybChwYXRoKSkge1xuICAgIHJldHVybiBwYXRoO1xuICB9XG4gIGlmIChwYXRoLnN0YXJ0c1dpdGgoXCIqXCIpKSB7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cbiAgY29uc3Qgb3JpZ2luID0gYmFzZVVybCB8fCB0eXBlb2YgbG9jYXRpb24gIT09IFwidW5kZWZpbmVkXCIgJiYgbG9jYXRpb24uaHJlZjtcbiAgcmV0dXJuIG9yaWdpbiA/IChcbiAgICAvLyBFbmNvZGUgYW5kIGRlY29kZSB0aGUgcGF0aCB0byBwcmVzZXJ2ZSBlc2NhcGVkIGNoYXJhY3RlcnMuXG4gICAgZGVjb2RlVVJJKG5ldyBVUkwoZW5jb2RlVVJJKHBhdGgpLCBvcmlnaW4pLmhyZWYpXG4gICkgOiBwYXRoO1xufVxuZXhwb3J0IHtcbiAgZ2V0QWJzb2x1dGVVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBYnNvbHV0ZVVybC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbsoluteUrl: function() { return /* binding */ isAbsoluteUrl; }\n/* harmony export */ });\nfunction isAbsoluteUrl(url) {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n}\n\n//# sourceMappingURL=isAbsoluteUrl.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvdXJsL2lzQWJzb2x1dGVVcmwubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvdXRpbHMvdXJsL2lzQWJzb2x1dGVVcmwubWpzP2RhYjEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNBYnNvbHV0ZVVybCh1cmwpIHtcbiAgcmV0dXJuIC9eKFthLXpdW2EtelxcZFxcK1xcLVxcLl0qOik/XFwvXFwvL2kudGVzdCh1cmwpO1xufVxuZXhwb3J0IHtcbiAgaXNBYnNvbHV0ZVVybFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzQWJzb2x1dGVVcmwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/ws/handleWebSocketEvent.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/ws/handleWebSocketEvent.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleWebSocketEvent: function() { return /* binding */ handleWebSocketEvent; }\n/* harmony export */ });\n/* harmony import */ var _webSocketInterceptor_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webSocketInterceptor.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/webSocketInterceptor.mjs\");\n/* harmony import */ var _utils_request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request/onUnhandledRequest.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs\");\n/* harmony import */ var _utils_internal_isHandlerKind_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/internal/isHandlerKind.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/isHandlerKind.mjs\");\n\n\n\nfunction handleWebSocketEvent(options) {\n  _webSocketInterceptor_mjs__WEBPACK_IMPORTED_MODULE_0__.webSocketInterceptor.on(\"connection\", async (connection) => {\n    const handlers = options.getHandlers().filter((0,_utils_internal_isHandlerKind_mjs__WEBPACK_IMPORTED_MODULE_1__.isHandlerKind)(\"EventHandler\"));\n    if (handlers.length > 0) {\n      options?.onMockedConnection(connection);\n      await Promise.all(\n        handlers.map((handler) => {\n          return handler.run(connection);\n        })\n      );\n      return;\n    }\n    const request = new Request(connection.client.url, {\n      headers: {\n        upgrade: \"websocket\",\n        connection: \"upgrade\"\n      }\n    });\n    await (0,_utils_request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.onUnhandledRequest)(\n      request,\n      options.getUnhandledRequestStrategy()\n    ).catch((error) => {\n      const errorEvent = new Event(\"error\");\n      Object.defineProperty(errorEvent, \"cause\", {\n        enumerable: true,\n        configurable: false,\n        value: error\n      });\n      connection.client.socket.dispatchEvent(errorEvent);\n    });\n    options?.onPassthroughConnection(connection);\n    connection.server.connect();\n  });\n}\n\n//# sourceMappingURL=handleWebSocketEvent.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvd3MvaGFuZGxlV2ViU29ja2V0RXZlbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0U7QUFHakI7QUFDbUI7QUFDcEU7QUFDQSxFQUFFLDJFQUFvQjtBQUN0QixrREFBa0QsZ0ZBQWE7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFVBQVUseUZBQWtCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS93cy9oYW5kbGVXZWJTb2NrZXRFdmVudC5tanM/Y2FiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3ZWJTb2NrZXRJbnRlcmNlcHRvciB9IGZyb20gJy4vd2ViU29ja2V0SW50ZXJjZXB0b3IubWpzJztcbmltcG9ydCB7XG4gIG9uVW5oYW5kbGVkUmVxdWVzdFxufSBmcm9tICcuLi91dGlscy9yZXF1ZXN0L29uVW5oYW5kbGVkUmVxdWVzdC5tanMnO1xuaW1wb3J0IHsgaXNIYW5kbGVyS2luZCB9IGZyb20gJy4uL3V0aWxzL2ludGVybmFsL2lzSGFuZGxlcktpbmQubWpzJztcbmZ1bmN0aW9uIGhhbmRsZVdlYlNvY2tldEV2ZW50KG9wdGlvbnMpIHtcbiAgd2ViU29ja2V0SW50ZXJjZXB0b3Iub24oXCJjb25uZWN0aW9uXCIsIGFzeW5jIChjb25uZWN0aW9uKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlcnMgPSBvcHRpb25zLmdldEhhbmRsZXJzKCkuZmlsdGVyKGlzSGFuZGxlcktpbmQoXCJFdmVudEhhbmRsZXJcIikpO1xuICAgIGlmIChoYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICBvcHRpb25zPy5vbk1vY2tlZENvbm5lY3Rpb24oY29ubmVjdGlvbik7XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgICAgaGFuZGxlcnMubWFwKChoYW5kbGVyKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZXIucnVuKGNvbm5lY3Rpb24pO1xuICAgICAgICB9KVxuICAgICAgKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KGNvbm5lY3Rpb24uY2xpZW50LnVybCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICB1cGdyYWRlOiBcIndlYnNvY2tldFwiLFxuICAgICAgICBjb25uZWN0aW9uOiBcInVwZ3JhZGVcIlxuICAgICAgfVxuICAgIH0pO1xuICAgIGF3YWl0IG9uVW5oYW5kbGVkUmVxdWVzdChcbiAgICAgIHJlcXVlc3QsXG4gICAgICBvcHRpb25zLmdldFVuaGFuZGxlZFJlcXVlc3RTdHJhdGVneSgpXG4gICAgKS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnN0IGVycm9yRXZlbnQgPSBuZXcgRXZlbnQoXCJlcnJvclwiKTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnJvckV2ZW50LCBcImNhdXNlXCIsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgdmFsdWU6IGVycm9yXG4gICAgICB9KTtcbiAgICAgIGNvbm5lY3Rpb24uY2xpZW50LnNvY2tldC5kaXNwYXRjaEV2ZW50KGVycm9yRXZlbnQpO1xuICAgIH0pO1xuICAgIG9wdGlvbnM/Lm9uUGFzc3Rocm91Z2hDb25uZWN0aW9uKGNvbm5lY3Rpb24pO1xuICAgIGNvbm5lY3Rpb24uc2VydmVyLmNvbm5lY3QoKTtcbiAgfSk7XG59XG5leHBvcnQge1xuICBoYW5kbGVXZWJTb2NrZXRFdmVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhbmRsZVdlYlNvY2tldEV2ZW50Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/ws/handleWebSocketEvent.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/attachWebSocketLogger.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/ws/utils/attachWebSocketLogger.mjs ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachWebSocketLogger: function() { return /* binding */ attachWebSocketLogger; },\n/* harmony export */   logConnectionOpen: function() { return /* binding */ logConnectionOpen; }\n/* harmony export */ });\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/internal/devUtils.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/logging/getTimestamp.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs\");\n/* harmony import */ var _utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/request/toPublicUrl.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _getMessageLength_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getMessageLength.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/getMessageLength.mjs\");\n/* harmony import */ var _getPublicData_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getPublicData.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/getPublicData.mjs\");\n\n\n\n\n\nconst colors = {\n  system: \"#3b82f6\",\n  outgoing: \"#22c55e\",\n  incoming: \"#ef4444\",\n  mocked: \"#ff6a33\"\n};\nfunction attachWebSocketLogger(connection) {\n  const { client, server } = connection;\n  logConnectionOpen(client);\n  client.addEventListener(\"message\", (event) => {\n    logOutgoingClientMessage(event);\n  });\n  client.addEventListener(\"close\", (event) => {\n    logConnectionClose(event);\n  });\n  client.socket.addEventListener(\"error\", (event) => {\n    logClientError(event);\n  });\n  client.send = new Proxy(client.send, {\n    apply(target, thisArg, args) {\n      const [data] = args;\n      const messageEvent = new MessageEvent(\"message\", { data });\n      Object.defineProperties(messageEvent, {\n        currentTarget: {\n          enumerable: true,\n          writable: false,\n          value: client.socket\n        },\n        target: {\n          enumerable: true,\n          writable: false,\n          value: client.socket\n        }\n      });\n      queueMicrotask(() => {\n        logIncomingMockedClientMessage(messageEvent);\n      });\n      return Reflect.apply(target, thisArg, args);\n    }\n  });\n  server.addEventListener(\n    \"open\",\n    () => {\n      server.addEventListener(\"message\", (event) => {\n        logIncomingServerMessage(event);\n      });\n    },\n    { once: true }\n  );\n  server.send = new Proxy(server.send, {\n    apply(target, thisArg, args) {\n      const [data] = args;\n      const messageEvent = new MessageEvent(\"message\", { data });\n      Object.defineProperties(messageEvent, {\n        currentTarget: {\n          enumerable: true,\n          writable: false,\n          value: server.socket\n        },\n        target: {\n          enumerable: true,\n          writable: false,\n          value: server.socket\n        }\n      });\n      logOutgoingMockedClientMessage(messageEvent);\n      return Reflect.apply(target, thisArg, args);\n    }\n  });\n}\nfunction logConnectionOpen(client) {\n  const publicUrl = (0,_utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.toPublicUrl)(client.url);\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(`${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)()} %c\\u25B6%c ${publicUrl}`),\n    `color:${colors.system}`,\n    \"color:inherit\"\n  );\n  console.log(\"Client:\", client.socket);\n  console.groupEnd();\n}\nfunction logConnectionClose(event) {\n  const target = event.target;\n  const publicUrl = (0,_utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.toPublicUrl)(target.url);\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n      `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)({ milliseconds: true })} %c\\u25A0%c ${publicUrl}`\n    ),\n    `color:${colors.system}`,\n    \"color:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nfunction logClientError(event) {\n  const socket = event.target;\n  const publicUrl = (0,_utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.toPublicUrl)(socket.url);\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n      `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)({ milliseconds: true })} %c\\xD7%c ${publicUrl}`\n    ),\n    `color:${colors.system}`,\n    \"color:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logOutgoingClientMessage(event) {\n  const byteLength = (0,_getMessageLength_mjs__WEBPACK_IMPORTED_MODULE_3__.getMessageLength)(event.data);\n  const publicData = await (0,_getPublicData_mjs__WEBPACK_IMPORTED_MODULE_4__.getPublicData)(event.data);\n  const arrow = event.defaultPrevented ? \"\\u21E1\" : \"\\u2B06\";\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n      `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)({ milliseconds: true })} %c${arrow}%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.outgoing}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logOutgoingMockedClientMessage(event) {\n  const byteLength = (0,_getMessageLength_mjs__WEBPACK_IMPORTED_MODULE_3__.getMessageLength)(event.data);\n  const publicData = await (0,_getPublicData_mjs__WEBPACK_IMPORTED_MODULE_4__.getPublicData)(event.data);\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n      `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)({ milliseconds: true })} %c\\u2B06%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.mocked}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logIncomingMockedClientMessage(event) {\n  const byteLength = (0,_getMessageLength_mjs__WEBPACK_IMPORTED_MODULE_3__.getMessageLength)(event.data);\n  const publicData = await (0,_getPublicData_mjs__WEBPACK_IMPORTED_MODULE_4__.getPublicData)(event.data);\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n      `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)({ milliseconds: true })} %c\\u2B07%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.mocked}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logIncomingServerMessage(event) {\n  const byteLength = (0,_getMessageLength_mjs__WEBPACK_IMPORTED_MODULE_3__.getMessageLength)(event.data);\n  const publicData = await (0,_getPublicData_mjs__WEBPACK_IMPORTED_MODULE_4__.getPublicData)(event.data);\n  const arrow = event.defaultPrevented ? \"\\u21E3\" : \"\\u2B07\";\n  console.groupCollapsed(\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n      `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)({ milliseconds: true })} %c${arrow}%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.incoming}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\n\n//# sourceMappingURL=attachWebSocketLogger.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/attachWebSocketLogger.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/getMessageLength.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/ws/utils/getMessageLength.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMessageLength: function() { return /* binding */ getMessageLength; }\n/* harmony export */ });\nfunction getMessageLength(data) {\n  if (data instanceof Blob) {\n    return data.size;\n  }\n  if (data instanceof ArrayBuffer) {\n    return data.byteLength;\n  }\n  return new Blob([data]).size;\n}\n\n//# sourceMappingURL=getMessageLength.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvd3MvdXRpbHMvZ2V0TWVzc2FnZUxlbmd0aC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zdy9saWIvY29yZS93cy91dGlscy9nZXRNZXNzYWdlTGVuZ3RoLm1qcz83Y2U1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdldE1lc3NhZ2VMZW5ndGgoZGF0YSkge1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIEJsb2IpIHtcbiAgICByZXR1cm4gZGF0YS5zaXplO1xuICB9XG4gIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gZGF0YS5ieXRlTGVuZ3RoO1xuICB9XG4gIHJldHVybiBuZXcgQmxvYihbZGF0YV0pLnNpemU7XG59XG5leHBvcnQge1xuICBnZXRNZXNzYWdlTGVuZ3RoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWVzc2FnZUxlbmd0aC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/getMessageLength.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/getPublicData.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/msw/lib/core/ws/utils/getPublicData.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPublicData: function() { return /* binding */ getPublicData; }\n/* harmony export */ });\n/* harmony import */ var _truncateMessage_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./truncateMessage.mjs */ \"(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/truncateMessage.mjs\");\n\nasync function getPublicData(data) {\n  if (data instanceof Blob) {\n    const text = await data.text();\n    return `Blob(${(0,_truncateMessage_mjs__WEBPACK_IMPORTED_MODULE_0__.truncateMessage)(text)})`;\n  }\n  if (typeof data === \"object\" && \"byteLength\" in data) {\n    const text = new TextDecoder().decode(data);\n    return `ArrayBuffer(${(0,_truncateMessage_mjs__WEBPACK_IMPORTED_MODULE_0__.truncateMessage)(text)})`;\n  }\n  return (0,_truncateMessage_mjs__WEBPACK_IMPORTED_MODULE_0__.truncateMessage)(data);\n}\n\n//# sourceMappingURL=getPublicData.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvd3MvdXRpbHMvZ2V0UHVibGljRGF0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFFQUFlLE9BQU87QUFDekM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHFFQUFlLE9BQU87QUFDaEQ7QUFDQSxTQUFTLHFFQUFlO0FBQ3hCO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3dzL3V0aWxzL2dldFB1YmxpY0RhdGEubWpzP2E0Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHJ1bmNhdGVNZXNzYWdlIH0gZnJvbSAnLi90cnVuY2F0ZU1lc3NhZ2UubWpzJztcbmFzeW5jIGZ1bmN0aW9uIGdldFB1YmxpY0RhdGEoZGF0YSkge1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIEJsb2IpIHtcbiAgICBjb25zdCB0ZXh0ID0gYXdhaXQgZGF0YS50ZXh0KCk7XG4gICAgcmV0dXJuIGBCbG9iKCR7dHJ1bmNhdGVNZXNzYWdlKHRleHQpfSlgO1xuICB9XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gXCJvYmplY3RcIiAmJiBcImJ5dGVMZW5ndGhcIiBpbiBkYXRhKSB7XG4gICAgY29uc3QgdGV4dCA9IG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShkYXRhKTtcbiAgICByZXR1cm4gYEFycmF5QnVmZmVyKCR7dHJ1bmNhdGVNZXNzYWdlKHRleHQpfSlgO1xuICB9XG4gIHJldHVybiB0cnVuY2F0ZU1lc3NhZ2UoZGF0YSk7XG59XG5leHBvcnQge1xuICBnZXRQdWJsaWNEYXRhXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UHVibGljRGF0YS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/getPublicData.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/truncateMessage.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/msw/lib/core/ws/utils/truncateMessage.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   truncateMessage: function() { return /* binding */ truncateMessage; }\n/* harmony export */ });\nconst MAX_LENGTH = 24;\nfunction truncateMessage(message) {\n  if (message.length <= MAX_LENGTH) {\n    return message;\n  }\n  return `${message.slice(0, MAX_LENGTH)}\\u2026`;\n}\n\n//# sourceMappingURL=truncateMessage.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvd3MvdXRpbHMvdHJ1bmNhdGVNZXNzYWdlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3dzL3V0aWxzL3RydW5jYXRlTWVzc2FnZS5tanM/NzI5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNQVhfTEVOR1RIID0gMjQ7XG5mdW5jdGlvbiB0cnVuY2F0ZU1lc3NhZ2UobWVzc2FnZSkge1xuICBpZiAobWVzc2FnZS5sZW5ndGggPD0gTUFYX0xFTkdUSCkge1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9XG4gIHJldHVybiBgJHttZXNzYWdlLnNsaWNlKDAsIE1BWF9MRU5HVEgpfVxcdTIwMjZgO1xufVxuZXhwb3J0IHtcbiAgdHJ1bmNhdGVNZXNzYWdlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJ1bmNhdGVNZXNzYWdlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/ws/utils/truncateMessage.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/msw/lib/core/ws/webSocketInterceptor.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/ws/webSocketInterceptor.mjs ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webSocketInterceptor: function() { return /* binding */ webSocketInterceptor; }\n/* harmony export */ });\n/* harmony import */ var _mswjs_interceptors_WebSocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/interceptors/WebSocket */ \"(app-pages-browser)/./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs\");\n\nconst webSocketInterceptor = new _mswjs_interceptors_WebSocket__WEBPACK_IMPORTED_MODULE_0__.WebSocketInterceptor();\n\n//# sourceMappingURL=webSocketInterceptor.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tc3cvbGliL2NvcmUvd3Mvd2ViU29ja2V0SW50ZXJjZXB0b3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFFO0FBQ3JFLGlDQUFpQywrRUFBb0I7QUFHbkQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXN3L2xpYi9jb3JlL3dzL3dlYlNvY2tldEludGVyY2VwdG9yLm1qcz9hODQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYlNvY2tldEludGVyY2VwdG9yIH0gZnJvbSBcIkBtc3dqcy9pbnRlcmNlcHRvcnMvV2ViU29ja2V0XCI7XG5jb25zdCB3ZWJTb2NrZXRJbnRlcmNlcHRvciA9IG5ldyBXZWJTb2NrZXRJbnRlcmNlcHRvcigpO1xuZXhwb3J0IHtcbiAgd2ViU29ja2V0SW50ZXJjZXB0b3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJTb2NrZXRJbnRlcmNlcHRvci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/msw/lib/core/ws/webSocketInterceptor.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/outvariant/lib/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/outvariant/lib/index.mjs ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvariantError: function() { return /* binding */ InvariantError; },\n/* harmony export */   format: function() { return /* binding */ format; },\n/* harmony export */   invariant: function() { return /* binding */ invariant; }\n/* harmony export */ });\n// src/format.ts\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\n\n// src/invariant.ts\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, ...positionals);\n    let error;\n    try {\n      error = Reflect.construct(ErrorConstructor, [\n        formatMessage\n      ]);\n    } catch (err) {\n      error = ErrorConstructor(formatMessage);\n    }\n    throw error;\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9vdXR2YXJpYW50L2xpYi9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZDQUE2QztBQUN6RTtBQUNBLGlEQUFpRCxJQUFJO0FBQ3JEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvb3V0dmFyaWFudC9saWIvaW5kZXgubWpzPzJmOTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2Zvcm1hdC50c1xudmFyIFBPU0lUSU9OQUxTX0VYUCA9IC8oJT8pKCUoW3NkaWpvXSkpL2c7XG5mdW5jdGlvbiBzZXJpYWxpemVQb3NpdGlvbmFsKHBvc2l0aW9uYWwsIGZsYWcpIHtcbiAgc3dpdGNoIChmbGFnKSB7XG4gICAgY2FzZSBcInNcIjpcbiAgICAgIHJldHVybiBwb3NpdGlvbmFsO1xuICAgIGNhc2UgXCJkXCI6XG4gICAgY2FzZSBcImlcIjpcbiAgICAgIHJldHVybiBOdW1iZXIocG9zaXRpb25hbCk7XG4gICAgY2FzZSBcImpcIjpcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShwb3NpdGlvbmFsKTtcbiAgICBjYXNlIFwib1wiOiB7XG4gICAgICBpZiAodHlwZW9mIHBvc2l0aW9uYWwgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uYWw7XG4gICAgICB9XG4gICAgICBjb25zdCBqc29uID0gSlNPTi5zdHJpbmdpZnkocG9zaXRpb25hbCk7XG4gICAgICBpZiAoanNvbiA9PT0gXCJ7fVwiIHx8IGpzb24gPT09IFwiW11cIiB8fCAvXlxcW29iamVjdCAuKz9cXF0kLy50ZXN0KGpzb24pKSB7XG4gICAgICAgIHJldHVybiBwb3NpdGlvbmFsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBmb3JtYXQobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpIHtcbiAgaWYgKHBvc2l0aW9uYWxzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9XG4gIGxldCBwb3NpdGlvbmFsSW5kZXggPSAwO1xuICBsZXQgZm9ybWF0dGVkTWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZShcbiAgICBQT1NJVElPTkFMU19FWFAsXG4gICAgKG1hdGNoLCBpc0VzY2FwZWQsIF8sIGZsYWcpID0+IHtcbiAgICAgIGNvbnN0IHBvc2l0aW9uYWwgPSBwb3NpdGlvbmFsc1twb3NpdGlvbmFsSW5kZXhdO1xuICAgICAgY29uc3QgdmFsdWUgPSBzZXJpYWxpemVQb3NpdGlvbmFsKHBvc2l0aW9uYWwsIGZsYWcpO1xuICAgICAgaWYgKCFpc0VzY2FwZWQpIHtcbiAgICAgICAgcG9zaXRpb25hbEluZGV4Kys7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9XG4gICk7XG4gIGlmIChwb3NpdGlvbmFsSW5kZXggPCBwb3NpdGlvbmFscy5sZW5ndGgpIHtcbiAgICBmb3JtYXR0ZWRNZXNzYWdlICs9IGAgJHtwb3NpdGlvbmFscy5zbGljZShwb3NpdGlvbmFsSW5kZXgpLmpvaW4oXCIgXCIpfWA7XG4gIH1cbiAgZm9ybWF0dGVkTWVzc2FnZSA9IGZvcm1hdHRlZE1lc3NhZ2UucmVwbGFjZSgvJXsyLDJ9L2csIFwiJVwiKTtcbiAgcmV0dXJuIGZvcm1hdHRlZE1lc3NhZ2U7XG59XG5cbi8vIHNyYy9pbnZhcmlhbnQudHNcbnZhciBTVEFDS19GUkFNRVNfVE9fSUdOT1JFID0gMjtcbmZ1bmN0aW9uIGNsZWFuRXJyb3JTdGFjayhlcnJvcikge1xuICBpZiAoIWVycm9yLnN0YWNrKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IG5leHRTdGFjayA9IGVycm9yLnN0YWNrLnNwbGl0KFwiXFxuXCIpO1xuICBuZXh0U3RhY2suc3BsaWNlKDEsIFNUQUNLX0ZSQU1FU19UT19JR05PUkUpO1xuICBlcnJvci5zdGFjayA9IG5leHRTdGFjay5qb2luKFwiXFxuXCIpO1xufVxudmFyIEludmFyaWFudEVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLm5hbWUgPSBcIkludmFyaWFudCBWaW9sYXRpb25cIjtcbiAgICB0aGlzLm1lc3NhZ2UgPSBmb3JtYXQobWVzc2FnZSwgLi4ucG9zaXRpb25hbHMpO1xuICAgIGNsZWFuRXJyb3JTdGFjayh0aGlzKTtcbiAgfVxufTtcbnZhciBpbnZhcmlhbnQgPSAocHJlZGljYXRlLCBtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykgPT4ge1xuICBpZiAoIXByZWRpY2F0ZSkge1xuICAgIHRocm93IG5ldyBJbnZhcmlhbnRFcnJvcihtZXNzYWdlLCAuLi5wb3NpdGlvbmFscyk7XG4gIH1cbn07XG5pbnZhcmlhbnQuYXMgPSAoRXJyb3JDb25zdHJ1Y3RvciwgcHJlZGljYXRlLCBtZXNzYWdlLCAuLi5wb3NpdGlvbmFscykgPT4ge1xuICBpZiAoIXByZWRpY2F0ZSkge1xuICAgIGNvbnN0IGZvcm1hdE1lc3NhZ2UgPSBwb3NpdGlvbmFscy5sZW5ndGggPT09IDAgPyBtZXNzYWdlIDogZm9ybWF0KG1lc3NhZ2UsIC4uLnBvc2l0aW9uYWxzKTtcbiAgICBsZXQgZXJyb3I7XG4gICAgdHJ5IHtcbiAgICAgIGVycm9yID0gUmVmbGVjdC5jb25zdHJ1Y3QoRXJyb3JDb25zdHJ1Y3RvciwgW1xuICAgICAgICBmb3JtYXRNZXNzYWdlXG4gICAgICBdKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGVycm9yID0gRXJyb3JDb25zdHJ1Y3Rvcihmb3JtYXRNZXNzYWdlKTtcbiAgICB9XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5leHBvcnQge1xuICBJbnZhcmlhbnRFcnJvcixcbiAgZm9ybWF0LFxuICBpbnZhcmlhbnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/outvariant/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/strict-event-emitter/lib/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/strict-event-emitter/lib/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: function() { return /* binding */ Emitter; },\n/* harmony export */   MemoryLeakError: function() { return /* binding */ MemoryLeakError; }\n/* harmony export */ });\n// src/MemoryLeakError.ts\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\n\n// src/Emitter.ts\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/strict-event-emitter/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tough-cookie/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/tough-cookie/dist/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cookie: function() { return /* binding */ Cookie; },\n/* harmony export */   CookieJar: function() { return /* binding */ CookieJar; },\n/* harmony export */   MemoryCookieStore: function() { return /* binding */ MemoryCookieStore; },\n/* harmony export */   ParameterError: function() { return /* binding */ ParameterError; },\n/* harmony export */   PrefixSecurityEnum: function() { return /* binding */ PrefixSecurityEnum; },\n/* harmony export */   Store: function() { return /* binding */ Store; },\n/* harmony export */   canonicalDomain: function() { return /* binding */ canonicalDomain; },\n/* harmony export */   cookieCompare: function() { return /* binding */ cookieCompare; },\n/* harmony export */   defaultPath: function() { return /* binding */ defaultPath; },\n/* harmony export */   domainMatch: function() { return /* binding */ domainMatch; },\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   fromJSON: function() { return /* binding */ fromJSON2; },\n/* harmony export */   getPublicSuffix: function() { return /* binding */ getPublicSuffix; },\n/* harmony export */   parse: function() { return /* binding */ parse2; },\n/* harmony export */   parseDate: function() { return /* binding */ parseDate; },\n/* harmony export */   pathMatch: function() { return /* binding */ pathMatch; },\n/* harmony export */   permuteDomain: function() { return /* binding */ permuteDomain; },\n/* harmony export */   permutePath: function() { return /* binding */ permutePath; },\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n/* harmony import */ var tldts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tldts */ \"(app-pages-browser)/./node_modules/tldts/dist/es6/index.js\");\n// lib/pathMatch.ts\nfunction pathMatch(reqPath, cookiePath) {\n  if (cookiePath === reqPath) {\n    return true;\n  }\n  const idx = reqPath.indexOf(cookiePath);\n  if (idx === 0) {\n    if (cookiePath[cookiePath.length - 1] === \"/\") {\n      return true;\n    }\n    if (reqPath.startsWith(cookiePath) && reqPath[cookiePath.length] === \"/\") {\n      return true;\n    }\n  }\n  return false;\n}\n\n// lib/getPublicSuffix.ts\n\nvar SPECIAL_USE_DOMAINS = [\"local\", \"example\", \"invalid\", \"localhost\", \"test\"];\nvar SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\nvar defaultGetPublicSuffixOptions = {\n  allowSpecialUseDomain: false,\n  ignoreError: false\n};\nfunction getPublicSuffix(domain, options = {}) {\n  options = { ...defaultGetPublicSuffixOptions, ...options };\n  const domainParts = domain.split(\".\");\n  const topLevelDomain = domainParts[domainParts.length - 1];\n  const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n  const ignoreError = !!options.ignoreError;\n  if (allowSpecialUseDomain && topLevelDomain !== void 0 && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    if (domainParts.length > 1) {\n      const secondLevelDomain = domainParts[domainParts.length - 2];\n      return `${secondLevelDomain}.${topLevelDomain}`;\n    } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\n      return topLevelDomain;\n    }\n  }\n  if (!ignoreError && topLevelDomain !== void 0 && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    throw new Error(\n      `Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain: true, rejectPublicSuffixes: false}.`\n    );\n  }\n  const publicSuffix = (0,tldts__WEBPACK_IMPORTED_MODULE_0__.getDomain)(domain, {\n    allowIcannDomains: true,\n    allowPrivateDomains: true\n  });\n  if (publicSuffix) return publicSuffix;\n}\n\n// lib/permuteDomain.ts\nfunction permuteDomain(domain, allowSpecialUseDomain) {\n  const pubSuf = getPublicSuffix(domain, {\n    allowSpecialUseDomain\n  });\n  if (!pubSuf) {\n    return void 0;\n  }\n  if (pubSuf == domain) {\n    return [domain];\n  }\n  if (domain.slice(-1) == \".\") {\n    domain = domain.slice(0, -1);\n  }\n  const prefix = domain.slice(0, -(pubSuf.length + 1));\n  const parts = prefix.split(\".\").reverse();\n  let cur = pubSuf;\n  const permutations = [cur];\n  while (parts.length) {\n    const part = parts.shift();\n    cur = `${part}.${cur}`;\n    permutations.push(cur);\n  }\n  return permutations;\n}\n\n// lib/store.ts\nvar Store = class {\n  constructor() {\n    this.synchronous = false;\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  findCookie(_domain, _path, _key, _callback) {\n    throw new Error(\"findCookie is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  findCookies(_domain, _path, _allowSpecialUseDomain = false, _callback) {\n    throw new Error(\"findCookies is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  putCookie(_cookie, _callback) {\n    throw new Error(\"putCookie is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  updateCookie(_oldCookie, _newCookie, _callback) {\n    throw new Error(\"updateCookie is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeCookie(_domain, _path, _key, _callback) {\n    throw new Error(\"removeCookie is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeCookies(_domain, _path, _callback) {\n    throw new Error(\"removeCookies is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeAllCookies(_callback) {\n    throw new Error(\"removeAllCookies is not implemented\");\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  getAllCookies(_callback) {\n    throw new Error(\n      \"getAllCookies is not implemented (therefore jar cannot be serialized)\"\n    );\n  }\n};\n\n// lib/utils.ts\nvar objectToString = (obj) => Object.prototype.toString.call(obj);\nvar safeArrayToString = (arr, seenArrays) => {\n  if (typeof arr.join !== \"function\") return objectToString(arr);\n  seenArrays.add(arr);\n  const mapped = arr.map(\n    (val) => val === null || val === void 0 || seenArrays.has(val) ? \"\" : safeToStringImpl(val, seenArrays)\n  );\n  return mapped.join();\n};\nvar safeToStringImpl = (val, seenArrays = /* @__PURE__ */ new WeakSet()) => {\n  if (typeof val !== \"object\" || val === null) {\n    return String(val);\n  } else if (typeof val.toString === \"function\") {\n    return Array.isArray(val) ? (\n      // Arrays have a weird custom toString that we need to replicate\n      safeArrayToString(val, seenArrays)\n    ) : (\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      String(val)\n    );\n  } else {\n    return objectToString(val);\n  }\n};\nvar safeToString = (val) => safeToStringImpl(val);\nfunction createPromiseCallback(cb) {\n  let callback;\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  if (typeof cb === \"function\") {\n    callback = (err, result) => {\n      try {\n        if (err) cb(err);\n        else cb(null, result);\n      } catch (e) {\n        reject(e instanceof Error ? e : new Error());\n      }\n    };\n  } else {\n    callback = (err, result) => {\n      try {\n        if (err) reject(err);\n        else resolve(result);\n      } catch (e) {\n        reject(e instanceof Error ? e : new Error());\n      }\n    };\n  }\n  return {\n    promise,\n    callback,\n    resolve: (value) => {\n      callback(null, value);\n      return promise;\n    },\n    reject: (error) => {\n      callback(error);\n      return promise;\n    }\n  };\n}\nfunction inOperator(k, o) {\n  return k in o;\n}\n\n// lib/memstore.ts\nvar MemoryCookieStore = class extends Store {\n  /**\n   * Create a new {@link MemoryCookieStore}.\n   */\n  constructor() {\n    super();\n    this.synchronous = true;\n    this.idx = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  findCookie(domain, path, key, callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    if (domain == null || path == null || key == null) {\n      return promiseCallback.resolve(void 0);\n    }\n    const result = this.idx[domain]?.[path]?.[key];\n    return promiseCallback.resolve(result);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  findCookies(domain, path, allowSpecialUseDomain = false, callback) {\n    if (typeof allowSpecialUseDomain === \"function\") {\n      callback = allowSpecialUseDomain;\n      allowSpecialUseDomain = true;\n    }\n    const results = [];\n    const promiseCallback = createPromiseCallback(callback);\n    if (!domain) {\n      return promiseCallback.resolve([]);\n    }\n    let pathMatcher;\n    if (!path) {\n      pathMatcher = function matchAll(domainIndex) {\n        for (const curPath in domainIndex) {\n          const pathIndex = domainIndex[curPath];\n          for (const key in pathIndex) {\n            const value = pathIndex[key];\n            if (value) {\n              results.push(value);\n            }\n          }\n        }\n      };\n    } else {\n      pathMatcher = function matchRFC(domainIndex) {\n        for (const cookiePath in domainIndex) {\n          if (pathMatch(path, cookiePath)) {\n            const pathIndex = domainIndex[cookiePath];\n            for (const key in pathIndex) {\n              const value = pathIndex[key];\n              if (value) {\n                results.push(value);\n              }\n            }\n          }\n        }\n      };\n    }\n    const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n    const idx = this.idx;\n    domains.forEach((curDomain) => {\n      const domainIndex = idx[curDomain];\n      if (!domainIndex) {\n        return;\n      }\n      pathMatcher(domainIndex);\n    });\n    return promiseCallback.resolve(results);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  putCookie(cookie, callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    const { domain, path, key } = cookie;\n    if (domain == null || path == null || key == null) {\n      return promiseCallback.resolve(void 0);\n    }\n    const domainEntry = this.idx[domain] ?? /* @__PURE__ */ Object.create(null);\n    this.idx[domain] = domainEntry;\n    const pathEntry = domainEntry[path] ?? /* @__PURE__ */ Object.create(null);\n    domainEntry[path] = pathEntry;\n    pathEntry[key] = cookie;\n    return promiseCallback.resolve(void 0);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  updateCookie(_oldCookie, newCookie, callback) {\n    if (callback) this.putCookie(newCookie, callback);\n    else return this.putCookie(newCookie);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeCookie(domain, path, key, callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    delete this.idx[domain]?.[path]?.[key];\n    return promiseCallback.resolve(void 0);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeCookies(domain, path, callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    const domainEntry = this.idx[domain];\n    if (domainEntry) {\n      if (path) {\n        delete domainEntry[path];\n      } else {\n        delete this.idx[domain];\n      }\n    }\n    return promiseCallback.resolve(void 0);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  removeAllCookies(callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    this.idx = /* @__PURE__ */ Object.create(null);\n    return promiseCallback.resolve(void 0);\n  }\n  /**\n   * @internal No doc because this is an overload that supports the implementation\n   */\n  getAllCookies(callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    const cookies = [];\n    const idx = this.idx;\n    const domains = Object.keys(idx);\n    domains.forEach((domain) => {\n      const domainEntry = idx[domain] ?? {};\n      const paths = Object.keys(domainEntry);\n      paths.forEach((path) => {\n        const pathEntry = domainEntry[path] ?? {};\n        const keys = Object.keys(pathEntry);\n        keys.forEach((key) => {\n          const keyEntry = pathEntry[key];\n          if (keyEntry != null) {\n            cookies.push(keyEntry);\n          }\n        });\n      });\n    });\n    cookies.sort((a, b) => {\n      return (a.creationIndex || 0) - (b.creationIndex || 0);\n    });\n    return promiseCallback.resolve(cookies);\n  }\n};\n\n// lib/validators.ts\nfunction isNonEmptyString(data) {\n  return isString(data) && data !== \"\";\n}\nfunction isEmptyString(data) {\n  return data === \"\" || data instanceof String && data.toString() === \"\";\n}\nfunction isString(data) {\n  return typeof data === \"string\" || data instanceof String;\n}\nfunction isObject(data) {\n  return objectToString(data) === \"[object Object]\";\n}\nfunction validate(bool, cbOrMessage, message) {\n  if (bool) return;\n  const cb = typeof cbOrMessage === \"function\" ? cbOrMessage : void 0;\n  let options = typeof cbOrMessage === \"function\" ? message : cbOrMessage;\n  if (!isObject(options)) options = \"[object Object]\";\n  const err = new ParameterError(safeToString(options));\n  if (cb) cb(err);\n  else throw err;\n}\nvar ParameterError = class extends Error {\n};\n\n// lib/version.ts\nvar version = \"6.0.0\";\n\n// lib/cookie/constants.ts\nvar PrefixSecurityEnum = {\n  SILENT: \"silent\",\n  STRICT: \"strict\",\n  DISABLED: \"unsafe-disabled\"\n};\nObject.freeze(PrefixSecurityEnum);\nvar IP_V6_REGEX = `\n\\\\[?(?:\n(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|\n(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:))\n)(?:%[0-9a-zA-Z]{1,})?\\\\]?\n`.replace(/\\s*\\/\\/.*$/gm, \"\").replace(/\\n/g, \"\").trim();\nvar IP_V6_REGEX_OBJECT = new RegExp(`^${IP_V6_REGEX}$`);\nvar IP_V4_REGEX = `(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])`;\nvar IP_V4_REGEX_OBJECT = new RegExp(`^${IP_V4_REGEX}$`);\n\n// lib/cookie/canonicalDomain.ts\nfunction domainToASCII(domain) {\n  return new URL(`http://${domain}`).hostname;\n}\nfunction canonicalDomain(domainName) {\n  if (domainName == null) {\n    return void 0;\n  }\n  let str = domainName.trim().replace(/^\\./, \"\");\n  if (IP_V6_REGEX_OBJECT.test(str)) {\n    if (!str.startsWith(\"[\")) {\n      str = \"[\" + str;\n    }\n    if (!str.endsWith(\"]\")) {\n      str = str + \"]\";\n    }\n    return domainToASCII(str).slice(1, -1);\n  }\n  if (/[^\\u0001-\\u007f]/.test(str)) {\n    return domainToASCII(str);\n  }\n  return str.toLowerCase();\n}\n\n// lib/cookie/formatDate.ts\nfunction formatDate(date) {\n  return date.toUTCString();\n}\n\n// lib/cookie/parseDate.ts\nvar DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\nvar MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  let count = 0;\n  while (count < token.length) {\n    const c = token.charCodeAt(count);\n    if (c <= 47 || c >= 58) {\n      break;\n    }\n    count++;\n  }\n  if (count < minDigits || count > maxDigits) {\n    return;\n  }\n  if (!trailingOK && count != token.length) {\n    return;\n  }\n  return parseInt(token.slice(0, count), 10);\n}\nfunction parseTime(token) {\n  const parts = token.split(\":\");\n  const result = [0, 0, 0];\n  if (parts.length !== 3) {\n    return;\n  }\n  for (let i = 0; i < 3; i++) {\n    const trailingOK = i == 2;\n    const numPart = parts[i];\n    if (numPart === void 0) {\n      return;\n    }\n    const num = parseDigits(numPart, 1, 2, trailingOK);\n    if (num === void 0) {\n      return;\n    }\n    result[i] = num;\n  }\n  return result;\n}\nfunction parseMonth(token) {\n  token = String(token).slice(0, 3).toLowerCase();\n  switch (token) {\n    case \"jan\":\n      return MONTH_TO_NUM.jan;\n    case \"feb\":\n      return MONTH_TO_NUM.feb;\n    case \"mar\":\n      return MONTH_TO_NUM.mar;\n    case \"apr\":\n      return MONTH_TO_NUM.apr;\n    case \"may\":\n      return MONTH_TO_NUM.may;\n    case \"jun\":\n      return MONTH_TO_NUM.jun;\n    case \"jul\":\n      return MONTH_TO_NUM.jul;\n    case \"aug\":\n      return MONTH_TO_NUM.aug;\n    case \"sep\":\n      return MONTH_TO_NUM.sep;\n    case \"oct\":\n      return MONTH_TO_NUM.oct;\n    case \"nov\":\n      return MONTH_TO_NUM.nov;\n    case \"dec\":\n      return MONTH_TO_NUM.dec;\n    default:\n      return;\n  }\n}\nfunction parseDate(cookieDate) {\n  if (!cookieDate) {\n    return;\n  }\n  const tokens = cookieDate.split(DATE_DELIM);\n  let hour;\n  let minute;\n  let second;\n  let dayOfMonth;\n  let month;\n  let year;\n  for (let i = 0; i < tokens.length; i++) {\n    const token = (tokens[i] ?? \"\").trim();\n    if (!token.length) {\n      continue;\n    }\n    if (second === void 0) {\n      const result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n    if (dayOfMonth === void 0) {\n      const result = parseDigits(token, 1, 2, true);\n      if (result !== void 0) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n    if (month === void 0) {\n      const result = parseMonth(token);\n      if (result !== void 0) {\n        month = result;\n        continue;\n      }\n    }\n    if (year === void 0) {\n      const result = parseDigits(token, 2, 4, true);\n      if (result !== void 0) {\n        year = result;\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2e3;\n        }\n      }\n    }\n  }\n  if (dayOfMonth === void 0 || month === void 0 || year === void 0 || hour === void 0 || minute === void 0 || second === void 0 || dayOfMonth < 1 || dayOfMonth > 31 || year < 1601 || hour > 23 || minute > 59 || second > 59) {\n    return;\n  }\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\n// lib/cookie/cookie.ts\nvar COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\nvar PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\nvar CONTROL_CHARS = /[\\x00-\\x1F]/;\nvar TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\nfunction trimTerminator(str) {\n  if (isEmptyString(str)) return str;\n  for (let t = 0; t < TERMINATORS.length; t++) {\n    const terminator = TERMINATORS[t];\n    const terminatorIdx = terminator ? str.indexOf(terminator) : -1;\n    if (terminatorIdx !== -1) {\n      str = str.slice(0, terminatorIdx);\n    }\n  }\n  return str;\n}\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n  let firstEq = cookiePair.indexOf(\"=\");\n  if (looseMode) {\n    if (firstEq === 0) {\n      cookiePair = cookiePair.substring(1);\n      firstEq = cookiePair.indexOf(\"=\");\n    }\n  } else {\n    if (firstEq <= 0) {\n      return void 0;\n    }\n  }\n  let cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.slice(0, firstEq).trim();\n    cookieValue = cookiePair.slice(firstEq + 1).trim();\n  }\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return void 0;\n  }\n  const c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\nfunction parse(str, options) {\n  if (isEmptyString(str) || !isString(str)) {\n    return void 0;\n  }\n  str = str.trim();\n  const firstSemi = str.indexOf(\";\");\n  const cookiePair = firstSemi === -1 ? str : str.slice(0, firstSemi);\n  const c = parseCookiePair(cookiePair, options?.loose ?? false);\n  if (!c) {\n    return void 0;\n  }\n  if (firstSemi === -1) {\n    return c;\n  }\n  const unparsed = str.slice(firstSemi + 1).trim();\n  if (unparsed.length === 0) {\n    return c;\n  }\n  const cookie_avs = unparsed.split(\";\");\n  while (cookie_avs.length) {\n    const av = (cookie_avs.shift() ?? \"\").trim();\n    if (av.length === 0) {\n      continue;\n    }\n    const av_sep = av.indexOf(\"=\");\n    let av_key, av_value;\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.slice(0, av_sep);\n      av_value = av.slice(av_sep + 1);\n    }\n    av_key = av_key.trim().toLowerCase();\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n    switch (av_key) {\n      case \"expires\":\n        if (av_value) {\n          const exp = parseDate(av_value);\n          if (exp) {\n            c.expires = exp;\n          }\n        }\n        break;\n      case \"max-age\":\n        if (av_value) {\n          if (/^-?[0-9]+$/.test(av_value)) {\n            const delta = parseInt(av_value, 10);\n            c.setMaxAge(delta);\n          }\n        }\n        break;\n      case \"domain\":\n        if (av_value) {\n          const domain = av_value.trim().replace(/^\\./, \"\");\n          if (domain) {\n            c.domain = domain.toLowerCase();\n          }\n        }\n        break;\n      case \"path\":\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n      case \"secure\":\n        c.secure = true;\n        break;\n      case \"httponly\":\n        c.httpOnly = true;\n        break;\n      case \"samesite\":\n        switch (av_value ? av_value.toLowerCase() : \"\") {\n          case \"strict\":\n            c.sameSite = \"strict\";\n            break;\n          case \"lax\":\n            c.sameSite = \"lax\";\n            break;\n          case \"none\":\n            c.sameSite = \"none\";\n            break;\n          default:\n            c.sameSite = void 0;\n            break;\n        }\n        break;\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n  return c;\n}\nfunction fromJSON(str) {\n  if (!str || isEmptyString(str)) {\n    return void 0;\n  }\n  let obj;\n  if (typeof str === \"string\") {\n    try {\n      obj = JSON.parse(str);\n    } catch {\n      return void 0;\n    }\n  } else {\n    obj = str;\n  }\n  const c = new Cookie();\n  Cookie.serializableProperties.forEach((prop) => {\n    if (obj && typeof obj === \"object\" && inOperator(prop, obj)) {\n      const val = obj[prop];\n      if (val === void 0) {\n        return;\n      }\n      if (inOperator(prop, cookieDefaults) && val === cookieDefaults[prop]) {\n        return;\n      }\n      switch (prop) {\n        case \"key\":\n        case \"value\":\n        case \"sameSite\":\n          if (typeof val === \"string\") {\n            c[prop] = val;\n          }\n          break;\n        case \"expires\":\n        case \"creation\":\n        case \"lastAccessed\":\n          if (typeof val === \"number\" || typeof val === \"string\" || val instanceof Date) {\n            c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(val);\n          } else if (val === null) {\n            c[prop] = null;\n          }\n          break;\n        case \"maxAge\":\n          if (typeof val === \"number\" || val === \"Infinity\" || val === \"-Infinity\") {\n            c[prop] = val;\n          }\n          break;\n        case \"domain\":\n        case \"path\":\n          if (typeof val === \"string\" || val === null) {\n            c[prop] = val;\n          }\n          break;\n        case \"secure\":\n        case \"httpOnly\":\n          if (typeof val === \"boolean\") {\n            c[prop] = val;\n          }\n          break;\n        case \"extensions\":\n          if (Array.isArray(val) && val.every((item) => typeof item === \"string\")) {\n            c[prop] = val;\n          }\n          break;\n        case \"hostOnly\":\n        case \"pathIsDefault\":\n          if (typeof val === \"boolean\" || val === null) {\n            c[prop] = val;\n          }\n          break;\n      }\n    }\n  });\n  return c;\n}\nvar cookieDefaults = {\n  // the order in which the RFC has them:\n  key: \"\",\n  value: \"\",\n  expires: \"Infinity\",\n  maxAge: null,\n  domain: null,\n  path: null,\n  secure: false,\n  httpOnly: false,\n  extensions: null,\n  // set by the CookieJar:\n  hostOnly: null,\n  pathIsDefault: null,\n  creation: null,\n  lastAccessed: null,\n  sameSite: void 0\n};\nvar _Cookie = class _Cookie {\n  /**\n   * Create a new Cookie instance.\n   * @public\n   * @param options - The attributes to set on the cookie\n   */\n  constructor(options = {}) {\n    this.key = options.key ?? cookieDefaults.key;\n    this.value = options.value ?? cookieDefaults.value;\n    this.expires = options.expires ?? cookieDefaults.expires;\n    this.maxAge = options.maxAge ?? cookieDefaults.maxAge;\n    this.domain = options.domain ?? cookieDefaults.domain;\n    this.path = options.path ?? cookieDefaults.path;\n    this.secure = options.secure ?? cookieDefaults.secure;\n    this.httpOnly = options.httpOnly ?? cookieDefaults.httpOnly;\n    this.extensions = options.extensions ?? cookieDefaults.extensions;\n    this.creation = options.creation ?? cookieDefaults.creation;\n    this.hostOnly = options.hostOnly ?? cookieDefaults.hostOnly;\n    this.pathIsDefault = options.pathIsDefault ?? cookieDefaults.pathIsDefault;\n    this.lastAccessed = options.lastAccessed ?? cookieDefaults.lastAccessed;\n    this.sameSite = options.sameSite ?? cookieDefaults.sameSite;\n    this.creation = options.creation ?? /* @__PURE__ */ new Date();\n    Object.defineProperty(this, \"creationIndex\", {\n      configurable: false,\n      enumerable: false,\n      // important for assert.deepEqual checks\n      writable: true,\n      value: ++_Cookie.cookiesCreated\n    });\n    this.creationIndex = _Cookie.cookiesCreated;\n  }\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    const now = Date.now();\n    const hostOnly = this.hostOnly != null ? this.hostOnly.toString() : \"?\";\n    const createAge = this.creation && this.creation !== \"Infinity\" ? `${String(now - this.creation.getTime())}ms` : \"?\";\n    const accessAge = this.lastAccessed && this.lastAccessed !== \"Infinity\" ? `${String(now - this.lastAccessed.getTime())}ms` : \"?\";\n    return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\n  }\n  /**\n   * For convenience in using `JSON.stringify(cookie)`. Returns a plain-old Object that can be JSON-serialized.\n   *\n   * @remarks\n   * - Any `Date` properties (such as {@link Cookie.expires}, {@link Cookie.creation}, and {@link Cookie.lastAccessed}) are exported in ISO format (`Date.toISOString()`).\n   *\n   *  - Custom Cookie properties are discarded. In tough-cookie 1.x, since there was no {@link Cookie.toJSON} method explicitly defined, all enumerable properties were captured.\n   *      If you want a property to be serialized, add the property name to {@link Cookie.serializableProperties}.\n   */\n  toJSON() {\n    const obj = {};\n    for (const prop of _Cookie.serializableProperties) {\n      const val = this[prop];\n      if (val === cookieDefaults[prop]) {\n        continue;\n      }\n      switch (prop) {\n        case \"key\":\n        case \"value\":\n        case \"sameSite\":\n          if (typeof val === \"string\") {\n            obj[prop] = val;\n          }\n          break;\n        case \"expires\":\n        case \"creation\":\n        case \"lastAccessed\":\n          if (typeof val === \"number\" || typeof val === \"string\" || val instanceof Date) {\n            obj[prop] = val == \"Infinity\" ? \"Infinity\" : new Date(val).toISOString();\n          } else if (val === null) {\n            obj[prop] = null;\n          }\n          break;\n        case \"maxAge\":\n          if (typeof val === \"number\" || val === \"Infinity\" || val === \"-Infinity\") {\n            obj[prop] = val;\n          }\n          break;\n        case \"domain\":\n        case \"path\":\n          if (typeof val === \"string\" || val === null) {\n            obj[prop] = val;\n          }\n          break;\n        case \"secure\":\n        case \"httpOnly\":\n          if (typeof val === \"boolean\") {\n            obj[prop] = val;\n          }\n          break;\n        case \"extensions\":\n          if (Array.isArray(val)) {\n            obj[prop] = val;\n          }\n          break;\n        case \"hostOnly\":\n        case \"pathIsDefault\":\n          if (typeof val === \"boolean\" || val === null) {\n            obj[prop] = val;\n          }\n          break;\n      }\n    }\n    return obj;\n  }\n  /**\n   * Does a deep clone of this cookie, implemented exactly as `Cookie.fromJSON(cookie.toJSON())`.\n   * @public\n   */\n  clone() {\n    return fromJSON(this.toJSON());\n  }\n  /**\n   * Validates cookie attributes for semantic correctness. Useful for \"lint\" checking any `Set-Cookie` headers you generate.\n   * For now, it returns a boolean, but eventually could return a reason string.\n   *\n   * @remarks\n   * Works for a few things, but is by no means comprehensive.\n   *\n   * @beta\n   */\n  validate() {\n    if (!this.value || !COOKIE_OCTETS.test(this.value)) {\n      return false;\n    }\n    if (this.expires != \"Infinity\" && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n      return false;\n    }\n    if (this.maxAge != null && this.maxAge !== \"Infinity\" && (this.maxAge === \"-Infinity\" || this.maxAge <= 0)) {\n      return false;\n    }\n    if (this.path != null && !PATH_VALUE.test(this.path)) {\n      return false;\n    }\n    const cdomain = this.cdomain();\n    if (cdomain) {\n      if (cdomain.match(/\\.$/)) {\n        return false;\n      }\n      const suffix = getPublicSuffix(cdomain);\n      if (suffix == null) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Sets the 'Expires' attribute on a cookie.\n   *\n   * @remarks\n   * When given a `string` value it will be parsed with {@link parseDate}. If the value can't be parsed as a cookie date\n   * then the 'Expires' attribute will be set to `\"Infinity\"`.\n   *\n   * @param exp - the new value for the 'Expires' attribute of the cookie.\n   */\n  setExpires(exp) {\n    if (exp instanceof Date) {\n      this.expires = exp;\n    } else {\n      this.expires = parseDate(exp) || \"Infinity\";\n    }\n  }\n  /**\n   * Sets the 'Max-Age' attribute (in seconds) on a cookie.\n   *\n   * @remarks\n   * Coerces `-Infinity` to `\"-Infinity\"` and `Infinity` to `\"Infinity\"` so it can be serialized to JSON.\n   *\n   * @param age - the new value for the 'Max-Age' attribute (in seconds).\n   */\n  setMaxAge(age) {\n    if (age === Infinity) {\n      this.maxAge = \"Infinity\";\n    } else if (age === -Infinity) {\n      this.maxAge = \"-Infinity\";\n    } else {\n      this.maxAge = age;\n    }\n  }\n  /**\n   * Encodes to a `Cookie` header value (specifically, the {@link Cookie.key} and {@link Cookie.value} properties joined with \"=\").\n   * @public\n   */\n  cookieString() {\n    const val = this.value || \"\";\n    if (this.key) {\n      return `${this.key}=${val}`;\n    }\n    return val;\n  }\n  /**\n   * Encodes to a `Set-Cookie header` value.\n   * @public\n   */\n  toString() {\n    let str = this.cookieString();\n    if (this.expires != \"Infinity\") {\n      if (this.expires instanceof Date) {\n        str += `; Expires=${formatDate(this.expires)}`;\n      }\n    }\n    if (this.maxAge != null && this.maxAge != Infinity) {\n      str += `; Max-Age=${String(this.maxAge)}`;\n    }\n    if (this.domain && !this.hostOnly) {\n      str += `; Domain=${this.domain}`;\n    }\n    if (this.path) {\n      str += `; Path=${this.path}`;\n    }\n    if (this.secure) {\n      str += \"; Secure\";\n    }\n    if (this.httpOnly) {\n      str += \"; HttpOnly\";\n    }\n    if (this.sameSite && this.sameSite !== \"none\") {\n      if (this.sameSite.toLowerCase() === _Cookie.sameSiteCanonical.lax.toLowerCase()) {\n        str += `; SameSite=${_Cookie.sameSiteCanonical.lax}`;\n      } else if (this.sameSite.toLowerCase() === _Cookie.sameSiteCanonical.strict.toLowerCase()) {\n        str += `; SameSite=${_Cookie.sameSiteCanonical.strict}`;\n      } else {\n        str += `; SameSite=${this.sameSite}`;\n      }\n    }\n    if (this.extensions) {\n      this.extensions.forEach((ext) => {\n        str += `; ${ext}`;\n      });\n    }\n    return str;\n  }\n  /**\n   * Computes the TTL relative to now (milliseconds).\n   *\n   * @remarks\n   * - `Infinity` is returned for cookies without an explicit expiry\n   *\n   * - `0` is returned if the cookie is expired.\n   *\n   * - Otherwise a time-to-live in milliseconds is returned.\n   *\n   * @param now - passing an explicit value is mostly used for testing purposes since this defaults to the `Date.now()`\n   * @public\n   */\n  TTL(now = Date.now()) {\n    if (this.maxAge != null && typeof this.maxAge === \"number\") {\n      return this.maxAge <= 0 ? 0 : this.maxAge * 1e3;\n    }\n    const expires = this.expires;\n    if (expires === \"Infinity\") {\n      return Infinity;\n    }\n    return (expires?.getTime() ?? now) - (now || Date.now());\n  }\n  /**\n   * Computes the absolute unix-epoch milliseconds that this cookie expires.\n   *\n   * The \"Max-Age\" attribute takes precedence over \"Expires\" (as per the RFC). The {@link Cookie.lastAccessed} attribute\n   * (or the `now` parameter if given) is used to offset the {@link Cookie.maxAge} attribute.\n   *\n   * If Expires ({@link Cookie.expires}) is set, that's returned.\n   *\n   * @param now - can be used to provide a time offset (instead of {@link Cookie.lastAccessed}) to use when calculating the \"Max-Age\" value\n   */\n  expiryTime(now) {\n    if (this.maxAge != null) {\n      const relativeTo = now || this.lastAccessed || /* @__PURE__ */ new Date();\n      const maxAge = typeof this.maxAge === \"number\" ? this.maxAge : -Infinity;\n      const age = maxAge <= 0 ? -Infinity : maxAge * 1e3;\n      if (relativeTo === \"Infinity\") {\n        return Infinity;\n      }\n      return relativeTo.getTime() + age;\n    }\n    if (this.expires == \"Infinity\") {\n      return Infinity;\n    }\n    return this.expires ? this.expires.getTime() : void 0;\n  }\n  /**\n   * Similar to {@link Cookie.expiryTime}, computes the absolute unix-epoch milliseconds that this cookie expires and returns it as a Date.\n   *\n   * The \"Max-Age\" attribute takes precedence over \"Expires\" (as per the RFC). The {@link Cookie.lastAccessed} attribute\n   * (or the `now` parameter if given) is used to offset the {@link Cookie.maxAge} attribute.\n   *\n   * If Expires ({@link Cookie.expires}) is set, that's returned.\n   *\n   * @param now - can be used to provide a time offset (instead of {@link Cookie.lastAccessed}) to use when calculating the \"Max-Age\" value\n   */\n  expiryDate(now) {\n    const millisec = this.expiryTime(now);\n    if (millisec == Infinity) {\n      return /* @__PURE__ */ new Date(2147483647e3);\n    } else if (millisec == -Infinity) {\n      return /* @__PURE__ */ new Date(0);\n    } else {\n      return millisec == void 0 ? void 0 : new Date(millisec);\n    }\n  }\n  /**\n   * Indicates if the cookie has been persisted to a store or not.\n   * @public\n   */\n  isPersistent() {\n    return this.maxAge != null || this.expires != \"Infinity\";\n  }\n  /**\n   * Calls {@link canonicalDomain} with the {@link Cookie.domain} property.\n   * @public\n   */\n  canonicalizedDomain() {\n    return canonicalDomain(this.domain);\n  }\n  /**\n   * Alias for {@link Cookie.canonicalizedDomain}\n   * @public\n   */\n  cdomain() {\n    return canonicalDomain(this.domain);\n  }\n  /**\n   * Parses a string into a Cookie object.\n   *\n   * @remarks\n   * Note: when parsing a `Cookie` header it must be split by ';' before each Cookie string can be parsed.\n   *\n   * @example\n   * ```\n   * // parse a `Set-Cookie` header\n   * const setCookieHeader = 'a=bcd; Expires=Tue, 18 Oct 2011 07:05:03 GMT'\n   * const cookie = Cookie.parse(setCookieHeader)\n   * cookie.key === 'a'\n   * cookie.value === 'bcd'\n   * cookie.expires === new Date(Date.parse('Tue, 18 Oct 2011 07:05:03 GMT'))\n   * ```\n   *\n   * @example\n   * ```\n   * // parse a `Cookie` header\n   * const cookieHeader = 'name=value; name2=value2; name3=value3'\n   * const cookies = cookieHeader.split(';').map(Cookie.parse)\n   * cookies[0].name === 'name'\n   * cookies[0].value === 'value'\n   * cookies[1].name === 'name2'\n   * cookies[1].value === 'value2'\n   * cookies[2].name === 'name3'\n   * cookies[2].value === 'value3'\n   * ```\n   *\n   * @param str - The `Set-Cookie` header or a Cookie string to parse.\n   * @param options - Configures `strict` or `loose` mode for cookie parsing\n   */\n  static parse(str, options) {\n    return parse(str, options);\n  }\n  /**\n   * Does the reverse of {@link Cookie.toJSON}.\n   *\n   * @remarks\n   * Any Date properties (such as .expires, .creation, and .lastAccessed) are parsed via Date.parse, not tough-cookie's parseDate, since ISO timestamps are being handled at this layer.\n   *\n   * @example\n   * ```\n   * const json = JSON.stringify({\n   *   key: 'alpha',\n   *   value: 'beta',\n   *   domain: 'example.com',\n   *   path: '/foo',\n   *   expires: '2038-01-19T03:14:07.000Z',\n   * })\n   * const cookie = Cookie.fromJSON(json)\n   * cookie.key === 'alpha'\n   * cookie.value === 'beta'\n   * cookie.domain === 'example.com'\n   * cookie.path === '/foo'\n   * cookie.expires === new Date(Date.parse('2038-01-19T03:14:07.000Z'))\n   * ```\n   *\n   * @param str - An unparsed JSON string or a value that has already been parsed as JSON\n   */\n  static fromJSON(str) {\n    return fromJSON(str);\n  }\n};\n_Cookie.cookiesCreated = 0;\n/**\n * @internal\n */\n_Cookie.sameSiteLevel = {\n  strict: 3,\n  lax: 2,\n  none: 1\n};\n/**\n * @internal\n */\n_Cookie.sameSiteCanonical = {\n  strict: \"Strict\",\n  lax: \"Lax\"\n};\n/**\n * Cookie properties that will be serialized when using {@link Cookie.fromJSON} and {@link Cookie.toJSON}.\n * @public\n */\n_Cookie.serializableProperties = [\n  \"key\",\n  \"value\",\n  \"expires\",\n  \"maxAge\",\n  \"domain\",\n  \"path\",\n  \"secure\",\n  \"httpOnly\",\n  \"extensions\",\n  \"hostOnly\",\n  \"pathIsDefault\",\n  \"creation\",\n  \"lastAccessed\",\n  \"sameSite\"\n];\nvar Cookie = _Cookie;\n\n// lib/cookie/cookieCompare.ts\nvar MAX_TIME = 2147483647e3;\nfunction cookieCompare(a, b) {\n  let cmp;\n  const aPathLen = a.path ? a.path.length : 0;\n  const bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n  const aTime = a.creation && a.creation instanceof Date ? a.creation.getTime() : MAX_TIME;\n  const bTime = b.creation && b.creation instanceof Date ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n  cmp = (a.creationIndex || 0) - (b.creationIndex || 0);\n  return cmp;\n}\n\n// lib/cookie/defaultPath.ts\nfunction defaultPath(path) {\n  if (!path || path.slice(0, 1) !== \"/\") {\n    return \"/\";\n  }\n  if (path === \"/\") {\n    return path;\n  }\n  const rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n  return path.slice(0, rightSlash);\n}\n\n// lib/cookie/domainMatch.ts\nvar IP_REGEX_LOWERCASE = /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\nfunction domainMatch(domain, cookieDomain, canonicalize) {\n  if (domain == null || cookieDomain == null) {\n    return void 0;\n  }\n  let _str;\n  let _domStr;\n  if (canonicalize !== false) {\n    _str = canonicalDomain(domain);\n    _domStr = canonicalDomain(cookieDomain);\n  } else {\n    _str = domain;\n    _domStr = cookieDomain;\n  }\n  if (_str == null || _domStr == null) {\n    return void 0;\n  }\n  if (_str == _domStr) {\n    return true;\n  }\n  const idx = _str.lastIndexOf(_domStr);\n  if (idx <= 0) {\n    return false;\n  }\n  if (_str.length !== _domStr.length + idx) {\n    return false;\n  }\n  if (_str.substring(idx - 1, idx) !== \".\") {\n    return false;\n  }\n  return !IP_REGEX_LOWERCASE.test(_str);\n}\n\n// lib/cookie/secureContext.ts\nfunction isLoopbackV4(address) {\n  const octets = address.split(\".\");\n  return octets.length === 4 && octets[0] !== void 0 && parseInt(octets[0], 10) === 127;\n}\nfunction isLoopbackV6(address) {\n  return address === \"::1\";\n}\nfunction isNormalizedLocalhostTLD(lowerHost) {\n  return lowerHost.endsWith(\".localhost\");\n}\nfunction isLocalHostname(host) {\n  const lowerHost = host.toLowerCase();\n  return lowerHost === \"localhost\" || isNormalizedLocalhostTLD(lowerHost);\n}\nfunction hostNoBrackets(host) {\n  if (host.length >= 2 && host.startsWith(\"[\") && host.endsWith(\"]\")) {\n    return host.substring(1, host.length - 1);\n  }\n  return host;\n}\nfunction isPotentiallyTrustworthy(inputUrl, allowSecureOnLocal = true) {\n  let url;\n  if (typeof inputUrl === \"string\") {\n    try {\n      url = new URL(inputUrl);\n    } catch {\n      return false;\n    }\n  } else {\n    url = inputUrl;\n  }\n  const scheme = url.protocol.replace(\":\", \"\").toLowerCase();\n  const hostname = hostNoBrackets(url.hostname).replace(/\\.+$/, \"\");\n  if (scheme === \"https\" || scheme === \"wss\") {\n    return true;\n  }\n  if (!allowSecureOnLocal) {\n    return false;\n  }\n  if (IP_V4_REGEX_OBJECT.test(hostname)) {\n    return isLoopbackV4(hostname);\n  }\n  if (IP_V6_REGEX_OBJECT.test(hostname)) {\n    return isLoopbackV6(hostname);\n  }\n  return isLocalHostname(hostname);\n}\n\n// lib/cookie/cookieJar.ts\nvar defaultSetCookieOptions = {\n  loose: false,\n  sameSiteContext: void 0,\n  ignoreError: false,\n  http: true\n};\nvar defaultGetCookieOptions = {\n  http: true,\n  expire: true,\n  allPaths: false,\n  sameSiteContext: void 0,\n  sort: void 0\n};\nvar SAME_SITE_CONTEXT_VAL_ERR = 'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\nfunction getCookieContext(url) {\n  if (url && typeof url === \"object\" && \"hostname\" in url && typeof url.hostname === \"string\" && \"pathname\" in url && typeof url.pathname === \"string\" && \"protocol\" in url && typeof url.protocol === \"string\") {\n    return {\n      hostname: url.hostname,\n      pathname: url.pathname,\n      protocol: url.protocol\n    };\n  } else if (typeof url === \"string\") {\n    try {\n      return new URL(decodeURI(url));\n    } catch {\n      return new URL(url);\n    }\n  } else {\n    throw new ParameterError(\"`url` argument is not a string or URL.\");\n  }\n}\nfunction checkSameSiteContext(value) {\n  const context = String(value).toLowerCase();\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n    return context;\n  } else {\n    return void 0;\n  }\n}\nfunction isSecurePrefixConditionMet(cookie) {\n  const startsWithSecurePrefix = typeof cookie.key === \"string\" && cookie.key.startsWith(\"__Secure-\");\n  return !startsWithSecurePrefix || cookie.secure;\n}\nfunction isHostPrefixConditionMet(cookie) {\n  const startsWithHostPrefix = typeof cookie.key === \"string\" && cookie.key.startsWith(\"__Host-\");\n  return !startsWithHostPrefix || Boolean(\n    cookie.secure && cookie.hostOnly && cookie.path != null && cookie.path === \"/\"\n  );\n}\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\n  const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n  switch (normalizedPrefixSecurity) {\n    case PrefixSecurityEnum.STRICT:\n    case PrefixSecurityEnum.SILENT:\n    case PrefixSecurityEnum.DISABLED:\n      return normalizedPrefixSecurity;\n    default:\n      return PrefixSecurityEnum.SILENT;\n  }\n}\nvar CookieJar = class _CookieJar {\n  /**\n   * Creates a new `CookieJar` instance.\n   *\n   * @remarks\n   * - If a custom store is not passed to the constructor, an in-memory store ({@link MemoryCookieStore} will be created and used.\n   * - If a boolean value is passed as the `options` parameter, this is equivalent to passing `{ rejectPublicSuffixes: <value> }`\n   *\n   * @param store - a custom {@link Store} implementation (defaults to {@link MemoryCookieStore})\n   * @param options - configures how cookies are processed by the cookie jar\n   */\n  constructor(store, options) {\n    if (typeof options === \"boolean\") {\n      options = { rejectPublicSuffixes: options };\n    }\n    this.rejectPublicSuffixes = options?.rejectPublicSuffixes ?? true;\n    this.enableLooseMode = options?.looseMode ?? false;\n    this.allowSpecialUseDomain = options?.allowSpecialUseDomain ?? true;\n    this.allowSecureOnLocal = options?.allowSecureOnLocal ?? true;\n    this.prefixSecurity = getNormalizedPrefixSecurity(\n      options?.prefixSecurity ?? \"silent\"\n    );\n    this.store = store ?? new MemoryCookieStore();\n  }\n  callSync(fn) {\n    if (!this.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n    let syncErr = null;\n    let syncResult = void 0;\n    try {\n      fn.call(this, (error, result) => {\n        syncErr = error;\n        syncResult = result;\n      });\n    } catch (err) {\n      syncErr = err;\n    }\n    if (syncErr) throw syncErr;\n    return syncResult;\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  setCookie(cookie, url, options, callback) {\n    if (typeof options === \"function\") {\n      callback = options;\n      options = void 0;\n    }\n    const promiseCallback = createPromiseCallback(callback);\n    const cb = promiseCallback.callback;\n    let context;\n    try {\n      if (typeof url === \"string\") {\n        validate(\n          isNonEmptyString(url),\n          callback,\n          safeToString(options)\n        );\n      }\n      context = getCookieContext(url);\n      if (typeof url === \"function\") {\n        return promiseCallback.reject(new Error(\"No URL was specified\"));\n      }\n      if (typeof options === \"function\") {\n        options = defaultSetCookieOptions;\n      }\n      validate(typeof cb === \"function\", cb);\n      if (!isNonEmptyString(cookie) && !isObject(cookie) && cookie instanceof String && cookie.length == 0) {\n        return promiseCallback.resolve(void 0);\n      }\n    } catch (err) {\n      return promiseCallback.reject(err);\n    }\n    const host = canonicalDomain(context.hostname) ?? null;\n    const loose = options?.loose || this.enableLooseMode;\n    let sameSiteContext = null;\n    if (options?.sameSiteContext) {\n      sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      if (!sameSiteContext) {\n        return promiseCallback.reject(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n    if (typeof cookie === \"string\" || cookie instanceof String) {\n      const parsedCookie = Cookie.parse(cookie.toString(), { loose });\n      if (!parsedCookie) {\n        const err = new Error(\"Cookie failed to parse\");\n        return options?.ignoreError ? promiseCallback.resolve(void 0) : promiseCallback.reject(err);\n      }\n      cookie = parsedCookie;\n    } else if (!(cookie instanceof Cookie)) {\n      const err = new Error(\n        \"First argument to setCookie must be a Cookie object or string\"\n      );\n      return options?.ignoreError ? promiseCallback.resolve(void 0) : promiseCallback.reject(err);\n    }\n    const now = options?.now || /* @__PURE__ */ new Date();\n    if (this.rejectPublicSuffixes && cookie.domain) {\n      try {\n        const cdomain = cookie.cdomain();\n        const suffix = typeof cdomain === \"string\" ? getPublicSuffix(cdomain, {\n          allowSpecialUseDomain: this.allowSpecialUseDomain,\n          ignoreError: options?.ignoreError\n        }) : null;\n        if (suffix == null && !IP_V6_REGEX_OBJECT.test(cookie.domain)) {\n          const err = new Error(\"Cookie has domain set to a public suffix\");\n          return options?.ignoreError ? promiseCallback.resolve(void 0) : promiseCallback.reject(err);\n        }\n      } catch (err) {\n        return options?.ignoreError ? promiseCallback.resolve(void 0) : (\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          promiseCallback.reject(err)\n        );\n      }\n    }\n    if (cookie.domain) {\n      if (!domainMatch(host ?? void 0, cookie.cdomain() ?? void 0, false)) {\n        const err = new Error(\n          `Cookie not in this host's domain. Cookie:${cookie.cdomain() ?? \"null\"} Request:${host ?? \"null\"}`\n        );\n        return options?.ignoreError ? promiseCallback.resolve(void 0) : promiseCallback.reject(err);\n      }\n      if (cookie.hostOnly == null) {\n        cookie.hostOnly = false;\n      }\n    } else {\n      cookie.hostOnly = true;\n      cookie.domain = host;\n    }\n    if (!cookie.path || cookie.path[0] !== \"/\") {\n      cookie.path = defaultPath(context.pathname);\n      cookie.pathIsDefault = true;\n    }\n    if (options?.http === false && cookie.httpOnly) {\n      const err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n      return options.ignoreError ? promiseCallback.resolve(void 0) : promiseCallback.reject(err);\n    }\n    if (cookie.sameSite !== \"none\" && cookie.sameSite !== void 0 && sameSiteContext) {\n      if (sameSiteContext === \"none\") {\n        const err = new Error(\n          \"Cookie is SameSite but this is a cross-origin request\"\n        );\n        return options?.ignoreError ? promiseCallback.resolve(void 0) : promiseCallback.reject(err);\n      }\n    }\n    const ignoreErrorForPrefixSecurity = this.prefixSecurity === PrefixSecurityEnum.SILENT;\n    const prefixSecurityDisabled = this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n    if (!prefixSecurityDisabled) {\n      let errorFound = false;\n      let errorMsg;\n      if (!isSecurePrefixConditionMet(cookie)) {\n        errorFound = true;\n        errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n      } else if (!isHostPrefixConditionMet(cookie)) {\n        errorFound = true;\n        errorMsg = \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n      }\n      if (errorFound) {\n        return options?.ignoreError || ignoreErrorForPrefixSecurity ? promiseCallback.resolve(void 0) : promiseCallback.reject(new Error(errorMsg));\n      }\n    }\n    const store = this.store;\n    if (!store.updateCookie) {\n      store.updateCookie = async function(_oldCookie, newCookie, cb2) {\n        return this.putCookie(newCookie).then(\n          () => cb2?.(null),\n          (error) => cb2?.(error)\n        );\n      };\n    }\n    const withCookie = function withCookie2(err, oldCookie) {\n      if (err) {\n        cb(err);\n        return;\n      }\n      const next = function(err2) {\n        if (err2) {\n          cb(err2);\n        } else if (typeof cookie === \"string\") {\n          cb(null, void 0);\n        } else {\n          cb(null, cookie);\n        }\n      };\n      if (oldCookie) {\n        if (options && \"http\" in options && options.http === false && oldCookie.httpOnly) {\n          err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n          if (options.ignoreError) cb(null, void 0);\n          else cb(err);\n          return;\n        }\n        if (cookie instanceof Cookie) {\n          cookie.creation = oldCookie.creation;\n          cookie.creationIndex = oldCookie.creationIndex;\n          cookie.lastAccessed = now;\n          store.updateCookie(oldCookie, cookie, next);\n        }\n      } else {\n        if (cookie instanceof Cookie) {\n          cookie.creation = cookie.lastAccessed = now;\n          store.putCookie(cookie, next);\n        }\n      }\n    };\n    store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n    return promiseCallback.promise;\n  }\n  /**\n   * Synchronously attempt to set the {@link Cookie} in the {@link CookieJar}.\n   *\n   * <strong>Note:</strong> Only works if the configured {@link Store} is also synchronous.\n   *\n   * @remarks\n   * - If successfully persisted, the {@link Cookie} will have updated\n   *     {@link Cookie.creation}, {@link Cookie.lastAccessed} and {@link Cookie.hostOnly}\n   *     properties.\n   *\n   * - As per the RFC, the {@link Cookie.hostOnly} flag is set if there was no `Domain={value}`\n   *     attribute on the cookie string. The {@link Cookie.domain} property is set to the\n   *     fully-qualified hostname of `currentUrl` in this case. Matching this cookie requires an\n   *     exact hostname match (not a {@link domainMatch} as per usual)\n   *\n   * @param cookie - The cookie object or cookie string to store. A string value will be parsed into a cookie using {@link Cookie.parse}.\n   * @param url - The domain to store the cookie with.\n   * @param options - Configuration settings to use when storing the cookie.\n   * @public\n   */\n  setCookieSync(cookie, url, options) {\n    const setCookieFn = options ? this.setCookie.bind(this, cookie, url, options) : this.setCookie.bind(this, cookie, url);\n    return this.callSync(setCookieFn);\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  getCookies(url, options, callback) {\n    if (typeof options === \"function\") {\n      callback = options;\n      options = defaultGetCookieOptions;\n    } else if (options === void 0) {\n      options = defaultGetCookieOptions;\n    }\n    const promiseCallback = createPromiseCallback(callback);\n    const cb = promiseCallback.callback;\n    let context;\n    try {\n      if (typeof url === \"string\") {\n        validate(isNonEmptyString(url), cb, url);\n      }\n      context = getCookieContext(url);\n      validate(\n        isObject(options),\n        cb,\n        safeToString(options)\n      );\n      validate(typeof cb === \"function\", cb);\n    } catch (parameterError) {\n      return promiseCallback.reject(parameterError);\n    }\n    const host = canonicalDomain(context.hostname);\n    const path = context.pathname || \"/\";\n    const potentiallyTrustworthy = isPotentiallyTrustworthy(\n      url,\n      this.allowSecureOnLocal\n    );\n    let sameSiteLevel = 0;\n    if (options.sameSiteContext) {\n      const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      if (sameSiteContext == null) {\n        return promiseCallback.reject(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n      sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n      if (!sameSiteLevel) {\n        return promiseCallback.reject(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n    const http = options.http ?? true;\n    const now = Date.now();\n    const expireCheck = options.expire ?? true;\n    const allPaths = options.allPaths ?? false;\n    const store = this.store;\n    function matchingCookie(c) {\n      if (c.hostOnly) {\n        if (c.domain != host) {\n          return false;\n        }\n      } else {\n        if (!domainMatch(host ?? void 0, c.domain ?? void 0, false)) {\n          return false;\n        }\n      }\n      if (!allPaths && typeof c.path === \"string\" && !pathMatch(path, c.path)) {\n        return false;\n      }\n      if (c.secure && !potentiallyTrustworthy) {\n        return false;\n      }\n      if (c.httpOnly && !http) {\n        return false;\n      }\n      if (sameSiteLevel) {\n        let cookieLevel;\n        if (c.sameSite === \"lax\") {\n          cookieLevel = Cookie.sameSiteLevel.lax;\n        } else if (c.sameSite === \"strict\") {\n          cookieLevel = Cookie.sameSiteLevel.strict;\n        } else {\n          cookieLevel = Cookie.sameSiteLevel.none;\n        }\n        if (cookieLevel > sameSiteLevel) {\n          return false;\n        }\n      }\n      const expiryTime = c.expiryTime();\n      if (expireCheck && expiryTime != void 0 && expiryTime <= now) {\n        store.removeCookie(c.domain, c.path, c.key, () => {\n        });\n        return false;\n      }\n      return true;\n    }\n    store.findCookies(\n      host,\n      allPaths ? null : path,\n      this.allowSpecialUseDomain,\n      (err, cookies) => {\n        if (err) {\n          cb(err);\n          return;\n        }\n        if (cookies == null) {\n          cb(null, []);\n          return;\n        }\n        cookies = cookies.filter(matchingCookie);\n        if (\"sort\" in options && options.sort !== false) {\n          cookies = cookies.sort(cookieCompare);\n        }\n        const now2 = /* @__PURE__ */ new Date();\n        for (const cookie of cookies) {\n          cookie.lastAccessed = now2;\n        }\n        cb(null, cookies);\n      }\n    );\n    return promiseCallback.promise;\n  }\n  /**\n   * Synchronously retrieve the list of cookies that can be sent in a Cookie header for the\n   * current URL.\n   *\n   * <strong>Note</strong>: Only works if the configured Store is also synchronous.\n   *\n   * @remarks\n   * - The array of cookies returned will be sorted according to {@link cookieCompare}.\n   *\n   * - The {@link Cookie.lastAccessed} property will be updated on all returned cookies.\n   *\n   * @param url - The domain to store the cookie with.\n   * @param options - Configuration settings to use when retrieving the cookies.\n   */\n  getCookiesSync(url, options) {\n    return this.callSync(this.getCookies.bind(this, url, options)) ?? [];\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  getCookieString(url, options, callback) {\n    if (typeof options === \"function\") {\n      callback = options;\n      options = void 0;\n    }\n    const promiseCallback = createPromiseCallback(callback);\n    const next = function(err, cookies) {\n      if (err) {\n        promiseCallback.callback(err);\n      } else {\n        promiseCallback.callback(\n          null,\n          cookies?.sort(cookieCompare).map((c) => c.cookieString()).join(\"; \")\n        );\n      }\n    };\n    this.getCookies(url, options, next);\n    return promiseCallback.promise;\n  }\n  /**\n   * Synchronous version of `.getCookieString()`. Accepts the same options as `.getCookies()` but returns a string suitable for a\n   * `Cookie` header rather than an Array.\n   *\n   * <strong>Note</strong>: Only works if the configured Store is also synchronous.\n   *\n   * @param url - The domain to store the cookie with.\n   * @param options - Configuration settings to use when retrieving the cookies.\n   */\n  getCookieStringSync(url, options) {\n    return this.callSync(\n      options ? this.getCookieString.bind(this, url, options) : this.getCookieString.bind(this, url)\n    ) ?? \"\";\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  getSetCookieStrings(url, options, callback) {\n    if (typeof options === \"function\") {\n      callback = options;\n      options = void 0;\n    }\n    const promiseCallback = createPromiseCallback(\n      callback\n    );\n    const next = function(err, cookies) {\n      if (err) {\n        promiseCallback.callback(err);\n      } else {\n        promiseCallback.callback(\n          null,\n          cookies?.map((c) => {\n            return c.toString();\n          })\n        );\n      }\n    };\n    this.getCookies(url, options, next);\n    return promiseCallback.promise;\n  }\n  /**\n   * Synchronous version of `.getSetCookieStrings()`. Returns an array of strings suitable for `Set-Cookie` headers.\n   * Accepts the same options as `.getCookies()`.\n   *\n   * <strong>Note</strong>: Only works if the configured Store is also synchronous.\n   *\n   * @param url - The domain to store the cookie with.\n   * @param options - Configuration settings to use when retrieving the cookies.\n   */\n  getSetCookieStringsSync(url, options = {}) {\n    return this.callSync(this.getSetCookieStrings.bind(this, url, options)) ?? [];\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  serialize(callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    let type = this.store.constructor.name;\n    if (isObject(type)) {\n      type = null;\n    }\n    const serialized = {\n      // The version of tough-cookie that serialized this jar. Generally a good\n      // practice since future versions can make data import decisions based on\n      // known past behavior. When/if this matters, use `semver`.\n      version: `tough-cookie@${version}`,\n      // add the store type, to make humans happy:\n      storeType: type,\n      // CookieJar configuration:\n      rejectPublicSuffixes: this.rejectPublicSuffixes,\n      enableLooseMode: this.enableLooseMode,\n      allowSpecialUseDomain: this.allowSpecialUseDomain,\n      prefixSecurity: getNormalizedPrefixSecurity(this.prefixSecurity),\n      // this gets filled from getAllCookies:\n      cookies: []\n    };\n    if (typeof this.store.getAllCookies !== \"function\") {\n      return promiseCallback.reject(\n        new Error(\n          \"store does not support getAllCookies and cannot be serialized\"\n        )\n      );\n    }\n    this.store.getAllCookies((err, cookies) => {\n      if (err) {\n        promiseCallback.callback(err);\n        return;\n      }\n      if (cookies == null) {\n        promiseCallback.callback(null, serialized);\n        return;\n      }\n      serialized.cookies = cookies.map((cookie) => {\n        const serializedCookie = cookie.toJSON();\n        delete serializedCookie.creationIndex;\n        return serializedCookie;\n      });\n      promiseCallback.callback(null, serialized);\n    });\n    return promiseCallback.promise;\n  }\n  /**\n   * Serialize the CookieJar if the underlying store supports `.getAllCookies`.\n   *\n   * <strong>Note</strong>: Only works if the configured Store is also synchronous.\n   */\n  serializeSync() {\n    return this.callSync((callback) => {\n      this.serialize(callback);\n    });\n  }\n  /**\n   * Alias of {@link CookieJar.serializeSync}. Allows the cookie to be serialized\n   * with `JSON.stringify(cookieJar)`.\n   */\n  toJSON() {\n    return this.serializeSync();\n  }\n  /**\n   * Use the class method CookieJar.deserialize instead of calling this directly\n   * @internal\n   */\n  _importCookies(serialized, callback) {\n    let cookies = void 0;\n    if (serialized && typeof serialized === \"object\" && inOperator(\"cookies\", serialized) && Array.isArray(serialized.cookies)) {\n      cookies = serialized.cookies;\n    }\n    if (!cookies) {\n      callback(new Error(\"serialized jar has no cookies array\"), void 0);\n      return;\n    }\n    cookies = cookies.slice();\n    const putNext = (err) => {\n      if (err) {\n        callback(err, void 0);\n        return;\n      }\n      if (Array.isArray(cookies)) {\n        if (!cookies.length) {\n          callback(err, this);\n          return;\n        }\n        let cookie;\n        try {\n          cookie = Cookie.fromJSON(cookies.shift());\n        } catch (e) {\n          callback(e instanceof Error ? e : new Error(), void 0);\n          return;\n        }\n        if (cookie === void 0) {\n          putNext(null);\n          return;\n        }\n        this.store.putCookie(cookie, putNext);\n      }\n    };\n    putNext(null);\n  }\n  /**\n   * @internal\n   */\n  _importCookiesSync(serialized) {\n    this.callSync(this._importCookies.bind(this, serialized));\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  clone(newStore, callback) {\n    if (typeof newStore === \"function\") {\n      callback = newStore;\n      newStore = void 0;\n    }\n    const promiseCallback = createPromiseCallback(callback);\n    const cb = promiseCallback.callback;\n    this.serialize((err, serialized) => {\n      if (err) {\n        return promiseCallback.reject(err);\n      }\n      return _CookieJar.deserialize(serialized ?? \"\", newStore, cb);\n    });\n    return promiseCallback.promise;\n  }\n  /**\n   * @internal\n   */\n  _cloneSync(newStore) {\n    const cloneFn = newStore && typeof newStore !== \"function\" ? this.clone.bind(this, newStore) : this.clone.bind(this);\n    return this.callSync((callback) => {\n      cloneFn(callback);\n    });\n  }\n  /**\n   * Produces a deep clone of this CookieJar. Modifications to the original do\n   * not affect the clone, and vice versa.\n   *\n   * <strong>Note</strong>: Only works if both the configured Store and destination\n   * Store are synchronous.\n   *\n   * @remarks\n   * - When no {@link Store} is provided, a new {@link MemoryCookieStore} will be used.\n   *\n   * - Transferring between store types is supported so long as the source\n   *     implements `.getAllCookies()` and the destination implements `.putCookie()`.\n   *\n   * @param newStore - The target {@link Store} to clone cookies into.\n   */\n  cloneSync(newStore) {\n    if (!newStore) {\n      return this._cloneSync();\n    }\n    if (!newStore.synchronous) {\n      throw new Error(\n        \"CookieJar clone destination store is not synchronous; use async API instead.\"\n      );\n    }\n    return this._cloneSync(newStore);\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  removeAllCookies(callback) {\n    const promiseCallback = createPromiseCallback(callback);\n    const cb = promiseCallback.callback;\n    const store = this.store;\n    if (typeof store.removeAllCookies === \"function\" && store.removeAllCookies !== Store.prototype.removeAllCookies) {\n      store.removeAllCookies(cb);\n      return promiseCallback.promise;\n    }\n    store.getAllCookies((err, cookies) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      if (!cookies) {\n        cookies = [];\n      }\n      if (cookies.length === 0) {\n        cb(null, void 0);\n        return;\n      }\n      let completedCount = 0;\n      const removeErrors = [];\n      const removeCookieCb = function removeCookieCb2(removeErr) {\n        if (removeErr) {\n          removeErrors.push(removeErr);\n        }\n        completedCount++;\n        if (completedCount === cookies.length) {\n          if (removeErrors[0]) cb(removeErrors[0]);\n          else cb(null, void 0);\n          return;\n        }\n      };\n      cookies.forEach((cookie) => {\n        store.removeCookie(\n          cookie.domain,\n          cookie.path,\n          cookie.key,\n          removeCookieCb\n        );\n      });\n    });\n    return promiseCallback.promise;\n  }\n  /**\n   * Removes all cookies from the CookieJar.\n   *\n   * <strong>Note</strong>: Only works if the configured Store is also synchronous.\n   *\n   * @remarks\n   * - This is a new backwards-compatible feature of tough-cookie version 2.5,\n   *     so not all Stores will implement it efficiently. For Stores that do not\n   *     implement `removeAllCookies`, the fallback is to call `removeCookie` after\n   *     `getAllCookies`.\n   *\n   * - If `getAllCookies` fails or isn't implemented in the Store, an error is returned.\n   *\n   * - If one or more of the `removeCookie` calls fail, only the first error is returned.\n   */\n  removeAllCookiesSync() {\n    this.callSync((callback) => {\n      this.removeAllCookies(callback);\n    });\n  }\n  /**\n   * @internal No doc because this is the overload implementation\n   */\n  static deserialize(strOrObj, store, callback) {\n    if (typeof store === \"function\") {\n      callback = store;\n      store = void 0;\n    }\n    const promiseCallback = createPromiseCallback(callback);\n    let serialized;\n    if (typeof strOrObj === \"string\") {\n      try {\n        serialized = JSON.parse(strOrObj);\n      } catch (e) {\n        return promiseCallback.reject(e instanceof Error ? e : new Error());\n      }\n    } else {\n      serialized = strOrObj;\n    }\n    const readSerializedProperty = (property) => {\n      return serialized && typeof serialized === \"object\" && inOperator(property, serialized) ? serialized[property] : void 0;\n    };\n    const readSerializedBoolean = (property) => {\n      const value = readSerializedProperty(property);\n      return typeof value === \"boolean\" ? value : void 0;\n    };\n    const readSerializedString = (property) => {\n      const value = readSerializedProperty(property);\n      return typeof value === \"string\" ? value : void 0;\n    };\n    const jar = new _CookieJar(store, {\n      rejectPublicSuffixes: readSerializedBoolean(\"rejectPublicSuffixes\"),\n      looseMode: readSerializedBoolean(\"enableLooseMode\"),\n      allowSpecialUseDomain: readSerializedBoolean(\"allowSpecialUseDomain\"),\n      prefixSecurity: getNormalizedPrefixSecurity(\n        readSerializedString(\"prefixSecurity\") ?? \"silent\"\n      )\n    });\n    jar._importCookies(serialized, (err) => {\n      if (err) {\n        promiseCallback.callback(err);\n        return;\n      }\n      promiseCallback.callback(null, jar);\n    });\n    return promiseCallback.promise;\n  }\n  /**\n   * A new CookieJar is created and the serialized {@link Cookie} values are added to\n   * the underlying store. Each {@link Cookie} is added via `store.putCookie(...)` in\n   * the order in which they appear in the serialization.\n   *\n   * <strong>Note</strong>: Only works if the configured Store is also synchronous.\n   *\n   * @remarks\n   * - When no {@link Store} is provided, a new {@link MemoryCookieStore} will be used.\n   *\n   * - As a convenience, if `strOrObj` is a string, it is passed through `JSON.parse` first.\n   *\n   * @param strOrObj - A JSON string or object representing the deserialized cookies.\n   * @param store - The underlying store to persist the deserialized cookies into.\n   */\n  static deserializeSync(strOrObj, store) {\n    const serialized = typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n    const readSerializedProperty = (property) => {\n      return serialized && typeof serialized === \"object\" && inOperator(property, serialized) ? serialized[property] : void 0;\n    };\n    const readSerializedBoolean = (property) => {\n      const value = readSerializedProperty(property);\n      return typeof value === \"boolean\" ? value : void 0;\n    };\n    const readSerializedString = (property) => {\n      const value = readSerializedProperty(property);\n      return typeof value === \"string\" ? value : void 0;\n    };\n    const jar = new _CookieJar(store, {\n      rejectPublicSuffixes: readSerializedBoolean(\"rejectPublicSuffixes\"),\n      looseMode: readSerializedBoolean(\"enableLooseMode\"),\n      allowSpecialUseDomain: readSerializedBoolean(\"allowSpecialUseDomain\"),\n      prefixSecurity: getNormalizedPrefixSecurity(\n        readSerializedString(\"prefixSecurity\") ?? \"silent\"\n      )\n    });\n    if (!jar.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n    jar._importCookiesSync(serialized);\n    return jar;\n  }\n  /**\n   * Alias of {@link CookieJar.deserializeSync}.\n   *\n   * @remarks\n   * - When no {@link Store} is provided, a new {@link MemoryCookieStore} will be used.\n   *\n   * - As a convenience, if `strOrObj` is a string, it is passed through `JSON.parse` first.\n   *\n   * @param jsonString - A JSON string or object representing the deserialized cookies.\n   * @param store - The underlying store to persist the deserialized cookies into.\n   */\n  static fromJSON(jsonString, store) {\n    return _CookieJar.deserializeSync(jsonString, store);\n  }\n};\n\n// lib/cookie/permutePath.ts\nfunction permutePath(path) {\n  if (path === \"/\") {\n    return [\"/\"];\n  }\n  const permutations = [path];\n  while (path.length > 1) {\n    const lindex = path.lastIndexOf(\"/\");\n    if (lindex === 0) {\n      break;\n    }\n    path = path.slice(0, lindex);\n    permutations.push(path);\n  }\n  permutations.push(\"/\");\n  return permutations;\n}\n\n// lib/cookie/index.ts\nfunction parse2(str, options) {\n  return Cookie.parse(str, options);\n}\nfunction fromJSON2(str) {\n  return Cookie.fromJSON(str);\n}\n\n/*!\n * Copyright (c) 2015-2020, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tough-cookie/dist/index.js\n"));

/***/ })

}]);